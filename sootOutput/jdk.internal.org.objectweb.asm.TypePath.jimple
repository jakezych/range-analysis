public final class jdk.internal.org.objectweb.asm.TypePath extends java.lang.Object
{
    public static final int ARRAY_ELEMENT;
    public static final int INNER_TYPE;
    public static final int WILDCARD_BOUND;
    public static final int TYPE_ARGUMENT;
    private final byte[] typePathContainer;
    private final int typePathOffset;

    void <init>(byte[], int)
    {
        jdk.internal.org.objectweb.asm.TypePath r0;
        byte[] r1;
        int i0;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] typePathContainer> = r1;

        r0.<jdk.internal.org.objectweb.asm.TypePath: int typePathOffset> = i0;

        return;
    }

    public int getLength()
    {
        jdk.internal.org.objectweb.asm.TypePath r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        $r1 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] typePathContainer>;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypePath: int typePathOffset>;

        $b1 = $r1[$i0];

        return $b1;
    }

    public int getStep(int)
    {
        jdk.internal.org.objectweb.asm.TypePath r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        byte $b5;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        i0 := @parameter0: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] typePathContainer>;

        $i2 = r0.<jdk.internal.org.objectweb.asm.TypePath: int typePathOffset>;

        $i1 = 2 * i0;

        $i3 = $i2 + $i1;

        $i4 = $i3 + 1;

        $b5 = $r1[$i4];

        return $b5;
    }

    public int getStepArgument(int)
    {
        jdk.internal.org.objectweb.asm.TypePath r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        byte $b5;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        i0 := @parameter0: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] typePathContainer>;

        $i2 = r0.<jdk.internal.org.objectweb.asm.TypePath: int typePathOffset>;

        $i1 = 2 * i0;

        $i3 = $i2 + $i1;

        $i4 = $i3 + 2;

        $b5 = $r1[$i4];

        return $b5;
    }

    public static jdk.internal.org.objectweb.asm.TypePath fromString(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, i8, i10;
        jdk.internal.org.objectweb.asm.ByteVector $r1;
        byte $b3;
        byte[] $r4, $r6;
        jdk.internal.org.objectweb.asm.TypePath $r5;
        java.lang.IllegalArgumentException $r7, $r9;
        char c9, c11;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        return null;

     label02:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r1.<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>(i0);

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(0);

        i8 = 0;

     label03:
        if i8 >= i0 goto label13;

        $i4 = i8;

        i8 = i8 + 1;

        c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        if c9 != 91 goto label04;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(0, 0);

        goto label12;

     label04:
        if c9 != 46 goto label05;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(1, 0);

        goto label12;

     label05:
        if c9 != 42 goto label06;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(2, 0);

        goto label12;

     label06:
        if c9 < 48 goto label11;

        if c9 > 57 goto label11;

        i10 = c9 - 48;

     label07:
        if i8 >= i0 goto label10;

        $i5 = i8;

        i8 = i8 + 1;

        c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        if c11 < 48 goto label08;

        if c11 > 57 goto label08;

        $i6 = i10 * 10;

        $i7 = $i6 + c11;

        i10 = $i7 - 48;

        goto label07;

     label08:
        if c11 != 59 goto label09;

        goto label10;

     label09:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label10:
        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(3, i10);

        goto label12;

     label11:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label12:
        goto label03;

     label13:
        $r4 = $r1.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $i1 = $r1.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i2 = $i1 / 2;

        $b3 = (byte) $i2;

        $r4[0] = $b3;

        $r5 = new jdk.internal.org.objectweb.asm.TypePath;

        $r6 = $r1.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        specialinvoke $r5.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($r6, 0);

        return $r5;
    }

    public java.lang.String toString()
    {
        jdk.internal.org.objectweb.asm.TypePath r0;
        int i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r3;
        java.lang.AssertionError $r9;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        i0 = virtualinvoke r0.<jdk.internal.org.objectweb.asm.TypePath: int getLength()>();

        $r1 = new java.lang.StringBuilder;

        $i1 = i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        i4 = 0;

     label1:
        if i4 >= i0 goto label8;

        $i2 = virtualinvoke r0.<jdk.internal.org.objectweb.asm.TypePath: int getStep(int)>(i4);

        tableswitch($i2)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        goto label7;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label7;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42);

        goto label7;

     label5:
        $i3 = virtualinvoke r0.<jdk.internal.org.objectweb.asm.TypePath: int getStepArgument(int)>(i4);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        goto label7;

     label6:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label7:
        i4 = i4 + 1;

        goto label1;

     label8:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void put(jdk.internal.org.objectweb.asm.TypePath, jdk.internal.org.objectweb.asm.ByteVector)
    {
        jdk.internal.org.objectweb.asm.TypePath r0;
        int $i0, $i2, i3, $i4;
        byte[] $r1, $r3;
        byte $b1;
        jdk.internal.org.objectweb.asm.ByteVector r2;

        r0 := @parameter0: jdk.internal.org.objectweb.asm.TypePath;

        r2 := @parameter1: jdk.internal.org.objectweb.asm.ByteVector;

        if r0 != null goto label1;

        virtualinvoke r2.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(0);

        goto label2;

     label1:
        $r1 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] typePathContainer>;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypePath: int typePathOffset>;

        $b1 = $r1[$i0];

        $i2 = $b1 * 2;

        i3 = $i2 + 1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] typePathContainer>;

        $i4 = r0.<jdk.internal.org.objectweb.asm.TypePath: int typePathOffset>;

        virtualinvoke r2.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r3, $i4, i3);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.TypePath: int TYPE_ARGUMENT> = 3;

        <jdk.internal.org.objectweb.asm.TypePath: int WILDCARD_BOUND> = 2;

        <jdk.internal.org.objectweb.asm.TypePath: int INNER_TYPE> = 1;

        <jdk.internal.org.objectweb.asm.TypePath: int ARRAY_ELEMENT> = 0;

        return;
    }
}

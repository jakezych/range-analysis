public final class jdk.internal.module.IllegalAccessLogger$isJavaBase__28 extends java.lang.Object implements java.util.function.Predicate
{
    jdk.internal.module.IllegalAccessLogger cap0;

    public static java.util.function.Predicate bootstrap$(jdk.internal.module.IllegalAccessLogger)
    {
        jdk.internal.module.IllegalAccessLogger $r0;
        jdk.internal.module.IllegalAccessLogger$isJavaBase__28 $r1;

        $r0 := @parameter0: jdk.internal.module.IllegalAccessLogger;

        $r1 = new jdk.internal.module.IllegalAccessLogger$isJavaBase__28;

        specialinvoke $r1.<jdk.internal.module.IllegalAccessLogger$isJavaBase__28: void <init>(jdk.internal.module.IllegalAccessLogger)>($r0);

        return $r1;
    }

    public void <init>(jdk.internal.module.IllegalAccessLogger)
    {
        jdk.internal.module.IllegalAccessLogger$isJavaBase__28 $r0;
        jdk.internal.module.IllegalAccessLogger $r1;

        $r0 := @this: jdk.internal.module.IllegalAccessLogger$isJavaBase__28;

        $r1 := @parameter0: jdk.internal.module.IllegalAccessLogger;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<jdk.internal.module.IllegalAccessLogger$isJavaBase__28: jdk.internal.module.IllegalAccessLogger cap0> = $r1;

        return;
    }

    public boolean test(java.lang.Object)
    {
        jdk.internal.module.IllegalAccessLogger$isJavaBase__28 $r0;
        java.lang.Object $r1;
        java.lang.StackWalker$StackFrame $r2;
        jdk.internal.module.IllegalAccessLogger $r3;
        boolean $z0;

        $r0 := @this: jdk.internal.module.IllegalAccessLogger$isJavaBase__28;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.StackWalker$StackFrame) $r1;

        $r3 = $r0.<jdk.internal.module.IllegalAccessLogger$isJavaBase__28: jdk.internal.module.IllegalAccessLogger cap0>;

        $z0 = virtualinvoke $r3.<jdk.internal.module.IllegalAccessLogger: boolean isJavaBase(java.lang.StackWalker$StackFrame)>($r2);

        return $z0;
    }
}

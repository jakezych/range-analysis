public final class jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor extends jdk.internal.org.objectweb.asm.signature.SignatureVisitor
{
    private static final java.lang.String COMMA_SEPARATOR;
    private static final java.lang.String EXTENDS_SEPARATOR;
    private static final java.lang.String IMPLEMENTS_SEPARATOR;
    private final boolean isInterface;
    private final java.lang.StringBuilder declaration;
    private java.lang.StringBuilder returnType;
    private java.lang.StringBuilder exceptions;
    private boolean formalTypeParameterVisited;
    private boolean interfaceBoundVisited;
    private boolean parameterTypeVisited;
    private boolean interfaceVisited;
    private int argumentStack;
    private int arrayStack;
    private java.lang.String separator;

    public void <init>(int)
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        boolean $z0;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        i0 := @parameter0: int;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.signature.SignatureVisitor: void <init>(int)>(458752);

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = "";

        $i1 = i0 & 512;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean isInterface> = $z0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration> = $r1;

        return;
    }

    private void <init>(java.lang.StringBuilder)
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        java.lang.StringBuilder r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.signature.SignatureVisitor: void <init>(int)>(458752);

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = "";

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean isInterface> = 0;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration> = r1;

        return;
    }

    public void visitFormalTypeParameter(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String r3, $r5;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        $z0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean formalTypeParameterVisited>;

        if $z0 == 0 goto label1;

        $r5 = ", ";

        goto label2;

     label1:
        $r5 = "<";

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean formalTypeParameterVisited> = 1;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean interfaceBoundVisited> = 0;

        return;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitClassBound()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = " extends ";

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void startType()>();

        return r0;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        boolean $z0;
        java.lang.String $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $z0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean interfaceBoundVisited>;

        if $z0 == 0 goto label1;

        $r2 = ", ";

        goto label2;

     label1:
        $r2 = " extends ";

     label2:
        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = $r2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean interfaceBoundVisited> = 1;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void startType()>();

        return r0;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitSuperclass()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void endFormals()>();

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = " extends ";

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void startType()>();

        return r0;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitInterface()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        boolean $z0, $z1;
        java.lang.String $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $z0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean interfaceVisited>;

        if $z0 == 0 goto label1;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = ", ";

        goto label4;

     label1:
        $z1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean isInterface>;

        if $z1 == 0 goto label2;

        $r2 = " extends ";

        goto label3;

     label2:
        $r2 = " implements ";

     label3:
        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = $r2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean interfaceVisited> = 1;

     label4:
        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void startType()>();

        return r0;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitParameterType()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void endFormals()>();

        $z0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean parameterTypeVisited>;

        if $z0 == 0 goto label1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label2;

     label1:
        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean parameterTypeVisited> = 1;

     label2:
        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void startType()>();

        return r0;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitReturnType()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0, $r6;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r5, $r7;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void endFormals()>();

        $z0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean parameterTypeVisited>;

        if $z0 == 0 goto label1;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean parameterTypeVisited> = 0;

        goto label2;

     label1:
        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label2:
        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder returnType> = $r5;

        $r6 = new jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $r7 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder returnType>;

        specialinvoke $r6.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void <init>(java.lang.StringBuilder)>($r7);

        return $r6;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitExceptionType()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder exceptions>;

        if $r1 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder exceptions> = $r6;

        goto label2;

     label1:
        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder exceptions>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r4 = new jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder exceptions>;

        specialinvoke $r4.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void <init>(java.lang.StringBuilder)>($r5);

        return $r4;
    }

    public void visitBaseType(char)
    {
        char c0;
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        java.lang.IllegalArgumentException $r19;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        c0 := @parameter0: char;

        tableswitch(c0)
        {
            case 66: goto label02;
            case 67: goto label07;
            case 68: goto label09;
            case 69: goto label10;
            case 70: goto label08;
            case 71: goto label10;
            case 72: goto label10;
            case 73: goto label05;
            case 74: goto label03;
            case 75: goto label10;
            case 76: goto label10;
            case 77: goto label10;
            case 78: goto label10;
            case 79: goto label10;
            case 80: goto label10;
            case 81: goto label10;
            case 82: goto label10;
            case 83: goto label06;
            case 84: goto label10;
            case 85: goto label10;
            case 86: goto label01;
            case 87: goto label10;
            case 88: goto label10;
            case 89: goto label10;
            case 90: goto label04;
            default: goto label10;
        };

     label01:
        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("void");

        goto label11;

     label02:
        $r17 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byte");

        goto label11;

     label03:
        $r7 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("long");

        goto label11;

     label04:
        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("boolean");

        goto label11;

     label05:
        $r9 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int");

        goto label11;

     label06:
        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("short");

        goto label11;

     label07:
        $r15 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("char");

        goto label11;

     label08:
        $r11 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("float");

        goto label11;

     label09:
        $r13 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("double");

        goto label11;

     label10:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r19;

     label11:
        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void endType()>();

        return;
    }

    public void visitTypeVariable(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        java.lang.String $r1, r4;
        java.lang.StringBuilder $r2, $r3;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = "";

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void endType()>();

        return;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitArrayType()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int $i0, $i1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void startType()>();

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack>;

        $i1 = $i0 | 1;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack> = $i1;

        return r0;
    }

    public void visitClassType(java.lang.String)
    {
        java.lang.String r0, $r1, $r3, $r6, $r9, $r12;
        boolean $z0, $z2, $z3;
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r2;
        java.lang.StringBuilder $r4, $r5, $r10, $r11;
        int $i0, $i1, $i2, $i3;

        r2 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        r0 := @parameter0: java.lang.String;

        $r1 = "java/lang/Object";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label5;

        $i2 = r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i3 = $i2 % 2;

        if $i3 != 0 goto label1;

        $z2 = r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean parameterTypeVisited>;

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label4;

        $r10 = r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        $r9 = r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label4:
        goto label6;

     label5:
        $r4 = r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        $r3 = r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label6:
        r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = "";

        $i0 = r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i1 = $i0 * 2;

        r2.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack> = $i1;

        return;
    }

    public void visitInnerClassType(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r1, $r4, $r5, $r9;
        java.lang.String $r3, r6, $r7;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        r6 := @parameter0: java.lang.String;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i1 = $i0 % 2;

        if $i1 == 0 goto label1;

        $r9 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

     label1:
        $i2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i3 = $i2 / 2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack> = $i3;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r4 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke r6.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String separator> = "";

        $i4 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i5 = $i4 * 2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack> = $i5;

        return;
    }

    public void visitTypeArgument()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r3, $r5;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i1 = $i0 % 2;

        if $i1 != 0 goto label1;

        $i2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i3 = $i2 + 1;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack> = $i3;

        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        goto label2;

     label1:
        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        return;
    }

    public jdk.internal.org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1, $r3, $r5, $r7;
        char c2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        c2 := @parameter0: char;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i1 = $i0 % 2;

        if $i1 != 0 goto label1;

        $i3 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i4 = $i3 + 1;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack> = $i4;

        $r7 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        goto label2;

     label1:
        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        if c2 != 43 goto label3;

        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("? extends ");

        goto label4;

     label3:
        if c2 != 45 goto label4;

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("? super ");

     label4:
        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void startType()>();

        return r0;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i1 = $i0 % 2;

        if $i1 == 0 goto label1;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

     label1:
        $i2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack>;

        $i3 = $i2 / 2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int argumentStack> = $i3;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: void endType()>();

        return;
    }

    public java.lang.String getDeclaration()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getReturnType()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r3;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder returnType>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder returnType>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r3;
    }

    public java.lang.String getExceptions()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r3;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder exceptions>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder exceptions>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r3;
    }

    private void endFormals()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        boolean $z0;
        java.lang.StringBuilder $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $z0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean formalTypeParameterVisited>;

        if $z0 == 0 goto label1;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: boolean formalTypeParameterVisited> = 0;

     label1:
        return;
    }

    private void startType()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int $i0, $i1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack>;

        $i1 = $i0 * 2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack> = $i1;

        return;
    }

    private void endType()
    {
        jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack>;

        $i1 = $i0 % 2;

        if $i1 != 0 goto label1;

        $i6 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack>;

        $i7 = $i6 / 2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack> = $i7;

        goto label2;

     label1:
        $i2 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack>;

        $i3 = $i2 % 2;

        if $i3 == 0 goto label2;

        $i4 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack>;

        $i5 = $i4 / 2;

        r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: int arrayStack> = $i5;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.StringBuilder declaration>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String IMPLEMENTS_SEPARATOR> = " implements ";

        <jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String EXTENDS_SEPARATOR> = " extends ";

        <jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor: java.lang.String COMMA_SEPARATOR> = ", ";

        return;
    }
}

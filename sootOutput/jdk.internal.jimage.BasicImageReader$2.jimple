class jdk.internal.jimage.BasicImageReader$2 extends java.lang.Object implements java.security.PrivilegedAction
{
    final jdk.internal.jimage.BasicImageReader this$0;

    void <init>(jdk.internal.jimage.BasicImageReader)
    {
        jdk.internal.jimage.BasicImageReader$2 r0;
        jdk.internal.jimage.BasicImageReader r1;

        r0 := @this: jdk.internal.jimage.BasicImageReader$2;

        r1 := @parameter0: jdk.internal.jimage.BasicImageReader;

        r0.<jdk.internal.jimage.BasicImageReader$2: jdk.internal.jimage.BasicImageReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void run()
    {
        java.lang.Class $r0, r10;
        java.lang.ClassLoader $r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Method r3;
        jdk.internal.jimage.BasicImageReader$2 r4;
        jdk.internal.jimage.BasicImageReader $r5;
        java.lang.Object[] $r6;
        java.nio.channels.FileChannel $r7;
        java.lang.ReflectiveOperationException $r9;

        r4 := @this: jdk.internal.jimage.BasicImageReader$2;

        $r0 = class "Ljdk/internal/jimage/BasicImageReader;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r1 != null goto label4;

     label1:
        r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.nio.ch.FileChannelImpl");

        $r2 = newarray (java.lang.Class)[0];

        r3 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setUninterruptible", $r2);

        $r5 = r4.<jdk.internal.jimage.BasicImageReader$2: jdk.internal.jimage.BasicImageReader this$0>;

        $r7 = $r5.<jdk.internal.jimage.BasicImageReader: java.nio.channels.FileChannel channel>;

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r6);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public volatile java.lang.Object run()
    {
        jdk.internal.jimage.BasicImageReader$2 r0;
        java.lang.Void $r1;

        r0 := @this: jdk.internal.jimage.BasicImageReader$2;

        $r1 = virtualinvoke r0.<jdk.internal.jimage.BasicImageReader$2: java.lang.Void run()>();

        return $r1;
    }
}

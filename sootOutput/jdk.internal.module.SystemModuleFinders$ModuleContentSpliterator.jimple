class jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator extends java.lang.Object implements java.util.Spliterator
{
    final java.lang.String moduleRoot;
    final java.util.Deque stack;
    java.util.Iterator iterator;
    static final boolean $assertionsDisabled;

    void <init>(java.lang.String) throws java.io.IOException
    {
        jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r11, $r13, $r14;
        java.lang.String r3, $r5, $r8, $r12, $r15;
        java.util.ArrayDeque $r6;
        jdk.internal.jimage.ImageReader $r7;
        jdk.internal.jimage.ImageReader$Node r9;
        java.io.IOException $r10;
        boolean $z0;
        java.util.Deque $r16;
        java.util.Iterator $r17;

        r0 := @this: jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/modules/");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.lang.String moduleRoot> = $r5;

        $r6 = new java.util.ArrayDeque;

        specialinvoke $r6.<java.util.ArrayDeque: void <init>()>();

        r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Deque stack> = $r6;

        $r7 = staticinvoke <jdk.internal.module.SystemModuleFinders$SystemImage: jdk.internal.jimage.ImageReader reader()>();

        $r8 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.lang.String moduleRoot>;

        r9 = virtualinvoke $r7.<jdk.internal.jimage.ImageReader: jdk.internal.jimage.ImageReader$Node findNode(java.lang.String)>($r8);

        if r9 == null goto label1;

        $z0 = virtualinvoke r9.<jdk.internal.jimage.ImageReader$Node: boolean isDirectory()>();

        if $z0 != 0 goto label2;

     label1:
        $r10 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.lang.String moduleRoot>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a directory");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label2:
        $r16 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Deque stack>;

        interfaceinvoke $r16.<java.util.Deque: void push(java.lang.Object)>(r9);

        $r17 = staticinvoke <java.util.Collections: java.util.Iterator emptyIterator()>();

        r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Iterator iterator> = $r17;

        return;
    }

    private java.lang.String next() throws java.io.IOException
    {
        jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator r0;
        java.util.Deque $r1, $r2, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r3, $r8;
        java.util.List $r4;
        java.util.Iterator $r5, $r7, $r16;
        java.lang.AssertionError $r6, $r15;
        java.lang.String r9, $r10, $r11;
        int $i0, $i1;
        jdk.internal.jimage.ImageReader $r12;
        jdk.internal.jimage.ImageReader$Node r13, r17, r18;

        r0 := @this: jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator;

     label1:
        $r16 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Iterator iterator>;

        $z6 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label5;

        $r7 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Iterator iterator>;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r17 = (jdk.internal.jimage.ImageReader$Node) $r8;

        r9 = virtualinvoke r17.<jdk.internal.jimage.ImageReader$Node: java.lang.String getName()>();

        $z3 = virtualinvoke r17.<jdk.internal.jimage.ImageReader$Node: boolean isDirectory()>();

        if $z3 == 0 goto label3;

        $r12 = staticinvoke <jdk.internal.module.SystemModuleFinders$SystemImage: jdk.internal.jimage.ImageReader reader()>();

        r13 = virtualinvoke $r12.<jdk.internal.jimage.ImageReader: jdk.internal.jimage.ImageReader$Node findNode(java.lang.String)>(r9);

        $z4 = <jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: boolean $assertionsDisabled>;

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke r13.<jdk.internal.jimage.ImageReader$Node: boolean isDirectory()>();

        if $z5 != 0 goto label2;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label2:
        $r14 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Deque stack>;

        interfaceinvoke $r14.<java.util.Deque: void push(java.lang.Object)>(r13);

        goto label4;

     label3:
        $r10 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.lang.String moduleRoot>;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r11;

     label4:
        goto label1;

     label5:
        $r1 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Deque stack>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        return null;

     label6:
        $r2 = r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Deque stack>;

        $r3 = interfaceinvoke $r2.<java.util.Deque: java.lang.Object poll()>();

        r18 = (jdk.internal.jimage.ImageReader$Node) $r3;

        $z1 = <jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label7;

        $z2 = virtualinvoke r18.<jdk.internal.jimage.ImageReader$Node: boolean isDirectory()>();

        if $z2 != 0 goto label7;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label7:
        $r4 = virtualinvoke r18.<jdk.internal.jimage.ImageReader$Node: java.util.List getChildren()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.util.Iterator iterator> = $r5;

        goto label1;
    }

    public boolean tryAdvance(java.util.function.Consumer)
    {
        jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator r0;
        java.lang.String r1;
        java.util.function.Consumer r2;
        java.io.IOException $r3;
        java.io.UncheckedIOException $r5;

        r0 := @this: jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator;

        r2 := @parameter0: java.util.function.Consumer;

     label1:
        r1 = virtualinvoke r0.<jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: java.lang.String next()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r5 = new java.io.UncheckedIOException;

        specialinvoke $r5.<java.io.UncheckedIOException: void <init>(java.io.IOException)>($r3);

        throw $r5;

     label4:
        if r1 == null goto label5;

        interfaceinvoke r2.<java.util.function.Consumer: void accept(java.lang.Object)>(r1);

        return 1;

     label5:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.Spliterator trySplit()
    {
        jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator r0;

        r0 := @this: jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator;

        return null;
    }

    public int characteristics()
    {
        jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator r0;

        r0 := @this: jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator;

        return 1281;
    }

    public long estimateSize()
    {
        jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator r0;

        r0 := @this: jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator;

        return 9223372036854775807L;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Ljdk/internal/module/SystemModuleFinders;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator: boolean $assertionsDisabled> = $z1;

        return;
    }
}

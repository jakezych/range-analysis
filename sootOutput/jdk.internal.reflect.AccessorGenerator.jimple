class jdk.internal.reflect.AccessorGenerator extends java.lang.Object implements jdk.internal.reflect.ClassFileConstants
{
    static final jdk.internal.misc.Unsafe unsafe;
    protected static final short S0;
    protected static final short S1;
    protected static final short S2;
    protected static final short S3;
    protected static final short S4;
    protected static final short S5;
    protected static final short S6;
    protected jdk.internal.reflect.ClassFileAssembler asm;
    protected int modifiers;
    protected short thisClass;
    protected short superClass;
    protected short targetClass;
    protected short throwableClass;
    protected short classCastClass;
    protected short nullPointerClass;
    protected short illegalArgumentClass;
    protected short invocationTargetClass;
    protected short initIdx;
    protected short initNameAndTypeIdx;
    protected short initStringNameAndTypeIdx;
    protected short nullPointerCtorIdx;
    protected short illegalArgumentCtorIdx;
    protected short illegalArgumentStringCtorIdx;
    protected short invocationTargetCtorIdx;
    protected short superCtorIdx;
    protected short objectClass;
    protected short toStringIdx;
    protected short codeIdx;
    protected short exceptionsIdx;
    protected short valueOfIdx;
    protected short booleanIdx;
    protected short booleanBoxIdx;
    protected short booleanUnboxIdx;
    protected short byteIdx;
    protected short byteBoxIdx;
    protected short byteUnboxIdx;
    protected short characterIdx;
    protected short characterBoxIdx;
    protected short characterUnboxIdx;
    protected short doubleIdx;
    protected short doubleBoxIdx;
    protected short doubleUnboxIdx;
    protected short floatIdx;
    protected short floatBoxIdx;
    protected short floatUnboxIdx;
    protected short integerIdx;
    protected short integerBoxIdx;
    protected short integerUnboxIdx;
    protected short longIdx;
    protected short longBoxIdx;
    protected short longUnboxIdx;
    protected short shortIdx;
    protected short shortBoxIdx;
    protected short shortUnboxIdx;
    protected final short NUM_COMMON_CPOOL_ENTRIES;
    protected final short NUM_BOXING_CPOOL_ENTRIES;
    protected static final java.lang.Class[] primitiveTypes;
    private jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer;

    void <init>()
    {
        jdk.internal.reflect.AccessorGenerator r0;

        r0 := @this: jdk.internal.reflect.AccessorGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short NUM_BOXING_CPOOL_ENTRIES> = 73;

        r0.<jdk.internal.reflect.AccessorGenerator: short NUM_COMMON_CPOOL_ENTRIES> = 30;

        r0.<jdk.internal.reflect.AccessorGenerator: short NUM_COMMON_CPOOL_ENTRIES> = 30;

        r0.<jdk.internal.reflect.AccessorGenerator: short NUM_BOXING_CPOOL_ENTRIES> = 73;

        return;
    }

    protected void emitCommonConstantPoolEntries()
    {
        jdk.internal.reflect.AccessorGenerator r0;
        jdk.internal.reflect.ClassFileAssembler $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16, $s17, $s18, $s19, $s20, $s21, $s22, $s23, $s24, $s25, $s26, $s27, $s28, $s29, $s30, $s31, $s32, $s33, $s34, $s35, $s36, $s37, $s38, $s39, $s40, $s41, $s42, $s43;

        r0 := @this: jdk.internal.reflect.AccessorGenerator;

        $r1 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r1.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Throwable");

        $r3 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r2 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s0 = virtualinvoke $r2.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r3.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s0);

        $r4 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s1 = virtualinvoke $r4.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short throwableClass> = $s1;

        $r5 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r5.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/ClassCastException");

        $r7 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r6 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s2 = virtualinvoke $r6.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r7.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s2);

        $r8 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s3 = virtualinvoke $r8.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short classCastClass> = $s3;

        $r9 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r9.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/NullPointerException");

        $r11 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r10 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s4 = virtualinvoke $r10.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r11.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s4);

        $r12 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s5 = virtualinvoke $r12.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short nullPointerClass> = $s5;

        $r13 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r13.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/IllegalArgumentException");

        $r15 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r14 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s6 = virtualinvoke $r14.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r15.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s6);

        $r16 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s7 = virtualinvoke $r16.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short illegalArgumentClass> = $s7;

        $r17 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r17.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/reflect/InvocationTargetException");

        $r19 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r18 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s8 = virtualinvoke $r18.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r19.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s8);

        $r20 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s9 = virtualinvoke $r20.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short invocationTargetClass> = $s9;

        $r21 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r21.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("<init>");

        $r22 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s10 = virtualinvoke $r22.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short initIdx> = $s10;

        $r23 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r23.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()V");

        $r25 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s11 = r0.<jdk.internal.reflect.AccessorGenerator: short initIdx>;

        $r24 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s12 = virtualinvoke $r24.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r25.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s11, $s12);

        $r26 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s13 = virtualinvoke $r26.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short initNameAndTypeIdx> = $s13;

        $r27 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s15 = r0.<jdk.internal.reflect.AccessorGenerator: short nullPointerClass>;

        $s14 = r0.<jdk.internal.reflect.AccessorGenerator: short initNameAndTypeIdx>;

        virtualinvoke $r27.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s15, $s14);

        $r28 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s16 = virtualinvoke $r28.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short nullPointerCtorIdx> = $s16;

        $r29 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s18 = r0.<jdk.internal.reflect.AccessorGenerator: short illegalArgumentClass>;

        $s17 = r0.<jdk.internal.reflect.AccessorGenerator: short initNameAndTypeIdx>;

        virtualinvoke $r29.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s18, $s17);

        $r30 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s19 = virtualinvoke $r30.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short illegalArgumentCtorIdx> = $s19;

        $r31 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r31.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(Ljava/lang/String;)V");

        $r33 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s20 = r0.<jdk.internal.reflect.AccessorGenerator: short initIdx>;

        $r32 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s21 = virtualinvoke $r32.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r33.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s20, $s21);

        $r34 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s22 = virtualinvoke $r34.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short initStringNameAndTypeIdx> = $s22;

        $r35 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s24 = r0.<jdk.internal.reflect.AccessorGenerator: short illegalArgumentClass>;

        $s23 = r0.<jdk.internal.reflect.AccessorGenerator: short initStringNameAndTypeIdx>;

        virtualinvoke $r35.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s24, $s23);

        $r36 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s25 = virtualinvoke $r36.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short illegalArgumentStringCtorIdx> = $s25;

        $r37 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r37.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(Ljava/lang/Throwable;)V");

        $r39 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s26 = r0.<jdk.internal.reflect.AccessorGenerator: short initIdx>;

        $r38 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s27 = virtualinvoke $r38.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r39.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s26, $s27);

        $r41 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s28 = r0.<jdk.internal.reflect.AccessorGenerator: short invocationTargetClass>;

        $r40 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s29 = virtualinvoke $r40.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r41.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s28, $s29);

        $r42 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s30 = virtualinvoke $r42.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short invocationTargetCtorIdx> = $s30;

        $r43 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s32 = r0.<jdk.internal.reflect.AccessorGenerator: short superClass>;

        $s31 = r0.<jdk.internal.reflect.AccessorGenerator: short initNameAndTypeIdx>;

        virtualinvoke $r43.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s32, $s31);

        $r44 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s33 = virtualinvoke $r44.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short superCtorIdx> = $s33;

        $r45 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r45.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Object");

        $r47 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r46 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s34 = virtualinvoke $r46.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r47.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s34);

        $r48 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s35 = virtualinvoke $r48.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short objectClass> = $s35;

        $r49 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r49.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("toString");

        $r50 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r50.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()Ljava/lang/String;");

        $r52 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r51 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s36 = virtualinvoke $r51.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s37 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s36, 1);

        $r53 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s38 = virtualinvoke $r53.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r52.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s37, $s38);

        $r55 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s39 = r0.<jdk.internal.reflect.AccessorGenerator: short objectClass>;

        $r54 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s40 = virtualinvoke $r54.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r55.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s39, $s40);

        $r56 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s41 = virtualinvoke $r56.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short toStringIdx> = $s41;

        $r57 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r57.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("Code");

        $r58 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s42 = virtualinvoke $r58.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short codeIdx> = $s42;

        $r59 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r59.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("Exceptions");

        $r60 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s43 = virtualinvoke $r60.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short exceptionsIdx> = $s43;

        return;
    }

    protected void emitBoxingContantPoolEntries()
    {
        jdk.internal.reflect.AccessorGenerator r0;
        jdk.internal.reflect.ClassFileAssembler $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16, $s17, $s18, $s19, $s20, $s21, $s22, $s23, $s24, $s25, $s26, $s27, $s28, $s29, $s30, $s31, $s32, $s33, $s34, $s35, $s36, $s37, $s38, $s39, $s40, $s41, $s42, $s43, $s44, $s45, $s46, $s47, $s48, $s49, $s50, $s51, $s52, $s53, $s54, $s55, $s56, $s57, $s58, $s59, $s60, $s61, $s62, $s63, $s64, $s65, $s66, $s67, $s68, $s69, $s70, $s71, $s72, $s73, $s74, $s75, $s76, $s77, $s78, $s79, $s80, $s81, $s82, $s83, $s84, $s85, $s86, $s87, $s88, $s89, $s90, $s91, $s92, $s93, $s94, $s95, $s96, $s97, $s98, $s99, $s100, $s101, $s102, $s103, $s104, $s105, $s106, $s107, $s108, $s109, $s110, $s111, $s112, $s113, $s114, $s115, $s116, $s117, $s118, $s119, $s120;

        r0 := @this: jdk.internal.reflect.AccessorGenerator;

        $r1 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r1.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("valueOf");

        $r2 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s0 = virtualinvoke $r2.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx> = $s0;

        $r3 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r3.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Boolean");

        $r5 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r4 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s1 = virtualinvoke $r4.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r5.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s1);

        $r6 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s2 = virtualinvoke $r6.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short booleanIdx> = $s2;

        $r7 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r7.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(Z)Ljava/lang/Boolean;");

        $r9 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s3 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r8 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s4 = virtualinvoke $r8.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r9.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s3, $s4);

        $r11 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r10 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s5 = virtualinvoke $r10.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s6 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s5, 2);

        $r12 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s7 = virtualinvoke $r12.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r11.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s6, $s7);

        $r13 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s8 = virtualinvoke $r13.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short booleanBoxIdx> = $s8;

        $r14 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r14.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("booleanValue");

        $r15 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r15.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()Z");

        $r17 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r16 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s9 = virtualinvoke $r16.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s10 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s9, 1);

        $r18 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s11 = virtualinvoke $r18.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r17.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s10, $s11);

        $r20 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r19 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s12 = virtualinvoke $r19.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s13 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s12, 6);

        $r21 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s14 = virtualinvoke $r21.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r20.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s13, $s14);

        $r22 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s15 = virtualinvoke $r22.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short booleanUnboxIdx> = $s15;

        $r23 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r23.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Byte");

        $r25 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r24 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s16 = virtualinvoke $r24.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r25.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s16);

        $r26 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s17 = virtualinvoke $r26.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short byteIdx> = $s17;

        $r27 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r27.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(B)Ljava/lang/Byte;");

        $r29 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s18 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r28 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s19 = virtualinvoke $r28.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r29.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s18, $s19);

        $r31 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r30 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s20 = virtualinvoke $r30.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s21 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s20, 2);

        $r32 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s22 = virtualinvoke $r32.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r31.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s21, $s22);

        $r33 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s23 = virtualinvoke $r33.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short byteBoxIdx> = $s23;

        $r34 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r34.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("byteValue");

        $r35 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r35.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()B");

        $r37 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r36 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s24 = virtualinvoke $r36.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s25 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s24, 1);

        $r38 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s26 = virtualinvoke $r38.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r37.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s25, $s26);

        $r40 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r39 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s27 = virtualinvoke $r39.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s28 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s27, 6);

        $r41 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s29 = virtualinvoke $r41.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r40.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s28, $s29);

        $r42 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s30 = virtualinvoke $r42.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short byteUnboxIdx> = $s30;

        $r43 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r43.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Character");

        $r45 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r44 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s31 = virtualinvoke $r44.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r45.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s31);

        $r46 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s32 = virtualinvoke $r46.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short characterIdx> = $s32;

        $r47 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r47.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(C)Ljava/lang/Character;");

        $r49 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s33 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r48 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s34 = virtualinvoke $r48.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r49.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s33, $s34);

        $r51 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r50 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s35 = virtualinvoke $r50.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s36 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s35, 2);

        $r52 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s37 = virtualinvoke $r52.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r51.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s36, $s37);

        $r53 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s38 = virtualinvoke $r53.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short characterBoxIdx> = $s38;

        $r54 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r54.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("charValue");

        $r55 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r55.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()C");

        $r57 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r56 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s39 = virtualinvoke $r56.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s40 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s39, 1);

        $r58 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s41 = virtualinvoke $r58.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r57.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s40, $s41);

        $r60 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r59 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s42 = virtualinvoke $r59.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s43 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s42, 6);

        $r61 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s44 = virtualinvoke $r61.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r60.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s43, $s44);

        $r62 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s45 = virtualinvoke $r62.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short characterUnboxIdx> = $s45;

        $r63 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r63.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Double");

        $r65 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r64 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s46 = virtualinvoke $r64.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r65.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s46);

        $r66 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s47 = virtualinvoke $r66.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short doubleIdx> = $s47;

        $r67 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r67.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(D)Ljava/lang/Double;");

        $r69 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s48 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r68 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s49 = virtualinvoke $r68.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r69.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s48, $s49);

        $r71 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r70 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s50 = virtualinvoke $r70.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s51 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s50, 2);

        $r72 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s52 = virtualinvoke $r72.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r71.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s51, $s52);

        $r73 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s53 = virtualinvoke $r73.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short doubleBoxIdx> = $s53;

        $r74 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r74.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("doubleValue");

        $r75 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r75.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()D");

        $r77 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r76 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s54 = virtualinvoke $r76.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s55 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s54, 1);

        $r78 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s56 = virtualinvoke $r78.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r77.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s55, $s56);

        $r80 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r79 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s57 = virtualinvoke $r79.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s58 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s57, 6);

        $r81 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s59 = virtualinvoke $r81.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r80.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s58, $s59);

        $r82 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s60 = virtualinvoke $r82.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short doubleUnboxIdx> = $s60;

        $r83 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r83.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Float");

        $r85 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r84 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s61 = virtualinvoke $r84.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r85.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s61);

        $r86 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s62 = virtualinvoke $r86.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short floatIdx> = $s62;

        $r87 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r87.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(F)Ljava/lang/Float;");

        $r89 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s63 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r88 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s64 = virtualinvoke $r88.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r89.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s63, $s64);

        $r91 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r90 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s65 = virtualinvoke $r90.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s66 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s65, 2);

        $r92 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s67 = virtualinvoke $r92.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r91.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s66, $s67);

        $r93 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s68 = virtualinvoke $r93.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short floatBoxIdx> = $s68;

        $r94 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r94.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("floatValue");

        $r95 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r95.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()F");

        $r97 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r96 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s69 = virtualinvoke $r96.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s70 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s69, 1);

        $r98 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s71 = virtualinvoke $r98.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r97.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s70, $s71);

        $r100 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r99 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s72 = virtualinvoke $r99.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s73 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s72, 6);

        $r101 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s74 = virtualinvoke $r101.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r100.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s73, $s74);

        $r102 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s75 = virtualinvoke $r102.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short floatUnboxIdx> = $s75;

        $r103 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r103.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Integer");

        $r105 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r104 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s76 = virtualinvoke $r104.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r105.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s76);

        $r106 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s77 = virtualinvoke $r106.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short integerIdx> = $s77;

        $r107 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r107.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(I)Ljava/lang/Integer;");

        $r109 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s78 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r108 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s79 = virtualinvoke $r108.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r109.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s78, $s79);

        $r111 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r110 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s80 = virtualinvoke $r110.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s81 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s80, 2);

        $r112 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s82 = virtualinvoke $r112.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r111.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s81, $s82);

        $r113 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s83 = virtualinvoke $r113.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short integerBoxIdx> = $s83;

        $r114 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r114.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("intValue");

        $r115 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r115.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()I");

        $r117 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r116 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s84 = virtualinvoke $r116.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s85 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s84, 1);

        $r118 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s86 = virtualinvoke $r118.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r117.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s85, $s86);

        $r120 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r119 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s87 = virtualinvoke $r119.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s88 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s87, 6);

        $r121 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s89 = virtualinvoke $r121.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r120.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s88, $s89);

        $r122 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s90 = virtualinvoke $r122.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short integerUnboxIdx> = $s90;

        $r123 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r123.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Long");

        $r125 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r124 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s91 = virtualinvoke $r124.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r125.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s91);

        $r126 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s92 = virtualinvoke $r126.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short longIdx> = $s92;

        $r127 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r127.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(J)Ljava/lang/Long;");

        $r129 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s93 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r128 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s94 = virtualinvoke $r128.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r129.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s93, $s94);

        $r131 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r130 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s95 = virtualinvoke $r130.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s96 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s95, 2);

        $r132 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s97 = virtualinvoke $r132.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r131.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s96, $s97);

        $r133 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s98 = virtualinvoke $r133.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short longBoxIdx> = $s98;

        $r134 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r134.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("longValue");

        $r135 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r135.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()J");

        $r137 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r136 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s99 = virtualinvoke $r136.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s100 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s99, 1);

        $r138 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s101 = virtualinvoke $r138.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r137.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s100, $s101);

        $r140 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r139 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s102 = virtualinvoke $r139.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s103 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s102, 6);

        $r141 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s104 = virtualinvoke $r141.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r140.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s103, $s104);

        $r142 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s105 = virtualinvoke $r142.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short longUnboxIdx> = $s105;

        $r143 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r143.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("java/lang/Short");

        $r145 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r144 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s106 = virtualinvoke $r144.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r145.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>($s106);

        $r146 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s107 = virtualinvoke $r146.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short shortIdx> = $s107;

        $r147 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r147.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("(S)Ljava/lang/Short;");

        $r149 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s108 = r0.<jdk.internal.reflect.AccessorGenerator: short valueOfIdx>;

        $r148 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s109 = virtualinvoke $r148.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r149.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s108, $s109);

        $r151 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r150 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s110 = virtualinvoke $r150.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s111 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s110, 2);

        $r152 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s112 = virtualinvoke $r152.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r151.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s111, $s112);

        $r153 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s113 = virtualinvoke $r153.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short shortBoxIdx> = $s113;

        $r154 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r154.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("shortValue");

        $r155 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r155.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>("()S");

        $r157 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r156 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s114 = virtualinvoke $r156.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s115 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s114, 1);

        $r158 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s116 = virtualinvoke $r158.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r157.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>($s115, $s116);

        $r160 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $r159 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s117 = virtualinvoke $r159.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        $s118 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short sub(short,short)>($s117, 6);

        $r161 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s119 = virtualinvoke $r161.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        virtualinvoke $r160.<jdk.internal.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>($s118, $s119);

        $r162 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s120 = virtualinvoke $r162.<jdk.internal.reflect.ClassFileAssembler: short cpi()>();

        r0.<jdk.internal.reflect.AccessorGenerator: short shortUnboxIdx> = $s120;

        return;
    }

    protected static short add(short, short)
    {
        short s0, s1, $s3;
        int $i2;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $i2 = s0 + s1;

        $s3 = (short) $i2;

        return $s3;
    }

    protected static short sub(short, short)
    {
        short s0, s1, $s3;
        int $i2;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $i2 = s0 - s1;

        $s3 = (short) $i2;

        return $s3;
    }

    protected boolean isStatic()
    {
        jdk.internal.reflect.AccessorGenerator r0;
        int $i0;
        boolean $z0;

        r0 := @this: jdk.internal.reflect.AccessorGenerator;

        $i0 = r0.<jdk.internal.reflect.AccessorGenerator: int modifiers>;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        return $z0;
    }

    protected boolean isPrivate()
    {
        jdk.internal.reflect.AccessorGenerator r0;
        int $i0;
        boolean $z0;

        r0 := @this: jdk.internal.reflect.AccessorGenerator;

        $i0 = r0.<jdk.internal.reflect.AccessorGenerator: int modifiers>;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i0);

        return $z0;
    }

    protected static java.lang.String getClassName(java.lang.Class, boolean)
    {
        java.lang.Class r0, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        boolean $z0, $z1, z2;
        java.lang.String $r1, $r2, $r5, $r8, $r9, $r13, $r15;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r10, $r11, $r14;
        java.lang.InternalError $r25;

        r0 := @parameter0: java.lang.Class;

        z2 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label10;

        $r16 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r16 goto label01;

        return "Z";

     label01:
        $r17 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r17 goto label02;

        return "B";

     label02:
        $r18 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r18 goto label03;

        return "C";

     label03:
        $r19 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r19 goto label04;

        return "D";

     label04:
        $r20 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r20 goto label05;

        return "F";

     label05:
        $r21 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r21 goto label06;

        return "I";

     label06:
        $r22 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r22 goto label07;

        return "J";

     label07:
        $r23 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r23 goto label08;

        return "S";

     label08:
        $r24 = <java.lang.Void: java.lang.Class TYPE>;

        if r0 != $r24 goto label09;

        return "V";

     label09:
        $r25 = new java.lang.InternalError;

        specialinvoke $r25.<java.lang.InternalError: void <init>(java.lang.String)>("Should have found primitive type");

        throw $r25;

     label10:
        $z1 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $r13 = staticinvoke <jdk.internal.reflect.AccessorGenerator: java.lang.String getClassName(java.lang.Class,boolean)>($r12, 1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label11:
        if z2 == 0 goto label12;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <jdk.internal.reflect.AccessorGenerator: java.lang.String internalize(java.lang.String)>($r8);

        return $r9;

     label12:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <jdk.internal.reflect.AccessorGenerator: java.lang.String internalize(java.lang.String)>($r1);

        return $r2;
    }

    private static java.lang.String internalize(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        return $r1;
    }

    protected void emitConstructor()
    {
        jdk.internal.reflect.ClassFileAssembler $r0;
        jdk.internal.reflect.AccessorGenerator r2;
        short $s0, $s1, $s2;

        r2 := @this: jdk.internal.reflect.AccessorGenerator;

        $r0 = new jdk.internal.reflect.ClassFileAssembler;

        specialinvoke $r0.<jdk.internal.reflect.ClassFileAssembler: void <init>()>();

        virtualinvoke $r0.<jdk.internal.reflect.ClassFileAssembler: void setMaxLocals(int)>(1);

        virtualinvoke $r0.<jdk.internal.reflect.ClassFileAssembler: void opc_aload_0()>();

        $s0 = r2.<jdk.internal.reflect.AccessorGenerator: short superCtorIdx>;

        virtualinvoke $r0.<jdk.internal.reflect.ClassFileAssembler: void opc_invokespecial(short,int,int)>($s0, 0, 0);

        virtualinvoke $r0.<jdk.internal.reflect.ClassFileAssembler: void opc_return()>();

        $s1 = r2.<jdk.internal.reflect.AccessorGenerator: short initIdx>;

        $s2 = virtualinvoke $r0.<jdk.internal.reflect.ClassFileAssembler: short getMaxLocals()>();

        virtualinvoke r2.<jdk.internal.reflect.AccessorGenerator: void emitMethod(short,int,jdk.internal.reflect.ClassFileAssembler,jdk.internal.reflect.ClassFileAssembler,short[])>($s1, $s2, $r0, null, null);

        return;
    }

    protected void emitMethod(short, int, jdk.internal.reflect.ClassFileAssembler, jdk.internal.reflect.ClassFileAssembler, short[])
    {
        jdk.internal.reflect.ClassFileAssembler r0, r1, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        short s0, s3, $s4, $s5, $s6, $s8, $s10, $s11, $s12, $s17, $s19, s21;
        int $i1, i2, i7, $i9, $i13, $i14, $i15, $i16, $i18, $i20, i22, i23;
        jdk.internal.reflect.AccessorGenerator r2;
        short[] r6;
        java.lang.IllegalArgumentException $r22;

        r2 := @this: jdk.internal.reflect.AccessorGenerator;

        s3 := @parameter0: short;

        i7 := @parameter1: int;

        r0 := @parameter2: jdk.internal.reflect.ClassFileAssembler;

        r1 := @parameter3: jdk.internal.reflect.ClassFileAssembler;

        r6 := @parameter4: short[];

        s0 = virtualinvoke r0.<jdk.internal.reflect.ClassFileAssembler: short getLength()>();

        s21 = 0;

        if r1 == null goto label1;

        s21 = virtualinvoke r1.<jdk.internal.reflect.ClassFileAssembler: short getLength()>();

        $i20 = s21 % 8;

        if $i20 == 0 goto label1;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal exception table");

        throw $r22;

     label1:
        $i1 = 12 + s0;

        i2 = $i1 + s21;

        i22 = s21 / 8;

        $r3 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r3.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>(1);

        $r4 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r4.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>(s3);

        $r5 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s4 = staticinvoke <jdk.internal.reflect.AccessorGenerator: short add(short,short)>(s3, 1);

        virtualinvoke $r5.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s4);

        if r6 != null goto label2;

        $r21 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r21.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>(1);

        goto label3;

     label2:
        $r7 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r7.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>(2);

     label3:
        $r8 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s5 = r2.<jdk.internal.reflect.AccessorGenerator: short codeIdx>;

        virtualinvoke $r8.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s5);

        $r9 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r9.<jdk.internal.reflect.ClassFileAssembler: void emitInt(int)>(i2);

        $r10 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s6 = virtualinvoke r0.<jdk.internal.reflect.ClassFileAssembler: short getMaxStack()>();

        virtualinvoke $r10.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s6);

        $r11 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s8 = virtualinvoke r0.<jdk.internal.reflect.ClassFileAssembler: short getMaxLocals()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(i7, $s8);

        $s10 = (short) $i9;

        virtualinvoke $r11.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s10);

        $r12 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r12.<jdk.internal.reflect.ClassFileAssembler: void emitInt(int)>(s0);

        $r13 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r13.<jdk.internal.reflect.ClassFileAssembler: void append(jdk.internal.reflect.ClassFileAssembler)>(r0);

        $r14 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s11 = (short) i22;

        virtualinvoke $r14.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s11);

        if r1 == null goto label4;

        $r20 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r20.<jdk.internal.reflect.ClassFileAssembler: void append(jdk.internal.reflect.ClassFileAssembler)>(r1);

     label4:
        $r15 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        virtualinvoke $r15.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>(0);

        if r6 == null goto label6;

        $r16 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s12 = r2.<jdk.internal.reflect.AccessorGenerator: short exceptionsIdx>;

        virtualinvoke $r16.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s12);

        $r17 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $i13 = lengthof r6;

        $i14 = 2 * $i13;

        $i15 = 2 + $i14;

        virtualinvoke $r17.<jdk.internal.reflect.ClassFileAssembler: void emitInt(int)>($i15);

        $r18 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $i16 = lengthof r6;

        $s17 = (short) $i16;

        virtualinvoke $r18.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s17);

        i23 = 0;

     label5:
        $i18 = lengthof r6;

        if i23 >= $i18 goto label6;

        $r19 = r2.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler asm>;

        $s19 = r6[i23];

        virtualinvoke $r19.<jdk.internal.reflect.ClassFileAssembler: void emitShort(short)>($s19);

        i23 = i23 + 1;

        goto label5;

     label6:
        return;
    }

    protected short indexForPrimitiveType(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.InternalError $r9;
        jdk.internal.reflect.AccessorGenerator r10;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7;

        r10 := @this: jdk.internal.reflect.AccessorGenerator;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        $s7 = r10.<jdk.internal.reflect.AccessorGenerator: short booleanIdx>;

        return $s7;

     label1:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r2 goto label2;

        $s6 = r10.<jdk.internal.reflect.AccessorGenerator: short byteIdx>;

        return $s6;

     label2:
        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

        $s5 = r10.<jdk.internal.reflect.AccessorGenerator: short characterIdx>;

        return $s5;

     label3:
        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r4 goto label4;

        $s4 = r10.<jdk.internal.reflect.AccessorGenerator: short doubleIdx>;

        return $s4;

     label4:
        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

        $s3 = r10.<jdk.internal.reflect.AccessorGenerator: short floatIdx>;

        return $s3;

     label5:
        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r6 goto label6;

        $s2 = r10.<jdk.internal.reflect.AccessorGenerator: short integerIdx>;

        return $s2;

     label6:
        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r7 goto label7;

        $s1 = r10.<jdk.internal.reflect.AccessorGenerator: short longIdx>;

        return $s1;

     label7:
        $r8 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r8 goto label8;

        $s0 = r10.<jdk.internal.reflect.AccessorGenerator: short shortIdx>;

        return $s0;

     label8:
        $r9 = new java.lang.InternalError;

        specialinvoke $r9.<java.lang.InternalError: void <init>(java.lang.String)>("Should have found primitive type");

        throw $r9;
    }

    protected short boxingMethodForPrimitiveType(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.InternalError $r9;
        jdk.internal.reflect.AccessorGenerator r10;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7;

        r10 := @this: jdk.internal.reflect.AccessorGenerator;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        $s7 = r10.<jdk.internal.reflect.AccessorGenerator: short booleanBoxIdx>;

        return $s7;

     label1:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r2 goto label2;

        $s6 = r10.<jdk.internal.reflect.AccessorGenerator: short byteBoxIdx>;

        return $s6;

     label2:
        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

        $s5 = r10.<jdk.internal.reflect.AccessorGenerator: short characterBoxIdx>;

        return $s5;

     label3:
        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r4 goto label4;

        $s4 = r10.<jdk.internal.reflect.AccessorGenerator: short doubleBoxIdx>;

        return $s4;

     label4:
        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

        $s3 = r10.<jdk.internal.reflect.AccessorGenerator: short floatBoxIdx>;

        return $s3;

     label5:
        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r6 goto label6;

        $s2 = r10.<jdk.internal.reflect.AccessorGenerator: short integerBoxIdx>;

        return $s2;

     label6:
        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r7 goto label7;

        $s1 = r10.<jdk.internal.reflect.AccessorGenerator: short longBoxIdx>;

        return $s1;

     label7:
        $r8 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r8 goto label8;

        $s0 = r10.<jdk.internal.reflect.AccessorGenerator: short shortBoxIdx>;

        return $s0;

     label8:
        $r9 = new java.lang.InternalError;

        specialinvoke $r9.<java.lang.InternalError: void <init>(java.lang.String)>("Should have found primitive type");

        throw $r9;
    }

    protected static boolean canWidenTo(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        r9 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r1 goto label02;

        $r36 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r9 != $r36 goto label15;

        return 1;

     label02:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r2 goto label04;

        $r30 = <java.lang.Byte: java.lang.Class TYPE>;

        if r9 == $r30 goto label03;

        $r31 = <java.lang.Short: java.lang.Class TYPE>;

        if r9 == $r31 goto label03;

        $r32 = <java.lang.Integer: java.lang.Class TYPE>;

        if r9 == $r32 goto label03;

        $r33 = <java.lang.Long: java.lang.Class TYPE>;

        if r9 == $r33 goto label03;

        $r34 = <java.lang.Float: java.lang.Class TYPE>;

        if r9 == $r34 goto label03;

        $r35 = <java.lang.Double: java.lang.Class TYPE>;

        if r9 != $r35 goto label15;

     label03:
        return 1;

     label04:
        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r3 goto label06;

        $r25 = <java.lang.Short: java.lang.Class TYPE>;

        if r9 == $r25 goto label05;

        $r26 = <java.lang.Integer: java.lang.Class TYPE>;

        if r9 == $r26 goto label05;

        $r27 = <java.lang.Long: java.lang.Class TYPE>;

        if r9 == $r27 goto label05;

        $r28 = <java.lang.Float: java.lang.Class TYPE>;

        if r9 == $r28 goto label05;

        $r29 = <java.lang.Double: java.lang.Class TYPE>;

        if r9 != $r29 goto label15;

     label05:
        return 1;

     label06:
        $r4 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r4 goto label08;

        $r20 = <java.lang.Character: java.lang.Class TYPE>;

        if r9 == $r20 goto label07;

        $r21 = <java.lang.Integer: java.lang.Class TYPE>;

        if r9 == $r21 goto label07;

        $r22 = <java.lang.Long: java.lang.Class TYPE>;

        if r9 == $r22 goto label07;

        $r23 = <java.lang.Float: java.lang.Class TYPE>;

        if r9 == $r23 goto label07;

        $r24 = <java.lang.Double: java.lang.Class TYPE>;

        if r9 != $r24 goto label15;

     label07:
        return 1;

     label08:
        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r5 goto label10;

        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

        if r9 == $r16 goto label09;

        $r17 = <java.lang.Long: java.lang.Class TYPE>;

        if r9 == $r17 goto label09;

        $r18 = <java.lang.Float: java.lang.Class TYPE>;

        if r9 == $r18 goto label09;

        $r19 = <java.lang.Double: java.lang.Class TYPE>;

        if r9 != $r19 goto label15;

     label09:
        return 1;

     label10:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r6 goto label12;

        $r13 = <java.lang.Long: java.lang.Class TYPE>;

        if r9 == $r13 goto label11;

        $r14 = <java.lang.Float: java.lang.Class TYPE>;

        if r9 == $r14 goto label11;

        $r15 = <java.lang.Double: java.lang.Class TYPE>;

        if r9 != $r15 goto label15;

     label11:
        return 1;

     label12:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r7 goto label14;

        $r11 = <java.lang.Float: java.lang.Class TYPE>;

        if r9 == $r11 goto label13;

        $r12 = <java.lang.Double: java.lang.Class TYPE>;

        if r9 != $r12 goto label15;

     label13:
        return 1;

     label14:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r8 goto label15;

        $r10 = <java.lang.Double: java.lang.Class TYPE>;

        if r9 != $r10 goto label15;

        return 1;

     label15:
        return 0;
    }

    protected static void emitWideningBytecodeForPrimitiveConversion(jdk.internal.reflect.ClassFileAssembler, java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, $r1, r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        jdk.internal.reflect.ClassFileAssembler r5;

        r5 := @parameter0: jdk.internal.reflect.ClassFileAssembler;

        r0 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Class;

        $r1 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 == $r1 goto label1;

        $r6 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 == $r6 goto label1;

        $r7 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 == $r7 goto label1;

        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r8 goto label4;

     label1:
        $r14 = <java.lang.Long: java.lang.Class TYPE>;

        if r2 != $r14 goto label2;

        virtualinvoke r5.<jdk.internal.reflect.ClassFileAssembler: void opc_i2l()>();

        goto label7;

     label2:
        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        if r2 != $r3 goto label3;

        virtualinvoke r5.<jdk.internal.reflect.ClassFileAssembler: void opc_i2f()>();

        goto label7;

     label3:
        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        if r2 != $r4 goto label7;

        virtualinvoke r5.<jdk.internal.reflect.ClassFileAssembler: void opc_i2d()>();

        goto label7;

     label4:
        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r9 goto label6;

        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        if r2 != $r12 goto label5;

        virtualinvoke r5.<jdk.internal.reflect.ClassFileAssembler: void opc_l2f()>();

        goto label7;

     label5:
        $r13 = <java.lang.Double: java.lang.Class TYPE>;

        if r2 != $r13 goto label7;

        virtualinvoke r5.<jdk.internal.reflect.ClassFileAssembler: void opc_l2d()>();

        goto label7;

     label6:
        $r10 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r10 goto label7;

        $r11 = <java.lang.Double: java.lang.Class TYPE>;

        if r2 != $r11 goto label7;

        virtualinvoke r5.<jdk.internal.reflect.ClassFileAssembler: void opc_f2d()>();

     label7:
        return;
    }

    protected short unboxingMethodForPrimitiveType(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.InternalError $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12, $r14;
        jdk.internal.reflect.AccessorGenerator r15;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7;

        r15 := @this: jdk.internal.reflect.AccessorGenerator;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        $s7 = r15.<jdk.internal.reflect.AccessorGenerator: short booleanUnboxIdx>;

        return $s7;

     label1:
        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r2 goto label2;

        $s6 = r15.<jdk.internal.reflect.AccessorGenerator: short byteUnboxIdx>;

        return $s6;

     label2:
        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

        $s5 = r15.<jdk.internal.reflect.AccessorGenerator: short characterUnboxIdx>;

        return $s5;

     label3:
        $r4 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r4 goto label4;

        $s4 = r15.<jdk.internal.reflect.AccessorGenerator: short shortUnboxIdx>;

        return $s4;

     label4:
        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

        $s3 = r15.<jdk.internal.reflect.AccessorGenerator: short integerUnboxIdx>;

        return $s3;

     label5:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r6 goto label6;

        $s2 = r15.<jdk.internal.reflect.AccessorGenerator: short longUnboxIdx>;

        return $s2;

     label6:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r7 goto label7;

        $s1 = r15.<jdk.internal.reflect.AccessorGenerator: short floatUnboxIdx>;

        return $s1;

     label7:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r8 goto label8;

        $s0 = r15.<jdk.internal.reflect.AccessorGenerator: short doubleUnboxIdx>;

        return $s0;

     label8:
        $r9 = new java.lang.InternalError;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal primitive type ");

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.InternalError: void <init>(java.lang.String)>($r14);

        throw $r9;
    }

    protected static boolean isPrimitive(java.lang.Class)
    {
        java.lang.Class r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label1;

        $r1 = <java.lang.Void: java.lang.Class TYPE>;

        if r0 == $r1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected int typeSizeInStackSlots(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3;
        jdk.internal.reflect.AccessorGenerator r4;

        r4 := @this: jdk.internal.reflect.AccessorGenerator;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Void: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        return 0;

     label1:
        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 == $r2 goto label2;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

     label2:
        return 2;

     label3:
        return 1;
    }

    protected jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer()
    {
        jdk.internal.reflect.AccessorGenerator r0;
        jdk.internal.reflect.ClassFileAssembler $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        short $s0, $s1;

        r0 := @this: jdk.internal.reflect.AccessorGenerator;

        $r1 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer>;

        if $r1 != null goto label1;

        $r3 = new jdk.internal.reflect.ClassFileAssembler;

        specialinvoke $r3.<jdk.internal.reflect.ClassFileAssembler: void <init>()>();

        r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer> = $r3;

        $r4 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer>;

        $s0 = r0.<jdk.internal.reflect.AccessorGenerator: short illegalArgumentClass>;

        virtualinvoke $r4.<jdk.internal.reflect.ClassFileAssembler: void opc_new(short)>($s0);

        $r5 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer>;

        virtualinvoke $r5.<jdk.internal.reflect.ClassFileAssembler: void opc_dup()>();

        $r6 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer>;

        $s1 = r0.<jdk.internal.reflect.AccessorGenerator: short illegalArgumentCtorIdx>;

        virtualinvoke $r6.<jdk.internal.reflect.ClassFileAssembler: void opc_invokespecial(short,int,int)>($s1, 0, 0);

        $r7 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer>;

        virtualinvoke $r7.<jdk.internal.reflect.ClassFileAssembler: void opc_athrow()>();

     label1:
        $r2 = r0.<jdk.internal.reflect.AccessorGenerator: jdk.internal.reflect.ClassFileAssembler illegalArgumentCodeBuffer>;

        return $r2;
    }

    static void <clinit>()
    {
        jdk.internal.misc.Unsafe $r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        <jdk.internal.reflect.AccessorGenerator: short S6> = 6;

        <jdk.internal.reflect.AccessorGenerator: short S5> = 5;

        <jdk.internal.reflect.AccessorGenerator: short S4> = 4;

        <jdk.internal.reflect.AccessorGenerator: short S3> = 3;

        <jdk.internal.reflect.AccessorGenerator: short S2> = 2;

        <jdk.internal.reflect.AccessorGenerator: short S1> = 1;

        <jdk.internal.reflect.AccessorGenerator: short S0> = 0;

        $r0 = staticinvoke <jdk.internal.misc.Unsafe: jdk.internal.misc.Unsafe getUnsafe()>();

        <jdk.internal.reflect.AccessorGenerator: jdk.internal.misc.Unsafe unsafe> = $r0;

        $r1 = newarray (java.lang.Class)[8];

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r1[0] = $r2;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r1[1] = $r3;

        $r4 = <java.lang.Character: java.lang.Class TYPE>;

        $r1[2] = $r4;

        $r5 = <java.lang.Short: java.lang.Class TYPE>;

        $r1[3] = $r5;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[4] = $r6;

        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        $r1[5] = $r7;

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        $r1[6] = $r8;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        $r1[7] = $r9;

        <jdk.internal.reflect.AccessorGenerator: java.lang.Class[] primitiveTypes> = $r1;

        return;
    }
}

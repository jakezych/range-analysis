public class jdk.internal.org.xml.sax.SAXException extends java.lang.Exception
{
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    static final long serialVersionUID;

    public void <init>()
    {
        jdk.internal.org.xml.sax.SAXException r0;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.String r1;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.Exception)
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.Exception r1;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        r1 := @parameter0: java.lang.Exception;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Exception)
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.String r1;
        java.lang.Exception r2;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public java.lang.String getMessage()
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.String r1, $r3;
        java.lang.Throwable r2;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        r1 = specialinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        r2 = specialinvoke r0.<java.lang.Exception: java.lang.Throwable getCause()>();

        if r1 != null goto label1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        return $r3;

     label1:
        return r1;
    }

    public java.lang.Exception getException()
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.Exception $r1;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        $r1 = virtualinvoke r0.<jdk.internal.org.xml.sax.SAXException: java.lang.Exception getExceptionInternal()>();

        return $r1;
    }

    public java.lang.Throwable getCause()
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.Throwable $r1;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        $r1 = specialinvoke r0.<java.lang.Exception: java.lang.Throwable getCause()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.Throwable r1;
        java.lang.String $r2, $r4, $r7, $r9;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        r1 = specialinvoke r0.<java.lang.Exception: java.lang.Throwable getCause()>();

        if r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = specialinvoke r0.<java.lang.Exception: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke r1.<java.lang.Throwable: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label1:
        $r2 = specialinvoke r0.<java.lang.Exception: java.lang.String toString()>();

        return $r2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        java.io.ObjectOutputStream$PutField r1;
        jdk.internal.org.xml.sax.SAXException r2;
        java.lang.Exception $r3;

        r2 := @this: jdk.internal.org.xml.sax.SAXException;

        r0 := @parameter0: java.io.ObjectOutputStream;

        r1 = virtualinvoke r0.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();

        $r3 = virtualinvoke r2.<jdk.internal.org.xml.sax.SAXException: java.lang.Exception getExceptionInternal()>();

        virtualinvoke r1.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("exception", $r3);

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeFields()>();

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        java.io.ObjectInputStream$GetField r1;
        java.lang.Object $r2;
        java.lang.Exception r3;
        jdk.internal.org.xml.sax.SAXException r4;
        java.lang.Throwable r5;
        java.lang.IllegalStateException $r7;
        java.io.InvalidClassException $r9;

        r4 := @this: jdk.internal.org.xml.sax.SAXException;

        r0 := @parameter0: java.io.ObjectInputStream;

        r1 = virtualinvoke r0.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("exception", null);

        r3 = (java.lang.Exception) $r2;

        r5 = specialinvoke r4.<java.lang.Exception: java.lang.Throwable getCause()>();

        if r5 != null goto label4;

        if r3 == null goto label4;

     label1:
        specialinvoke r4.<java.lang.Exception: java.lang.Throwable initCause(java.lang.Throwable)>(r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r9 = new java.io.InvalidClassException;

        specialinvoke $r9.<java.io.InvalidClassException: void <init>(java.lang.String)>("Inconsistent state: two causes");

        throw $r9;

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    private java.lang.Exception getExceptionInternal()
    {
        jdk.internal.org.xml.sax.SAXException r0;
        java.lang.Throwable r1;
        boolean $z0;
        java.lang.Exception $r2;

        r0 := @this: jdk.internal.org.xml.sax.SAXException;

        r1 = specialinvoke r0.<java.lang.Exception: java.lang.Throwable getCause()>();

        $z0 = r1 instanceof java.lang.Exception;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Exception) r1;

        return $r2;

     label1:
        return null;
    }

    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.io.ObjectStreamField $r1;

        <jdk.internal.org.xml.sax.SAXException: long serialVersionUID> = 583241635256073760L;

        $r0 = newarray (java.io.ObjectStreamField)[1];

        $r1 = new java.io.ObjectStreamField;

        specialinvoke $r1.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("exception", class "Ljava/lang/Exception;");

        $r0[0] = $r1;

        <jdk.internal.org.xml.sax.SAXException: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        return;
    }
}

public final class jdk.internal.org.objectweb.asm.util.TraceMethodVisitor extends jdk.internal.org.objectweb.asm.MethodVisitor
{
    public final jdk.internal.org.objectweb.asm.util.Printer p;

    public void <init>(jdk.internal.org.objectweb.asm.util.Printer)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.util.Printer r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.util.Printer;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: void <init>(jdk.internal.org.objectweb.asm.MethodVisitor,jdk.internal.org.objectweb.asm.util.Printer)>(null, r1);

        return;
    }

    public void <init>(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.internal.org.objectweb.asm.util.Printer)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.MethodVisitor r1;
        jdk.internal.org.objectweb.asm.util.Printer r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        r2 := @parameter1: jdk.internal.org.objectweb.asm.util.Printer;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void <init>(int,jdk.internal.org.objectweb.asm.MethodVisitor)>(458752, r1);

        r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p> = r2;

        return;
    }

    public void visitParameter(java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        java.lang.String r1;
        int i0;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitParameter(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitParameter(java.lang.String,int)>(r1, i0);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        java.lang.String r1;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r2, r3;
        jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor $r4;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r5;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        r3 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitMethodAnnotation(java.lang.String,boolean)>(r1, z0);

        $r4 = new jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor;

        $r5 = specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(r1, z0);

        specialinvoke $r4.<jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(jdk.internal.org.objectweb.asm.AnnotationVisitor,jdk.internal.org.objectweb.asm.util.Printer)>($r5, r3);

        return $r4;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        jdk.internal.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r3, r4;
        jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor $r5;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        r4 = virtualinvoke $r3.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitMethodTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, r2, z0);

        $r5 = new jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor;

        $r6 = specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, r2, z0);

        specialinvoke $r5.<jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(jdk.internal.org.objectweb.asm.AnnotationVisitor,jdk.internal.org.objectweb.asm.util.Printer)>($r6, r4);

        return $r5;
    }

    public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.Attribute r1;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.Attribute;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitMethodAttribute(jdk.internal.org.objectweb.asm.Attribute)>(r1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAttribute(jdk.internal.org.objectweb.asm.Attribute)>(r1);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.util.Printer $r1, r2;
        jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor $r3;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r4;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        r2 = virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitAnnotationDefault()>();

        $r3 = new jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor;

        $r4 = specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>();

        specialinvoke $r3.<jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(jdk.internal.org.objectweb.asm.AnnotationVisitor,jdk.internal.org.objectweb.asm.util.Printer)>($r4, r2);

        return $r3;
    }

    public void visitAnnotableParameterCount(int, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitAnnotableParameterCount(int,boolean)>(i0, z0);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitAnnotableParameterCount(int,boolean)>(i0, z0);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        java.lang.String r1;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r2, r3;
        jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor $r4;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r5;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        r3 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitParameterAnnotation(int,java.lang.String,boolean)>(i0, r1, z0);

        $r4 = new jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor;

        $r5 = specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i0, r1, z0);

        specialinvoke $r4.<jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(jdk.internal.org.objectweb.asm.AnnotationVisitor,jdk.internal.org.objectweb.asm.util.Printer)>($r5, r3);

        return $r4;
    }

    public void visitCode()
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: void visitCode()>();

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitCode()>();

        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0, i1, i2;
        java.lang.Object[] r1, r2;
        jdk.internal.org.objectweb.asm.util.Printer $r3;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object[];

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.util.Printer: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(i0, i1, r1, i2, r2);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(i0, i1, r1, i2, r2);

        return;
    }

    public void visitInsn(int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: void visitInsn(int)>(i0);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInsn(int)>(i0);

        return;
    }

    public void visitIntInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0, i1;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: void visitIntInsn(int,int)>(i0, i1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>(i0, i1);

        return;
    }

    public void visitVarInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0, i1;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: void visitVarInsn(int,int)>(i0, i1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>(i0, i1);

        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        java.lang.String r1;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitTypeInsn(int,java.lang.String)>(i0, r1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>(i0, r1);

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        java.lang.String r1, r2, r3;
        jdk.internal.org.objectweb.asm.util.Printer $r4;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.util.Printer: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int $i0, i1;
        java.lang.String r1, r2, r3;
        jdk.internal.org.objectweb.asm.util.Printer $r4;
        jdk.internal.org.objectweb.asm.MethodVisitor $r5, $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: int api>;

        if $i0 < 327680 goto label1;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i1, r1, r2, r3);

        return;

     label1:
        $r4 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.util.Printer: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i1, r1, r2, r3);

        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.MethodVisitor mv>;

        if $r5 == null goto label2;

        $r6 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r6.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i1, r1, r2, r3);

     label2:
        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int $i0, i1;
        java.lang.String r1, r2, r3;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r4;
        jdk.internal.org.objectweb.asm.MethodVisitor $r5, $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $i0 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: int api>;

        if $i0 >= 327680 goto label1;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>(i1, r1, r2, r3, z0);

        return;

     label1:
        $r4 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.util.Printer: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>(i1, r1, r2, r3, z0);

        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.MethodVisitor mv>;

        if $r5 == null goto label2;

        $r6 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r6.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>(i1, r1, r2, r3, z0);

     label2:
        return;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Handle, java.lang.Object[])
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        java.lang.String r1, r2;
        jdk.internal.org.objectweb.asm.Handle r3;
        java.lang.Object[] r4;
        jdk.internal.org.objectweb.asm.util.Printer $r5;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: jdk.internal.org.objectweb.asm.Handle;

        r4 := @parameter3: java.lang.Object[];

        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.util.Printer: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>(r1, r2, r3, r4);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>(r1, r2, r3, r4);

        return;
    }

    public void visitJumpInsn(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        jdk.internal.org.objectweb.asm.Label r1;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.Label;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>(i0, r1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,jdk.internal.org.objectweb.asm.Label)>(i0, r1);

        return;
    }

    public void visitLabel(jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.Label r1;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(r1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(r1);

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        java.lang.Object r1;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitLdcInsn(java.lang.Object)>(r1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>(r1);

        return;
    }

    public void visitIincInsn(int, int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0, i1;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: void visitIincInsn(int,int)>(i0, i1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>(i0, i1);

        return;
    }

    public transient void visitTableSwitchInsn(int, int, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0, i1;
        jdk.internal.org.objectweb.asm.Label r1;
        jdk.internal.org.objectweb.asm.Label[] r2;
        jdk.internal.org.objectweb.asm.util.Printer $r3;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: jdk.internal.org.objectweb.asm.Label;

        r2 := @parameter3: jdk.internal.org.objectweb.asm.Label[];

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.util.Printer: void visitTableSwitchInsn(int,int,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>(i0, i1, r1, r2);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label[])>(i0, i1, r1, r2);

        return;
    }

    public void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label, int[], jdk.internal.org.objectweb.asm.Label[])
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.Label r1;
        int[] r2;
        jdk.internal.org.objectweb.asm.Label[] r3;
        jdk.internal.org.objectweb.asm.util.Printer $r4;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        r2 := @parameter1: int[];

        r3 := @parameter2: jdk.internal.org.objectweb.asm.Label[];

        $r4 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.util.Printer: void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label,int[],jdk.internal.org.objectweb.asm.Label[])>(r1, r2, r3);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label,int[],jdk.internal.org.objectweb.asm.Label[])>(r1, r2, r3);

        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        java.lang.String r1;
        int i0;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitMultiANewArrayInsn(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>(r1, i0);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        jdk.internal.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r3, r4;
        jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor $r5;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        r4 = virtualinvoke $r3.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, r2, z0);

        $r5 = new jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor;

        $r6 = specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, r2, z0);

        specialinvoke $r5.<jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(jdk.internal.org.objectweb.asm.AnnotationVisitor,jdk.internal.org.objectweb.asm.util.Printer)>($r6, r4);

        return $r5;
    }

    public void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.Label r1, r2, r3;
        java.lang.String r4;
        jdk.internal.org.objectweb.asm.util.Printer $r5;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        r2 := @parameter1: jdk.internal.org.objectweb.asm.Label;

        r3 := @parameter2: jdk.internal.org.objectweb.asm.Label;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.util.Printer: void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,java.lang.String)>(r1, r2, r3, r4);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        jdk.internal.org.objectweb.asm.TypePath r1;
        java.lang.String r2;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r3, r4;
        jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor $r5;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        r4 = virtualinvoke $r3.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitTryCatchAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, r2, z0);

        $r5 = new jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor;

        $r6 = specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,java.lang.String,boolean)>(i0, r1, r2, z0);

        specialinvoke $r5.<jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(jdk.internal.org.objectweb.asm.AnnotationVisitor,jdk.internal.org.objectweb.asm.util.Printer)>($r6, r4);

        return $r5;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        java.lang.String r1, r2, r3;
        jdk.internal.org.objectweb.asm.Label r4, r5;
        int i0;
        jdk.internal.org.objectweb.asm.util.Printer $r6;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: jdk.internal.org.objectweb.asm.Label;

        r5 := @parameter4: jdk.internal.org.objectweb.asm.Label;

        i0 := @parameter5: int;

        $r6 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r6.<jdk.internal.org.objectweb.asm.util.Printer: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,int)>(r1, r2, r3, r4, r5, i0);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Label,int)>(r1, r2, r3, r4, r5, i0);

        return;
    }

    public jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, jdk.internal.org.objectweb.asm.Label[], jdk.internal.org.objectweb.asm.Label[], int[], java.lang.String, boolean)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        jdk.internal.org.objectweb.asm.TypePath r1;
        jdk.internal.org.objectweb.asm.Label[] r2, r3;
        int[] r4;
        java.lang.String r5;
        boolean z0;
        jdk.internal.org.objectweb.asm.util.Printer $r6, r7;
        jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor $r8;
        jdk.internal.org.objectweb.asm.AnnotationVisitor $r9;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.TypePath;

        r2 := @parameter2: jdk.internal.org.objectweb.asm.Label[];

        r3 := @parameter3: jdk.internal.org.objectweb.asm.Label[];

        r4 := @parameter4: int[];

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $r6 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        r7 = virtualinvoke $r6.<jdk.internal.org.objectweb.asm.util.Printer: jdk.internal.org.objectweb.asm.util.Printer visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>(i0, r1, r2, r3, r4, r5, z0);

        $r8 = new jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor;

        $r9 = specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,jdk.internal.org.objectweb.asm.TypePath,jdk.internal.org.objectweb.asm.Label[],jdk.internal.org.objectweb.asm.Label[],int[],java.lang.String,boolean)>(i0, r1, r2, r3, r4, r5, z0);

        specialinvoke $r8.<jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor: void <init>(jdk.internal.org.objectweb.asm.AnnotationVisitor,jdk.internal.org.objectweb.asm.util.Printer)>($r9, r7);

        return $r8;
    }

    public void visitLineNumber(int, jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0;
        jdk.internal.org.objectweb.asm.Label r1;
        jdk.internal.org.objectweb.asm.util.Printer $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.Label;

        $r2 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.util.Printer: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>(i0, r1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>(i0, r1);

        return;
    }

    public void visitMaxs(int, int)
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        int i0, i1;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: void visitMaxs(int,int)>(i0, i1);

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>(i0, i1);

        return;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.util.TraceMethodVisitor r0;
        jdk.internal.org.objectweb.asm.util.Printer $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.util.TraceMethodVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.util.TraceMethodVisitor: jdk.internal.org.objectweb.asm.util.Printer p>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.util.Printer: void visitMethodEnd()>();

        specialinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitEnd()>();

        return;
    }
}

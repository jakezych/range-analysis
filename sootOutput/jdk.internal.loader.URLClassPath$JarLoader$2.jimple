class jdk.internal.loader.URLClassPath$JarLoader$2 extends jdk.internal.loader.Resource
{
    final java.lang.String val$name;
    final java.net.URL val$url;
    final java.util.jar.JarEntry val$entry;
    final jdk.internal.loader.URLClassPath$JarLoader this$0;

    void <init>(jdk.internal.loader.URLClassPath$JarLoader, java.lang.String, java.net.URL, java.util.jar.JarEntry)
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        jdk.internal.loader.URLClassPath$JarLoader r1;
        java.lang.String r2;
        java.net.URL r3;
        java.util.jar.JarEntry r4;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        r1 := @parameter0: jdk.internal.loader.URLClassPath$JarLoader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.net.URL;

        r4 := @parameter3: java.util.jar.JarEntry;

        r0.<jdk.internal.loader.URLClassPath$JarLoader$2: jdk.internal.loader.URLClassPath$JarLoader this$0> = r1;

        r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.lang.String val$name> = r2;

        r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.net.URL val$url> = r3;

        r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.util.jar.JarEntry val$entry> = r4;

        specialinvoke r0.<jdk.internal.loader.Resource: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        java.lang.String $r1;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r1 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.lang.String val$name>;

        return $r1;
    }

    public java.net.URL getURL()
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        java.net.URL $r1;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r1 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.net.URL val$url>;

        return $r1;
    }

    public java.net.URL getCodeSourceURL()
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        jdk.internal.loader.URLClassPath$JarLoader $r1;
        java.net.URL $r2;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r1 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: jdk.internal.loader.URLClassPath$JarLoader this$0>;

        $r2 = $r1.<jdk.internal.loader.URLClassPath$JarLoader: java.net.URL csu>;

        return $r2;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        jdk.internal.loader.URLClassPath$JarLoader $r1;
        java.util.jar.JarEntry $r2;
        java.util.jar.JarFile $r3;
        java.io.InputStream $r4;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r1 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: jdk.internal.loader.URLClassPath$JarLoader this$0>;

        $r3 = $r1.<jdk.internal.loader.URLClassPath$JarLoader: java.util.jar.JarFile jar>;

        $r2 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.util.jar.JarEntry val$entry>;

        $r4 = virtualinvoke $r3.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r2);

        return $r4;
    }

    public int getContentLength()
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        java.util.jar.JarEntry $r1;
        long $l0;
        int $i1;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r1 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.util.jar.JarEntry val$entry>;

        $l0 = virtualinvoke $r1.<java.util.jar.JarEntry: long getSize()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public java.util.jar.Manifest getManifest() throws java.io.IOException
    {
        jdk.internal.access.JavaUtilJarAccess $r0;
        jdk.internal.loader.URLClassPath$JarLoader$2 r1;
        jdk.internal.loader.URLClassPath$JarLoader $r2, $r4;
        java.util.jar.JarFile $r3, $r5;
        java.util.jar.Manifest $r6;

        r1 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r0 = staticinvoke <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess()>();

        $r2 = r1.<jdk.internal.loader.URLClassPath$JarLoader$2: jdk.internal.loader.URLClassPath$JarLoader this$0>;

        $r3 = $r2.<jdk.internal.loader.URLClassPath$JarLoader: java.util.jar.JarFile jar>;

        interfaceinvoke $r0.<jdk.internal.access.JavaUtilJarAccess: void ensureInitialization(java.util.jar.JarFile)>($r3);

        $r4 = r1.<jdk.internal.loader.URLClassPath$JarLoader$2: jdk.internal.loader.URLClassPath$JarLoader this$0>;

        $r5 = $r4.<jdk.internal.loader.URLClassPath$JarLoader: java.util.jar.JarFile jar>;

        $r6 = virtualinvoke $r5.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();

        return $r6;
    }

    public java.security.cert.Certificate[] getCertificates()
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        java.util.jar.JarEntry $r1;
        java.security.cert.Certificate[] $r2;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r1 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.util.jar.JarEntry val$entry>;

        $r2 = virtualinvoke $r1.<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>();

        return $r2;
    }

    public java.security.CodeSigner[] getCodeSigners()
    {
        jdk.internal.loader.URLClassPath$JarLoader$2 r0;
        java.util.jar.JarEntry $r1;
        java.security.CodeSigner[] $r2;

        r0 := @this: jdk.internal.loader.URLClassPath$JarLoader$2;

        $r1 = r0.<jdk.internal.loader.URLClassPath$JarLoader$2: java.util.jar.JarEntry val$entry>;

        $r2 = virtualinvoke $r1.<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>();

        return $r2;
    }
}

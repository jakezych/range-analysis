class jdk.internal.module.ModuleReferences extends java.lang.Object
{

    private void <init>()
    {
        jdk.internal.module.ModuleReferences r0;

        r0 := @this: jdk.internal.module.ModuleReferences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.module.ModuleReference newModule(jdk.internal.module.ModuleInfo$Attributes, java.net.URI, java.util.function.Supplier, jdk.internal.module.ModulePatcher, jdk.internal.module.ModuleHashes$HashSupplier)
    {
        jdk.internal.module.ModuleReferenceImpl $r0;
        jdk.internal.module.ModuleInfo$Attributes r1;
        java.lang.module.ModuleDescriptor $r2;
        java.net.URI r3;
        java.util.function.Supplier r4;
        jdk.internal.module.ModuleTarget $r5;
        jdk.internal.module.ModuleHashes $r6;
        jdk.internal.module.ModuleHashes$HashSupplier r7;
        jdk.internal.module.ModuleResolution $r8;
        jdk.internal.module.ModulePatcher r9;
        java.lang.module.ModuleReference r10;

        r1 := @parameter0: jdk.internal.module.ModuleInfo$Attributes;

        r3 := @parameter1: java.net.URI;

        r4 := @parameter2: java.util.function.Supplier;

        r9 := @parameter3: jdk.internal.module.ModulePatcher;

        r7 := @parameter4: jdk.internal.module.ModuleHashes$HashSupplier;

        $r0 = new jdk.internal.module.ModuleReferenceImpl;

        $r2 = virtualinvoke r1.<jdk.internal.module.ModuleInfo$Attributes: java.lang.module.ModuleDescriptor descriptor()>();

        $r5 = virtualinvoke r1.<jdk.internal.module.ModuleInfo$Attributes: jdk.internal.module.ModuleTarget target()>();

        $r6 = virtualinvoke r1.<jdk.internal.module.ModuleInfo$Attributes: jdk.internal.module.ModuleHashes recordedHashes()>();

        $r8 = virtualinvoke r1.<jdk.internal.module.ModuleInfo$Attributes: jdk.internal.module.ModuleResolution moduleResolution()>();

        specialinvoke $r0.<jdk.internal.module.ModuleReferenceImpl: void <init>(java.lang.module.ModuleDescriptor,java.net.URI,java.util.function.Supplier,jdk.internal.module.ModulePatcher,jdk.internal.module.ModuleTarget,jdk.internal.module.ModuleHashes,jdk.internal.module.ModuleHashes$HashSupplier,jdk.internal.module.ModuleResolution)>($r2, r3, r4, null, $r5, $r6, r7, $r8);

        r10 = $r0;

        if r9 == null goto label1;

        r10 = virtualinvoke r9.<jdk.internal.module.ModulePatcher: java.lang.module.ModuleReference patchIfNeeded(java.lang.module.ModuleReference)>($r0);

     label1:
        return r10;
    }

    static java.lang.module.ModuleReference newJarModule(jdk.internal.module.ModuleInfo$Attributes, jdk.internal.module.ModulePatcher, java.nio.file.Path)
    {
        java.nio.file.Path r0;
        java.net.URI r1;
        java.util.function.Supplier r2;
        jdk.internal.module.ModuleHashes$HashSupplier r3;
        jdk.internal.module.ModuleInfo$Attributes r4;
        jdk.internal.module.ModulePatcher r5;
        java.lang.module.ModuleReference $r6;

        r4 := @parameter0: jdk.internal.module.ModuleInfo$Attributes;

        r5 := @parameter1: jdk.internal.module.ModulePatcher;

        r0 := @parameter2: java.nio.file.Path;

        r1 = interfaceinvoke r0.<java.nio.file.Path: java.net.URI toUri()>();

        r2 = staticinvoke <jdk.internal.module.ModuleReferences$lambda_newJarModule_0__132: java.util.function.Supplier bootstrap$(java.nio.file.Path,java.net.URI)>(r0, r1);

        r3 = staticinvoke <jdk.internal.module.ModuleReferences$lambda_newJarModule_1__133: jdk.internal.module.ModuleHashes$HashSupplier bootstrap$(java.nio.file.Path)>(r0);

        $r6 = staticinvoke <jdk.internal.module.ModuleReferences: java.lang.module.ModuleReference newModule(jdk.internal.module.ModuleInfo$Attributes,java.net.URI,java.util.function.Supplier,jdk.internal.module.ModulePatcher,jdk.internal.module.ModuleHashes$HashSupplier)>(r4, r1, r2, r5, r3);

        return $r6;
    }

    static java.lang.module.ModuleReference newJModModule(jdk.internal.module.ModuleInfo$Attributes, java.nio.file.Path)
    {
        java.nio.file.Path r0;
        java.net.URI r1;
        java.util.function.Supplier r2;
        jdk.internal.module.ModuleHashes$HashSupplier r3;
        jdk.internal.module.ModuleInfo$Attributes r4;
        java.lang.module.ModuleReference $r5;

        r4 := @parameter0: jdk.internal.module.ModuleInfo$Attributes;

        r0 := @parameter1: java.nio.file.Path;

        r1 = interfaceinvoke r0.<java.nio.file.Path: java.net.URI toUri()>();

        r2 = staticinvoke <jdk.internal.module.ModuleReferences$lambda_newJModModule_2__134: java.util.function.Supplier bootstrap$(java.nio.file.Path,java.net.URI)>(r0, r1);

        r3 = staticinvoke <jdk.internal.module.ModuleReferences$lambda_newJModModule_3__135: jdk.internal.module.ModuleHashes$HashSupplier bootstrap$(java.nio.file.Path)>(r0);

        $r5 = staticinvoke <jdk.internal.module.ModuleReferences: java.lang.module.ModuleReference newModule(jdk.internal.module.ModuleInfo$Attributes,java.net.URI,java.util.function.Supplier,jdk.internal.module.ModulePatcher,jdk.internal.module.ModuleHashes$HashSupplier)>(r4, r1, r2, null, r3);

        return $r5;
    }

    static java.lang.module.ModuleReference newExplodedModule(jdk.internal.module.ModuleInfo$Attributes, jdk.internal.module.ModulePatcher, java.nio.file.Path)
    {
        java.nio.file.Path r0;
        java.util.function.Supplier r1;
        jdk.internal.module.ModuleInfo$Attributes r2;
        java.net.URI $r3;
        jdk.internal.module.ModulePatcher r4;
        java.lang.module.ModuleReference $r5;

        r2 := @parameter0: jdk.internal.module.ModuleInfo$Attributes;

        r4 := @parameter1: jdk.internal.module.ModulePatcher;

        r0 := @parameter2: java.nio.file.Path;

        r1 = staticinvoke <jdk.internal.module.ModuleReferences$lambda_newExplodedModule_4__136: java.util.function.Supplier bootstrap$(java.nio.file.Path)>(r0);

        $r3 = interfaceinvoke r0.<java.nio.file.Path: java.net.URI toUri()>();

        $r5 = staticinvoke <jdk.internal.module.ModuleReferences: java.lang.module.ModuleReference newModule(jdk.internal.module.ModuleInfo$Attributes,java.net.URI,java.util.function.Supplier,jdk.internal.module.ModulePatcher,jdk.internal.module.ModuleHashes$HashSupplier)>(r2, $r3, r1, r4, null);

        return $r5;
    }

    public static java.lang.module.ModuleReader lambda$newExplodedModule$4(java.nio.file.Path)
    {
        jdk.internal.module.ModuleReferences$ExplodedModuleReader $r0;
        java.nio.file.Path r1;

        r1 := @parameter0: java.nio.file.Path;

        $r0 = new jdk.internal.module.ModuleReferences$ExplodedModuleReader;

        specialinvoke $r0.<jdk.internal.module.ModuleReferences$ExplodedModuleReader: void <init>(java.nio.file.Path)>(r1);

        return $r0;
    }

    public static byte[] lambda$newJModModule$3(java.nio.file.Path, java.lang.String)
    {
        java.nio.file.Path r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @parameter0: java.nio.file.Path;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <jdk.internal.module.ModuleHashes: byte[] computeHash(java.nio.file.Path,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static java.lang.module.ModuleReader lambda$newJModModule$2(java.nio.file.Path, java.net.URI)
    {
        jdk.internal.module.ModuleReferences$JModModuleReader $r0;
        java.nio.file.Path r1;
        java.net.URI r2;

        r1 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.net.URI;

        $r0 = new jdk.internal.module.ModuleReferences$JModModuleReader;

        specialinvoke $r0.<jdk.internal.module.ModuleReferences$JModModuleReader: void <init>(java.nio.file.Path,java.net.URI)>(r1, r2);

        return $r0;
    }

    public static byte[] lambda$newJarModule$1(java.nio.file.Path, java.lang.String)
    {
        java.nio.file.Path r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @parameter0: java.nio.file.Path;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <jdk.internal.module.ModuleHashes: byte[] computeHash(java.nio.file.Path,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static java.lang.module.ModuleReader lambda$newJarModule$0(java.nio.file.Path, java.net.URI)
    {
        jdk.internal.module.ModuleReferences$JarModuleReader $r0;
        java.nio.file.Path r1;
        java.net.URI r2;

        r1 := @parameter0: java.nio.file.Path;

        r2 := @parameter1: java.net.URI;

        $r0 = new jdk.internal.module.ModuleReferences$JarModuleReader;

        specialinvoke $r0.<jdk.internal.module.ModuleReferences$JarModuleReader: void <init>(java.nio.file.Path,java.net.URI)>(r1, r2);

        return $r0;
    }
}

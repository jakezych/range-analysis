class jdk.internal.loader.URLClassPath$Loader$1 extends jdk.internal.loader.Resource
{
    final java.lang.String val$name;
    final java.net.URL val$url;
    final java.net.URLConnection val$uc;
    final jdk.internal.loader.URLClassPath$Loader this$0;

    void <init>(jdk.internal.loader.URLClassPath$Loader, java.lang.String, java.net.URL, java.net.URLConnection)
    {
        jdk.internal.loader.URLClassPath$Loader$1 r0;
        jdk.internal.loader.URLClassPath$Loader r1;
        java.lang.String r2;
        java.net.URL r3;
        java.net.URLConnection r4;

        r0 := @this: jdk.internal.loader.URLClassPath$Loader$1;

        r1 := @parameter0: jdk.internal.loader.URLClassPath$Loader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.net.URL;

        r4 := @parameter3: java.net.URLConnection;

        r0.<jdk.internal.loader.URLClassPath$Loader$1: jdk.internal.loader.URLClassPath$Loader this$0> = r1;

        r0.<jdk.internal.loader.URLClassPath$Loader$1: java.lang.String val$name> = r2;

        r0.<jdk.internal.loader.URLClassPath$Loader$1: java.net.URL val$url> = r3;

        r0.<jdk.internal.loader.URLClassPath$Loader$1: java.net.URLConnection val$uc> = r4;

        specialinvoke r0.<jdk.internal.loader.Resource: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        jdk.internal.loader.URLClassPath$Loader$1 r0;
        java.lang.String $r1;

        r0 := @this: jdk.internal.loader.URLClassPath$Loader$1;

        $r1 = r0.<jdk.internal.loader.URLClassPath$Loader$1: java.lang.String val$name>;

        return $r1;
    }

    public java.net.URL getURL()
    {
        jdk.internal.loader.URLClassPath$Loader$1 r0;
        java.net.URL $r1;

        r0 := @this: jdk.internal.loader.URLClassPath$Loader$1;

        $r1 = r0.<jdk.internal.loader.URLClassPath$Loader$1: java.net.URL val$url>;

        return $r1;
    }

    public java.net.URL getCodeSourceURL()
    {
        jdk.internal.loader.URLClassPath$Loader$1 r0;
        jdk.internal.loader.URLClassPath$Loader $r1;
        java.net.URL $r2;

        r0 := @this: jdk.internal.loader.URLClassPath$Loader$1;

        $r1 = r0.<jdk.internal.loader.URLClassPath$Loader$1: jdk.internal.loader.URLClassPath$Loader this$0>;

        $r2 = $r1.<jdk.internal.loader.URLClassPath$Loader: java.net.URL base>;

        return $r2;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        jdk.internal.loader.URLClassPath$Loader$1 r0;
        java.net.URLConnection $r1;
        java.io.InputStream $r2;

        r0 := @this: jdk.internal.loader.URLClassPath$Loader$1;

        $r1 = r0.<jdk.internal.loader.URLClassPath$Loader$1: java.net.URLConnection val$uc>;

        $r2 = virtualinvoke $r1.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        return $r2;
    }

    public int getContentLength() throws java.io.IOException
    {
        jdk.internal.loader.URLClassPath$Loader$1 r0;
        java.net.URLConnection $r1;
        int $i0;

        r0 := @this: jdk.internal.loader.URLClassPath$Loader$1;

        $r1 = r0.<jdk.internal.loader.URLClassPath$Loader$1: java.net.URLConnection val$uc>;

        $i0 = virtualinvoke $r1.<java.net.URLConnection: int getContentLength()>();

        return $i0;
    }
}

public class jdk.internal.org.objectweb.asm.TypeReference extends java.lang.Object
{
    public static final int CLASS_TYPE_PARAMETER;
    public static final int METHOD_TYPE_PARAMETER;
    public static final int CLASS_EXTENDS;
    public static final int CLASS_TYPE_PARAMETER_BOUND;
    public static final int METHOD_TYPE_PARAMETER_BOUND;
    public static final int FIELD;
    public static final int METHOD_RETURN;
    public static final int METHOD_RECEIVER;
    public static final int METHOD_FORMAL_PARAMETER;
    public static final int THROWS;
    public static final int LOCAL_VARIABLE;
    public static final int RESOURCE_VARIABLE;
    public static final int EXCEPTION_PARAMETER;
    public static final int INSTANCEOF;
    public static final int NEW;
    public static final int CONSTRUCTOR_REFERENCE;
    public static final int METHOD_REFERENCE;
    public static final int CAST;
    public static final int CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT;
    public static final int METHOD_INVOCATION_TYPE_ARGUMENT;
    public static final int CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT;
    public static final int METHOD_REFERENCE_TYPE_ARGUMENT;
    private final int targetTypeAndInfo;

    public void <init>(int)
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int i0;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo> = i0;

        return;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newTypeReference(int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, $i1;

        i0 := @parameter0: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i1 = i0 << 24;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i1);

        return $r0;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newTypeParameterReference(int, int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i3 = i0 << 24;

        $i2 = i1 << 16;

        $i4 = $i3 | $i2;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i4);

        return $r0;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newTypeParameterBoundReference(int, int, int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i3 = i0 << 24;

        $i2 = i1 << 16;

        $i6 = $i3 | $i2;

        $i5 = i4 << 8;

        $i7 = $i6 | $i5;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i7);

        return $r0;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newSuperTypeReference(int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i1 = i0 & 65535;

        $i2 = $i1 << 8;

        $i3 = 268435456 | $i2;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i3);

        return $r0;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newFormalParameterReference(int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i1 = i0 << 16;

        $i2 = 369098752 | $i1;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i2);

        return $r0;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newExceptionReference(int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i1 = i0 << 8;

        $i2 = 385875968 | $i1;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i2);

        return $r0;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newTryCatchReference(int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i1 = i0 << 8;

        $i2 = 1107296256 | $i1;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i2);

        return $r0;
    }

    public static jdk.internal.org.objectweb.asm.TypeReference newTypeArgumentReference(int, int)
    {
        jdk.internal.org.objectweb.asm.TypeReference $r0;
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new jdk.internal.org.objectweb.asm.TypeReference;

        $i2 = i0 << 24;

        $i3 = $i2 | i1;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.TypeReference: void <init>(int)>($i3);

        return $r0;
    }

    public int getSort()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 >>> 24;

        return $i1;
    }

    public int getTypeParameterIndex()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 & 16711680;

        $i2 = $i1 >> 16;

        return $i2;
    }

    public int getTypeParameterBoundIndex()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 & 65280;

        $i2 = $i1 >> 8;

        return $i2;
    }

    public int getSuperTypeIndex()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1, $i2;
        short $s3;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 & 16776960;

        $i2 = $i1 >> 8;

        $s3 = (short) $i2;

        return $s3;
    }

    public int getFormalParameterIndex()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 & 16711680;

        $i2 = $i1 >> 16;

        return $i2;
    }

    public int getExceptionIndex()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 & 16776960;

        $i2 = $i1 >> 8;

        return $i2;
    }

    public int getTryCatchBlockIndex()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 & 16776960;

        $i2 = $i1 >> 8;

        return $i2;
    }

    public int getTypeArgumentIndex()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0, $i1;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        $i1 = $i0 & 255;

        return $i1;
    }

    public int getValue()
    {
        jdk.internal.org.objectweb.asm.TypeReference r0;
        int $i0;

        r0 := @this: jdk.internal.org.objectweb.asm.TypeReference;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypeReference: int targetTypeAndInfo>;

        return $i0;
    }

    static void putTarget(int, jdk.internal.org.objectweb.asm.ByteVector)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        jdk.internal.org.objectweb.asm.ByteVector r0;
        java.lang.IllegalArgumentException $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: jdk.internal.org.objectweb.asm.ByteVector;

        $i1 = i0 >>> 24;

        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label5;
            case 10: goto label5;
            case 11: goto label5;
            case 12: goto label5;
            case 13: goto label5;
            case 14: goto label5;
            case 15: goto label5;
            case 16: goto label4;
            case 17: goto label4;
            case 18: goto label4;
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label1;
            case 23: goto label4;
            case 24: goto label5;
            case 25: goto label5;
            case 26: goto label5;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label5;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label5;
            case 37: goto label5;
            case 38: goto label5;
            case 39: goto label5;
            case 40: goto label5;
            case 41: goto label5;
            case 42: goto label5;
            case 43: goto label5;
            case 44: goto label5;
            case 45: goto label5;
            case 46: goto label5;
            case 47: goto label5;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label5;
            case 56: goto label5;
            case 57: goto label5;
            case 58: goto label5;
            case 59: goto label5;
            case 60: goto label5;
            case 61: goto label5;
            case 62: goto label5;
            case 63: goto label5;
            case 64: goto label5;
            case 65: goto label5;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label4;
            case 69: goto label4;
            case 70: goto label4;
            case 71: goto label3;
            case 72: goto label3;
            case 73: goto label3;
            case 74: goto label3;
            case 75: goto label3;
            default: goto label5;
        };

     label1:
        $i6 = i0 >>> 16;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i6);

        goto label6;

     label2:
        $i2 = i0 >>> 24;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>($i2);

        goto label6;

     label3:
        virtualinvoke r0.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(i0);

        goto label6;

     label4:
        $i5 = i0 >>> 24;

        $i3 = i0 & 16776960;

        $i4 = $i3 >> 8;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put12(int,int)>($i5, $i4);

        goto label6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label6:
        return;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_REFERENCE_TYPE_ARGUMENT> = 75;

        <jdk.internal.org.objectweb.asm.TypeReference: int CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT> = 74;

        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_INVOCATION_TYPE_ARGUMENT> = 73;

        <jdk.internal.org.objectweb.asm.TypeReference: int CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT> = 72;

        <jdk.internal.org.objectweb.asm.TypeReference: int CAST> = 71;

        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_REFERENCE> = 70;

        <jdk.internal.org.objectweb.asm.TypeReference: int CONSTRUCTOR_REFERENCE> = 69;

        <jdk.internal.org.objectweb.asm.TypeReference: int NEW> = 68;

        <jdk.internal.org.objectweb.asm.TypeReference: int INSTANCEOF> = 67;

        <jdk.internal.org.objectweb.asm.TypeReference: int EXCEPTION_PARAMETER> = 66;

        <jdk.internal.org.objectweb.asm.TypeReference: int RESOURCE_VARIABLE> = 65;

        <jdk.internal.org.objectweb.asm.TypeReference: int LOCAL_VARIABLE> = 64;

        <jdk.internal.org.objectweb.asm.TypeReference: int THROWS> = 23;

        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_FORMAL_PARAMETER> = 22;

        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_RECEIVER> = 21;

        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_RETURN> = 20;

        <jdk.internal.org.objectweb.asm.TypeReference: int FIELD> = 19;

        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_TYPE_PARAMETER_BOUND> = 18;

        <jdk.internal.org.objectweb.asm.TypeReference: int CLASS_TYPE_PARAMETER_BOUND> = 17;

        <jdk.internal.org.objectweb.asm.TypeReference: int CLASS_EXTENDS> = 16;

        <jdk.internal.org.objectweb.asm.TypeReference: int METHOD_TYPE_PARAMETER> = 1;

        <jdk.internal.org.objectweb.asm.TypeReference: int CLASS_TYPE_PARAMETER> = 0;

        return;
    }
}

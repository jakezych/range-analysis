public class jdk.internal.module.ModuleReferenceImpl extends java.lang.module.ModuleReference
{
    private final java.net.URI location;
    private final java.util.function.Supplier readerSupplier;
    private final jdk.internal.module.ModulePatcher patcher;
    private final jdk.internal.module.ModuleTarget target;
    private final jdk.internal.module.ModuleHashes recordedHashes;
    private final jdk.internal.module.ModuleHashes$HashSupplier hasher;
    private final jdk.internal.module.ModuleResolution moduleResolution;
    private byte[] cachedHash;
    private int hash;

    public void <init>(java.lang.module.ModuleDescriptor, java.net.URI, java.util.function.Supplier, jdk.internal.module.ModulePatcher, jdk.internal.module.ModuleTarget, jdk.internal.module.ModuleHashes, jdk.internal.module.ModuleHashes$HashSupplier, jdk.internal.module.ModuleResolution)
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        java.lang.module.ModuleDescriptor r1;
        java.net.URI r2, $r4;
        java.lang.Object $r3;
        java.util.function.Supplier r5;
        jdk.internal.module.ModulePatcher r6;
        jdk.internal.module.ModuleTarget r7;
        jdk.internal.module.ModuleHashes r8;
        jdk.internal.module.ModuleHashes$HashSupplier r9;
        jdk.internal.module.ModuleResolution r10;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        r1 := @parameter0: java.lang.module.ModuleDescriptor;

        r2 := @parameter1: java.net.URI;

        r5 := @parameter2: java.util.function.Supplier;

        r6 := @parameter3: jdk.internal.module.ModulePatcher;

        r7 := @parameter4: jdk.internal.module.ModuleTarget;

        r8 := @parameter5: jdk.internal.module.ModuleHashes;

        r9 := @parameter6: jdk.internal.module.ModuleHashes$HashSupplier;

        r10 := @parameter7: jdk.internal.module.ModuleResolution;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (java.net.URI) $r3;

        specialinvoke r0.<java.lang.module.ModuleReference: void <init>(java.lang.module.ModuleDescriptor,java.net.URI)>(r1, $r4);

        r0.<jdk.internal.module.ModuleReferenceImpl: java.net.URI location> = r2;

        r0.<jdk.internal.module.ModuleReferenceImpl: java.util.function.Supplier readerSupplier> = r5;

        r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModulePatcher patcher> = r6;

        r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleTarget target> = r7;

        r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleHashes recordedHashes> = r8;

        r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleHashes$HashSupplier hasher> = r9;

        r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleResolution moduleResolution> = r10;

        return;
    }

    public java.lang.module.ModuleReader open() throws java.io.IOException
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        java.util.function.Supplier $r1;
        java.lang.Object $r2;
        java.lang.module.ModuleReader $r3;
        java.io.UncheckedIOException $r4;
        java.io.IOException $r6;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleReferenceImpl: java.util.function.Supplier readerSupplier>;

        $r2 = interfaceinvoke $r1.<java.util.function.Supplier: java.lang.Object get()>();

        $r3 = (java.lang.module.ModuleReader) $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r6 = virtualinvoke $r4.<java.io.UncheckedIOException: java.io.IOException getCause()>();

        throw $r6;

        catch java.io.UncheckedIOException from label1 to label2 with label3;
    }

    public boolean isPatched()
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        jdk.internal.module.ModulePatcher $r1;
        boolean $z0;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        $r1 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModulePatcher patcher>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public jdk.internal.module.ModuleTarget moduleTarget()
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        jdk.internal.module.ModuleTarget $r1;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        $r1 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleTarget target>;

        return $r1;
    }

    public jdk.internal.module.ModuleHashes recordedHashes()
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        jdk.internal.module.ModuleHashes $r1;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        $r1 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleHashes recordedHashes>;

        return $r1;
    }

    jdk.internal.module.ModuleHashes$HashSupplier hasher()
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        jdk.internal.module.ModuleHashes$HashSupplier $r1;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        $r1 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleHashes$HashSupplier hasher>;

        return $r1;
    }

    public jdk.internal.module.ModuleResolution moduleResolution()
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        jdk.internal.module.ModuleResolution $r1;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        $r1 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleResolution moduleResolution>;

        return $r1;
    }

    public byte[] computeHash(java.lang.String)
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        jdk.internal.module.ModuleHashes$HashSupplier $r1, $r3;
        java.lang.String r2;
        byte[] $r4, r5;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        r2 := @parameter0: java.lang.String;

        r5 = r0.<jdk.internal.module.ModuleReferenceImpl: byte[] cachedHash>;

        if r5 == null goto label1;

        return r5;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleHashes$HashSupplier hasher>;

        if $r1 != null goto label2;

        return null;

     label2:
        $r3 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModuleHashes$HashSupplier hasher>;

        $r4 = interfaceinvoke $r3.<jdk.internal.module.ModuleHashes$HashSupplier: byte[] generate(java.lang.String)>(r2);

        r0.<jdk.internal.module.ModuleReferenceImpl: byte[] cachedHash> = $r4;

        return $r4;
    }

    public int hashCode()
    {
        jdk.internal.module.ModuleReferenceImpl r0;
        java.lang.module.ModuleDescriptor $r1;
        java.net.URI $r2;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        jdk.internal.module.ModulePatcher $r3;

        r0 := @this: jdk.internal.module.ModuleReferenceImpl;

        i4 = r0.<jdk.internal.module.ModuleReferenceImpl: int hash>;

        if i4 != 0 goto label2;

        $r1 = virtualinvoke r0.<jdk.internal.module.ModuleReferenceImpl: java.lang.module.ModuleDescriptor descriptor()>();

        i5 = virtualinvoke $r1.<java.lang.module.ModuleDescriptor: int hashCode()>();

        $i0 = 43 * i5;

        $r2 = r0.<jdk.internal.module.ModuleReferenceImpl: java.net.URI location>;

        $i1 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r2);

        i6 = $i0 + $i1;

        $i2 = 43 * i6;

        $r3 = r0.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModulePatcher patcher>;

        $i3 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r3);

        i4 = $i2 + $i3;

        if i4 != 0 goto label1;

        i4 = -1;

     label1:
        r0.<jdk.internal.module.ModuleReferenceImpl: int hash> = i4;

     label2:
        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        jdk.internal.module.ModuleReferenceImpl r1, r2;
        java.lang.module.ModuleDescriptor $r3, $r4;
        java.net.URI $r5, $r6;
        jdk.internal.module.ModulePatcher $r7, $r8;

        r2 := @this: jdk.internal.module.ModuleReferenceImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof jdk.internal.module.ModuleReferenceImpl;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (jdk.internal.module.ModuleReferenceImpl) r0;

        $r3 = virtualinvoke r2.<jdk.internal.module.ModuleReferenceImpl: java.lang.module.ModuleDescriptor descriptor()>();

        $r4 = virtualinvoke r1.<jdk.internal.module.ModuleReferenceImpl: java.lang.module.ModuleDescriptor descriptor()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label2;

        $r6 = r2.<jdk.internal.module.ModuleReferenceImpl: java.net.URI location>;

        $r5 = r1.<jdk.internal.module.ModuleReferenceImpl: java.net.URI location>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label2;

        $r8 = r2.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModulePatcher patcher>;

        $r7 = r1.<jdk.internal.module.ModuleReferenceImpl: jdk.internal.module.ModulePatcher patcher>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0;
        jdk.internal.module.ModuleReferenceImpl r3;
        java.lang.module.ModuleDescriptor $r4;
        java.lang.String $r5, $r11;
        java.net.URI $r8;
        boolean $z0;

        r3 := @this: jdk.internal.module.ModuleReferenceImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[module ");

        $r4 = virtualinvoke r3.<jdk.internal.module.ModuleReferenceImpl: java.lang.module.ModuleDescriptor descriptor()>();

        $r5 = virtualinvoke $r4.<java.lang.module.ModuleDescriptor: java.lang.String name()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", location=");

        $r8 = r3.<jdk.internal.module.ModuleReferenceImpl: java.net.URI location>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $z0 = virtualinvoke r3.<jdk.internal.module.ModuleReferenceImpl: boolean isPatched()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (patched)");

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}

class jdk.internal.util.Preconditions$1 extends java.lang.Object implements java.util.function.BiFunction
{
    final java.util.function.Function val$f;

    void <init>(java.util.function.Function)
    {
        jdk.internal.util.Preconditions$1 r0;
        java.util.function.Function r1;

        r0 := @this: jdk.internal.util.Preconditions$1;

        r1 := @parameter0: java.util.function.Function;

        r0.<jdk.internal.util.Preconditions$1: java.util.function.Function val$f> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.RuntimeException apply(java.lang.String, java.util.List)
    {
        jdk.internal.util.Preconditions$1 r0;
        java.lang.String r1, $r4;
        java.util.List r2;
        java.util.function.Function $r3;
        java.lang.Object $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: jdk.internal.util.Preconditions$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<jdk.internal.util.Preconditions$1: java.util.function.Function val$f>;

        $r4 = staticinvoke <jdk.internal.util.Preconditions: java.lang.String outOfBoundsMessage(java.lang.String,java.util.List)>(r1, r2);

        $r5 = interfaceinvoke $r3.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($r4);

        $r6 = (java.lang.RuntimeException) $r5;

        return $r6;
    }

    public volatile java.lang.Object apply(java.lang.Object, java.lang.Object)
    {
        jdk.internal.util.Preconditions$1 r0;
        java.lang.Object r1, r2;
        java.util.List $r3;
        java.lang.String $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: jdk.internal.util.Preconditions$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.util.List) r2;

        $r5 = virtualinvoke r0.<jdk.internal.util.Preconditions$1: java.lang.RuntimeException apply(java.lang.String,java.util.List)>($r4, $r3);

        return $r5;
    }
}

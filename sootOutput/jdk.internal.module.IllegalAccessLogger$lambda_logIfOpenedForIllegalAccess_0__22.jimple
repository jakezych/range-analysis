public final class jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22 extends java.lang.Object implements java.util.function.Supplier
{
    java.lang.String cap0;
    java.lang.Class cap1;

    public static java.util.function.Supplier bootstrap$(java.lang.String, java.lang.Class)
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22 $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Class;

        $r2 = new jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22;

        specialinvoke $r2.<jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22: void <init>(java.lang.String,java.lang.Class)>($r0, $r1);

        return $r2;
    }

    public void <init>(java.lang.String, java.lang.Class)
    {
        jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22 $r0;
        java.lang.String $r1;
        java.lang.Class $r2;

        $r0 := @this: jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Class;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22: java.lang.String cap0> = $r1;

        $r0.<jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22: java.lang.Class cap1> = $r2;

        return;
    }

    public java.lang.Object get()
    {
        jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22 $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        $r0 := @this: jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22;

        $r1 = $r0.<jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22: java.lang.String cap0>;

        $r2 = $r0.<jdk.internal.module.IllegalAccessLogger$lambda_logIfOpenedForIllegalAccess_0__22: java.lang.Class cap1>;

        $r3 = staticinvoke <jdk.internal.module.IllegalAccessLogger: java.lang.String lambda$logIfOpenedForIllegalAccess$0(java.lang.String,java.lang.Class)>($r1, $r2);

        return $r3;
    }
}

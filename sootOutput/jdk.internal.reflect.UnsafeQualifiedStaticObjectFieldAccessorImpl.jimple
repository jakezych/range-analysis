class jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl extends jdk.internal.reflect.UnsafeQualifiedStaticFieldAccessorImpl
{

    void <init>(java.lang.reflect.Field, boolean)
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.reflect.Field r1;
        boolean z0;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.reflect.Field;

        z0 := @parameter1: boolean;

        specialinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>(r1, z0);

        return;
    }

    public java.lang.Object get(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        long $l0;
        java.lang.Object $r1, $r3, r4;
        jdk.internal.misc.Unsafe $r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r4 := @parameter0: java.lang.Object;

        $r2 = <jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: jdk.internal.misc.Unsafe unsafe>;

        $r1 = r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.Object base>;

        $l0 = r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: long fieldOffset>;

        $r3 = virtualinvoke $r2.<jdk.internal.misc.Unsafe: java.lang.Object getReferenceVolatile(java.lang.Object,long)>($r1, $l0);

        return $r3;
    }

    public boolean getBoolean(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetBooleanIllegalArgumentException()>();

        throw $r1;
    }

    public byte getByte(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetByteIllegalArgumentException()>();

        throw $r1;
    }

    public char getChar(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetCharIllegalArgumentException()>();

        throw $r1;
    }

    public short getShort(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetShortIllegalArgumentException()>();

        throw $r1;
    }

    public int getInt(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetIntIllegalArgumentException()>();

        throw $r1;
    }

    public long getLong(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetLongIllegalArgumentException()>();

        throw $r1;
    }

    public float getFloat(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetFloatIllegalArgumentException()>();

        throw $r1;
    }

    public double getDouble(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object r2;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.IllegalArgumentException newGetDoubleIllegalArgumentException()>();

        throw $r1;
    }

    public void set(java.lang.Object, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        boolean $z0, $z1;
        java.lang.Object r1, r5, $r7;
        java.lang.reflect.Field $r2;
        java.lang.Class $r3, $r4;
        jdk.internal.misc.Unsafe $r6;
        long $l0;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r5 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: boolean isReadOnly>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>(r1);

     label1:
        if r1 == null goto label2;

        $r2 = r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.reflect.Field field>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>(r1);

     label2:
        $r6 = <jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: jdk.internal.misc.Unsafe unsafe>;

        $r7 = r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.Object base>;

        $l0 = r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: long fieldOffset>;

        virtualinvoke $r6.<jdk.internal.misc.Unsafe: void putReferenceVolatile(java.lang.Object,long,java.lang.Object)>($r7, $l0, r1);

        return;
    }

    public void setBoolean(java.lang.Object, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        boolean z0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(boolean)>(z0);

        return;
    }

    public void setByte(java.lang.Object, byte) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        byte b0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        b0 := @parameter1: byte;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(byte)>(b0);

        return;
    }

    public void setChar(java.lang.Object, char) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        char c0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        c0 := @parameter1: char;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(char)>(c0);

        return;
    }

    public void setShort(java.lang.Object, short) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        short s0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        s0 := @parameter1: short;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(short)>(s0);

        return;
    }

    public void setInt(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(int)>(i0);

        return;
    }

    public void setLong(java.lang.Object, long) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        long l0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(long)>(l0);

        return;
    }

    public void setFloat(java.lang.Object, float) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        float f0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        f0 := @parameter1: float;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(float)>(f0);

        return;
    }

    public void setDouble(java.lang.Object, double) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl r0;
        double d0;
        java.lang.Object r1;

        r0 := @this: jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl;

        r1 := @parameter0: java.lang.Object;

        d0 := @parameter1: double;

        virtualinvoke r0.<jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void throwSetIllegalArgumentException(double)>(d0);

        return;
    }
}

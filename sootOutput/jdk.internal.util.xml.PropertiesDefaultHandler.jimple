public class jdk.internal.util.xml.PropertiesDefaultHandler extends jdk.internal.org.xml.sax.helpers.DefaultHandler
{
    private static final java.lang.String ELEMENT_ROOT;
    private static final java.lang.String ELEMENT_COMMENT;
    private static final java.lang.String ELEMENT_ENTRY;
    private static final java.lang.String ATTR_KEY;
    private static final java.lang.String PROPS_DTD_DECL;
    private static final java.lang.String PROPS_DTD_URI;
    private static final java.lang.String PROPS_DTD;
    private static final java.lang.String EXTERNAL_XML_VERSION;
    private java.util.Properties properties;
    static final java.lang.String ALLOWED_ELEMENTS;
    static final java.lang.String ALLOWED_COMMENT;
    java.lang.StringBuilder buf;
    boolean sawRoot;
    boolean sawComment;
    boolean validEntry;
    java.lang.String key;
    java.lang.String rootElm;

    public void <init>()
    {
        jdk.internal.util.xml.PropertiesDefaultHandler r0;
        java.lang.StringBuilder $r1;

        r0 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        specialinvoke r0.<jdk.internal.org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.StringBuilder buf> = $r1;

        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean sawRoot> = 0;

        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean sawComment> = 0;

        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean validEntry> = 0;

        return;
    }

    public void load(java.util.Properties, java.io.InputStream) throws java.io.IOException, java.util.InvalidPropertiesFormatException, java.io.UnsupportedEncodingException
    {
        jdk.internal.util.xml.PropertiesDefaultHandler r0;
        java.util.Properties r1;
        jdk.internal.util.xml.impl.SAXParserImpl $r2;
        java.io.InputStream r3;
        jdk.internal.org.xml.sax.SAXException $r4;
        java.util.InvalidPropertiesFormatException $r5;

        r0 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r1 := @parameter0: java.util.Properties;

        r3 := @parameter1: java.io.InputStream;

        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.util.Properties properties> = r1;

     label1:
        $r2 = new jdk.internal.util.xml.impl.SAXParserImpl;

        specialinvoke $r2.<jdk.internal.util.xml.impl.SAXParserImpl: void <init>()>();

        virtualinvoke $r2.<jdk.internal.util.xml.SAXParser: void parse(java.io.InputStream,jdk.internal.org.xml.sax.helpers.DefaultHandler)>(r3, r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.util.InvalidPropertiesFormatException;

        specialinvoke $r5.<java.util.InvalidPropertiesFormatException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return;

        catch jdk.internal.org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public void store(java.util.Properties, java.io.OutputStream, java.lang.String, java.nio.charset.Charset) throws java.io.IOException
    {
        jdk.internal.util.xml.impl.XMLStreamWriterImpl $r0;
        java.io.OutputStream r1;
        java.nio.charset.Charset r2;
        java.lang.String r3, $r11, $r12;
        java.util.Properties r4;
        java.util.Iterator r6;
        java.lang.Object $r7, r9, r10;
        java.util.Map$Entry r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        jdk.internal.util.xml.XMLStreamException $r13;
        java.lang.Throwable $r14, $r16, $r18;
        java.io.IOException $r15;
        java.io.UnsupportedEncodingException $r17;
        jdk.internal.util.xml.PropertiesDefaultHandler r20;
        java.util.Set $r23;

        r20 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r4 := @parameter0: java.util.Properties;

        r1 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: java.lang.String;

        r2 := @parameter3: java.nio.charset.Charset;

     label01:
        $r0 = new jdk.internal.util.xml.impl.XMLStreamWriterImpl;

        specialinvoke $r0.<jdk.internal.util.xml.impl.XMLStreamWriterImpl: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r1, r2);

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeStartDocument()>();

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeDTD(java.lang.String)>("<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">");

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeStartElement(java.lang.String)>("properties");

        if r3 == null goto label02;

        $z2 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label02;

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeStartElement(java.lang.String)>("comment");

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeCharacters(java.lang.String)>(r3);

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeEndElement()>();

     label02:
        entermonitor r4;

     label03:
        $r23 = virtualinvoke r4.<java.util.Properties: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = r9 instanceof java.lang.String;

        if $z0 == 0 goto label05;

        $z1 = r10 instanceof java.lang.String;

        if $z1 == 0 goto label05;

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeStartElement(java.lang.String)>("entry");

        $r11 = (java.lang.String) r9;

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>("key", $r11);

        $r12 = (java.lang.String) r10;

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeCharacters(java.lang.String)>($r12);

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeEndElement()>();

     label05:
        goto label04;

     label06:
        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r18 := @caughtexception;

        exitmonitor r4;

     label09:
        throw $r18;

     label10:
        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeEndElement()>();

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void writeEndDocument()>();

        interfaceinvoke $r0.<jdk.internal.util.xml.XMLStreamWriter: void flush()>();

     label11:
        goto label14;

     label12:
        $r13 := @caughtexception;

        $r14 = virtualinvoke $r13.<jdk.internal.util.xml.XMLStreamException: java.lang.Throwable getCause()>();

        $z3 = $r14 instanceof java.io.UnsupportedEncodingException;

        if $z3 == 0 goto label13;

        $r16 = virtualinvoke $r13.<jdk.internal.util.xml.XMLStreamException: java.lang.Throwable getCause()>();

        $r17 = (java.io.UnsupportedEncodingException) $r16;

        throw $r17;

     label13:
        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.Throwable)>($r13);

        throw $r15;

     label14:
        return;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch jdk.internal.util.xml.XMLStreamException from label01 to label11 with label12;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, jdk.internal.org.xml.sax.Attributes) throws jdk.internal.org.xml.sax.SAXException
    {
        jdk.internal.util.xml.PropertiesDefaultHandler r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r1, r2, $r3, $r6, $r7, $r14, $r17, $r19, $r25, r26, r27;
        jdk.internal.org.xml.sax.SAXParseException $r4, $r8, $r9, $r18, $r20;
        jdk.internal.org.xml.sax.Attributes r5;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15, $r16, $r21, $r22, $r23, $r24;

        r0 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r26 := @parameter0: java.lang.String;

        r27 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: jdk.internal.org.xml.sax.Attributes;

        $z0 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean sawRoot>;

        if $z0 == 0 goto label1;

        $r19 = "comment, entry";

        $z4 = virtualinvoke $r19.<java.lang.String: boolean contains(java.lang.CharSequence)>(r2);

        if $z4 != 0 goto label4;

        $r20 = new jdk.internal.org.xml.sax.SAXParseException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Element type \"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" must be declared.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>($r25, null);

        virtualinvoke r0.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r20);

        goto label4;

     label1:
        $r1 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String rootElm>;

        if $r1 != null goto label2;

        $r18 = new jdk.internal.org.xml.sax.SAXParseException;

        specialinvoke $r18.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>("An XML properties document must contain the DOCTYPE declaration as defined by java.util.Properties.", null);

        virtualinvoke r0.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r18);

     label2:
        $r3 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String rootElm>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label3;

        $r9 = new jdk.internal.org.xml.sax.SAXParseException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document root element \"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", must match DOCTYPE root \"");

        $r14 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String rootElm>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>($r17, null);

        virtualinvoke r0.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r9);

     label3:
        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean sawRoot> = 1;

     label4:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("entry");

        if $z5 == 0 goto label5;

        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean validEntry> = 1;

        $r6 = interfaceinvoke r5.<jdk.internal.org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("key");

        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String key> = $r6;

        $r7 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String key>;

        if $r7 != null goto label7;

        $r8 = new jdk.internal.org.xml.sax.SAXParseException;

        specialinvoke $r8.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>("Attribute \"key\" is required and must be specified for element type \"entry\"", null);

        virtualinvoke r0.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r8);

        goto label7;

     label5:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("comment");

        if $z2 == 0 goto label7;

        $z3 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean sawComment>;

        if $z3 == 0 goto label6;

        $r4 = new jdk.internal.org.xml.sax.SAXParseException;

        specialinvoke $r4.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>("Only one comment element may be allowed. The content of element type \"properties\" must match \"(comment?,entry*)\"", null);

        virtualinvoke r0.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r4);

     label6:
        r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean sawComment> = 1;

     label7:
        return;
    }

    public void characters(char[], int, int) throws jdk.internal.org.xml.sax.SAXException
    {
        jdk.internal.util.xml.PropertiesDefaultHandler r0;
        boolean $z0;
        char[] r1;
        int i0, i1;
        java.lang.StringBuilder $r2;

        r0 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean validEntry>;

        if $z0 == 0 goto label1;

        $r2 = r0.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.StringBuilder buf>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i0, i1);

     label1:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws jdk.internal.org.xml.sax.SAXException
    {
        java.lang.String r0, $r1, $r5, $r6, $r11, $r17, r18, r19;
        boolean $z0, $z1, $z2;
        jdk.internal.util.xml.PropertiesDefaultHandler r2;
        java.lang.StringBuilder $r3, $r8, $r9, $r13, $r14, $r15, $r16;
        java.util.Properties $r4;
        int $i0;
        jdk.internal.org.xml.sax.SAXParseException $r12;

        r2 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        $r1 = "comment, entry";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $r11 = "properties";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label1;

        $r12 = new jdk.internal.org.xml.sax.SAXParseException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Element: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid, must match  \"(comment?,entry*)\".");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>($r17, null);

        virtualinvoke r2.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r12);

     label1:
        $z2 = r2.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean validEntry>;

        if $z2 == 0 goto label2;

        $r4 = r2.<jdk.internal.util.xml.PropertiesDefaultHandler: java.util.Properties properties>;

        $r5 = r2.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String key>;

        $r3 = r2.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.StringBuilder buf>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r5, $r6);

        $r9 = r2.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.StringBuilder buf>;

        $r8 = r2.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.StringBuilder buf>;

        $i0 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i0);

        r2.<jdk.internal.util.xml.PropertiesDefaultHandler: boolean validEntry> = 0;

     label2:
        return;
    }

    public jdk.internal.org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws jdk.internal.org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.String r0, $r5, r7;
        boolean $z0;
        jdk.internal.org.xml.sax.SAXException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        jdk.internal.util.xml.PropertiesDefaultHandler r6;

        r6 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://java.sun.com/dtd/properties.dtd");

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = new jdk.internal.org.xml.sax.SAXException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid system identifier: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<jdk.internal.org.xml.sax.SAXException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public void error(jdk.internal.org.xml.sax.SAXParseException) throws jdk.internal.org.xml.sax.SAXException
    {
        jdk.internal.org.xml.sax.SAXParseException r0;
        jdk.internal.util.xml.PropertiesDefaultHandler r1;

        r1 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r0 := @parameter0: jdk.internal.org.xml.sax.SAXParseException;

        throw r0;
    }

    public void fatalError(jdk.internal.org.xml.sax.SAXParseException) throws jdk.internal.org.xml.sax.SAXException
    {
        jdk.internal.org.xml.sax.SAXParseException r0;
        jdk.internal.util.xml.PropertiesDefaultHandler r1;

        r1 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r0 := @parameter0: jdk.internal.org.xml.sax.SAXParseException;

        throw r0;
    }

    public void warning(jdk.internal.org.xml.sax.SAXParseException) throws jdk.internal.org.xml.sax.SAXException
    {
        jdk.internal.org.xml.sax.SAXParseException r0;
        jdk.internal.util.xml.PropertiesDefaultHandler r1;

        r1 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r0 := @parameter0: jdk.internal.org.xml.sax.SAXParseException;

        throw r0;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws jdk.internal.org.xml.sax.SAXException
    {
        java.lang.String r0, $r1, r4, $r5, r6;
        boolean $z0, $z1;
        jdk.internal.util.xml.PropertiesDefaultHandler r2;
        jdk.internal.org.xml.sax.SAXParseException $r3;

        r2 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = "properties";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r5 = "http://java.sun.com/dtd/properties.dtd";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label2;

     label1:
        $r3 = new jdk.internal.org.xml.sax.SAXParseException;

        specialinvoke $r3.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>("An XML properties document must contain the DOCTYPE declaration as defined by java.util.Properties.", null);

        virtualinvoke r2.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r3);

     label2:
        r2.<jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String rootElm> = r0;

        return;
    }

    public void startInternalSub() throws jdk.internal.org.xml.sax.SAXException
    {
        jdk.internal.util.xml.PropertiesDefaultHandler r0;
        jdk.internal.org.xml.sax.SAXParseException $r1;

        r0 := @this: jdk.internal.util.xml.PropertiesDefaultHandler;

        $r1 = new jdk.internal.org.xml.sax.SAXParseException;

        specialinvoke $r1.<jdk.internal.org.xml.sax.SAXParseException: void <init>(java.lang.String,jdk.internal.org.xml.sax.Locator)>("Internal DTD subset is not allowed. The Properties XML document must have the following DOCTYPE declaration: \n<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">", null);

        virtualinvoke r0.<jdk.internal.util.xml.PropertiesDefaultHandler: void fatalError(jdk.internal.org.xml.sax.SAXParseException)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String ALLOWED_COMMENT> = "comment";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String ALLOWED_ELEMENTS> = "comment, entry";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String EXTERNAL_XML_VERSION> = "1.0";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String PROPS_DTD> = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- DTD for properties --><!ELEMENT properties ( comment?, entry* ) ><!ATTLIST properties version CDATA #FIXED \"1.0\"><!ELEMENT comment (#PCDATA) ><!ELEMENT entry (#PCDATA) ><!ATTLIST entry  key CDATA #REQUIRED>";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String PROPS_DTD_URI> = "http://java.sun.com/dtd/properties.dtd";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String PROPS_DTD_DECL> = "<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String ATTR_KEY> = "key";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String ELEMENT_ENTRY> = "entry";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String ELEMENT_COMMENT> = "comment";

        <jdk.internal.util.xml.PropertiesDefaultHandler: java.lang.String ELEMENT_ROOT> = "properties";

        return;
    }
}

public class jdk.internal.misc.VM extends java.lang.Object
{
    private static final int JAVA_LANG_SYSTEM_INITED;
    private static final int MODULE_SYSTEM_INITED;
    private static final int SYSTEM_LOADER_INITIALIZING;
    private static final int SYSTEM_BOOTED;
    private static final int SYSTEM_SHUTDOWN;
    private static volatile int initLevel;
    private static final java.lang.Object lock;
    private static long directMemory;
    private static boolean pageAlignDirectMemory;
    private static java.util.Map savedProps;
    private static volatile int finalRefCount;
    private static volatile int peakFinalRefCount;
    private static final int JVMTI_THREAD_STATE_ALIVE;
    private static final int JVMTI_THREAD_STATE_TERMINATED;
    private static final int JVMTI_THREAD_STATE_RUNNABLE;
    private static final int JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER;
    private static final int JVMTI_THREAD_STATE_WAITING_INDEFINITELY;
    private static final int JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT;

    public void <init>()
    {
        jdk.internal.misc.VM r0;

        r0 := @this: jdk.internal.misc.VM;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void initLevel(int)
    {
        java.lang.Object $r0, $r7;
        int i0, $i1;
        java.lang.InternalError $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Throwable $r8;

        i0 := @parameter0: int;

        $r0 = <jdk.internal.misc.VM: java.lang.Object lock>;

        entermonitor $r0;

     label1:
        $i1 = <jdk.internal.misc.VM: int initLevel>;

        if i0 <= $i1 goto label2;

        if i0 <= 5 goto label3;

     label2:
        $r2 = new java.lang.InternalError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad level: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.InternalError: void <init>(java.lang.String)>($r6);

        throw $r2;

     label3:
        <jdk.internal.misc.VM: int initLevel> = i0;

        $r7 = <jdk.internal.misc.VM: java.lang.Object lock>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static int initLevel()
    {
        int $i0;

        $i0 = <jdk.internal.misc.VM: int initLevel>;

        return $i0;
    }

    public static void awaitInitLevel(int) throws java.lang.InterruptedException
    {
        java.lang.Object $r0, $r2;
        int i0, $i1;
        java.lang.Throwable $r3;

        i0 := @parameter0: int;

        $r0 = <jdk.internal.misc.VM: java.lang.Object lock>;

        entermonitor $r0;

     label1:
        $i1 = <jdk.internal.misc.VM: int initLevel>;

        if $i1 >= i0 goto label2;

        $r2 = <jdk.internal.misc.VM: java.lang.Object lock>;

        virtualinvoke $r2.<java.lang.Object: void wait()>();

        goto label1;

     label2:
        exitmonitor $r0;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static boolean isModuleSystemInited()
    {
        int $i0;
        boolean $z0;

        $i0 = staticinvoke <jdk.internal.misc.VM: int initLevel()>();

        if $i0 < 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isBooted()
    {
        int $i0;
        boolean $z0;

        $i0 = <jdk.internal.misc.VM: int initLevel>;

        if $i0 < 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void shutdown()
    {
        staticinvoke <jdk.internal.misc.VM: void initLevel(int)>(5);

        return;
    }

    public static boolean isShutdown()
    {
        int $i0;
        boolean $z0;

        $i0 = <jdk.internal.misc.VM: int initLevel>;

        if $i0 != 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static long maxDirectMemory()
    {
        long $l0;

        $l0 = <jdk.internal.misc.VM: long directMemory>;

        return $l0;
    }

    public static boolean isDirectMemoryPageAligned()
    {
        boolean $z0;

        $z0 = <jdk.internal.misc.VM: boolean pageAlignDirectMemory>;

        return $z0;
    }

    public static boolean isSystemDomainLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.ClassLoader;

        if r0 == null goto label1;

        $r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getPlatformClassLoader()>();

        if r0 != $r1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static java.lang.String getSavedProperty(java.lang.String)
    {
        java.util.Map $r0, $r2;
        java.lang.String r1, $r4;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r5;

        r1 := @parameter0: java.lang.String;

        $r0 = <jdk.internal.misc.VM: java.util.Map savedProps>;

        if $r0 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not yet initialized");

        throw $r5;

     label1:
        $r2 = <jdk.internal.misc.VM: java.util.Map savedProps>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static java.util.Map getSavedProperties()
    {
        java.util.Map $r0, $r1, $r2;
        java.lang.IllegalStateException $r3;

        $r0 = <jdk.internal.misc.VM: java.util.Map savedProps>;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not yet initialized");

        throw $r3;

     label1:
        $r1 = <jdk.internal.misc.VM: java.util.Map savedProps>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public static void saveProperties(java.util.Map)
    {
        int $i0;
        java.util.Map $r0, r1;
        java.lang.Object $r2, $r6;
        boolean $z0, $z1, $z2;
        long l1, $l3;
        byte $b2;
        java.lang.IllegalStateException $r3;
        java.lang.String r4, r7, $r8;
        java.lang.Runtime $r5;

        r1 := @parameter0: java.util.Map;

        $i0 = staticinvoke <jdk.internal.misc.VM: int initLevel()>();

        if $i0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Wrong init level");

        throw $r3;

     label1:
        $r0 = <jdk.internal.misc.VM: java.util.Map savedProps>;

        if $r0 != null goto label2;

        <jdk.internal.misc.VM: java.util.Map savedProps> = r1;

     label2:
        $r2 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("sun.nio.MaxDirectMemorySize");

        r4 = (java.lang.String) $r2;

        if r4 == null goto label3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-1");

        if $z1 == 0 goto label4;

     label3:
        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l3 = virtualinvoke $r5.<java.lang.Runtime: long maxMemory()>();

        <jdk.internal.misc.VM: long directMemory> = $l3;

        goto label5;

     label4:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

        $b2 = l1 cmp -1L;

        if $b2 <= 0 goto label5;

        <jdk.internal.misc.VM: long directMemory> = l1;

     label5:
        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("sun.nio.PageAlignDirectMemory");

        r7 = (java.lang.String) $r6;

        $r8 = "true";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label6;

        <jdk.internal.misc.VM: boolean pageAlignDirectMemory> = 1;

     label6:
        return;
    }

    public static void initializeOSEnvironment()
    {
        int $i0;

        $i0 = staticinvoke <jdk.internal.misc.VM: int initLevel()>();

        if $i0 != 0 goto label1;

        staticinvoke <jdk.internal.misc.OSEnvironment: void initialize()>();

     label1:
        return;
    }

    public static int getFinalRefCount()
    {
        int $i0;

        $i0 = <jdk.internal.misc.VM: int finalRefCount>;

        return $i0;
    }

    public static int getPeakFinalRefCount()
    {
        int $i0;

        $i0 = <jdk.internal.misc.VM: int peakFinalRefCount>;

        return $i0;
    }

    public static void addFinalRefCount(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        $i1 = <jdk.internal.misc.VM: int finalRefCount>;

        $i2 = $i1 + i0;

        <jdk.internal.misc.VM: int finalRefCount> = $i2;

        $i4 = <jdk.internal.misc.VM: int finalRefCount>;

        $i3 = <jdk.internal.misc.VM: int peakFinalRefCount>;

        if $i4 <= $i3 goto label1;

        $i5 = <jdk.internal.misc.VM: int finalRefCount>;

        <jdk.internal.misc.VM: int peakFinalRefCount> = $i5;

     label1:
        return;
    }

    public static java.lang.Thread$State toThreadState(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Thread$State $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        i0 := @parameter0: int;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $r6 = <java.lang.Thread$State: java.lang.Thread$State RUNNABLE>;

        return $r6;

     label1:
        $i2 = i0 & 1024;

        if $i2 == 0 goto label2;

        $r5 = <java.lang.Thread$State: java.lang.Thread$State BLOCKED>;

        return $r5;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        $r4 = <java.lang.Thread$State: java.lang.Thread$State WAITING>;

        return $r4;

     label3:
        $i4 = i0 & 32;

        if $i4 == 0 goto label4;

        $r3 = <java.lang.Thread$State: java.lang.Thread$State TIMED_WAITING>;

        return $r3;

     label4:
        $i5 = i0 & 2;

        if $i5 == 0 goto label5;

        $r2 = <java.lang.Thread$State: java.lang.Thread$State TERMINATED>;

        return $r2;

     label5:
        $i6 = i0 & 1;

        if $i6 != 0 goto label6;

        $r1 = <java.lang.Thread$State: java.lang.Thread$State NEW>;

        return $r1;

     label6:
        $r0 = <java.lang.Thread$State: java.lang.Thread$State RUNNABLE>;

        return $r0;
    }

    public static java.lang.ClassLoader latestUserDefinedLoader()
    {
        java.lang.ClassLoader r0, $r1;

        r0 = staticinvoke <jdk.internal.misc.VM: java.lang.ClassLoader latestUserDefinedLoader0()>();

        if r0 == null goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getPlatformClassLoader()>();

     label2:
        return $r1;
    }

    private static native java.lang.ClassLoader latestUserDefinedLoader0();

    public static boolean isSetUID()
    {
        long l0, l1, l2, l3;
        byte $b4, $b5;
        boolean $z0;

        l0 = staticinvoke <jdk.internal.misc.VM: long getuid()>();

        l1 = staticinvoke <jdk.internal.misc.VM: long geteuid()>();

        l2 = staticinvoke <jdk.internal.misc.VM: long getgid()>();

        l3 = staticinvoke <jdk.internal.misc.VM: long getegid()>();

        $b4 = l0 cmp l1;

        if $b4 != 0 goto label1;

        $b5 = l2 cmp l3;

        if $b5 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static native long getuid();

    public static native long geteuid();

    public static native long getgid();

    public static native long getegid();

    public static native long getNanoTimeAdjustment(long);

    public static native java.lang.String[] getRuntimeArguments();

    private static native void initialize();

    public static native void initializeFromArchive(java.lang.Class);

    static void <clinit>()
    {
        java.lang.Object $r0;

        <jdk.internal.misc.VM: int JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT> = 32;

        <jdk.internal.misc.VM: int JVMTI_THREAD_STATE_WAITING_INDEFINITELY> = 16;

        <jdk.internal.misc.VM: int JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER> = 1024;

        <jdk.internal.misc.VM: int JVMTI_THREAD_STATE_RUNNABLE> = 4;

        <jdk.internal.misc.VM: int JVMTI_THREAD_STATE_TERMINATED> = 2;

        <jdk.internal.misc.VM: int JVMTI_THREAD_STATE_ALIVE> = 1;

        <jdk.internal.misc.VM: int SYSTEM_SHUTDOWN> = 5;

        <jdk.internal.misc.VM: int SYSTEM_BOOTED> = 4;

        <jdk.internal.misc.VM: int SYSTEM_LOADER_INITIALIZING> = 3;

        <jdk.internal.misc.VM: int MODULE_SYSTEM_INITED> = 2;

        <jdk.internal.misc.VM: int JAVA_LANG_SYSTEM_INITED> = 1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <jdk.internal.misc.VM: java.lang.Object lock> = $r0;

        <jdk.internal.misc.VM: long directMemory> = 67108864L;

        staticinvoke <jdk.internal.misc.VM: void initialize()>();

        return;
    }
}

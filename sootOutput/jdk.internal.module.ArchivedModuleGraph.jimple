final class jdk.internal.module.ArchivedModuleGraph extends java.lang.Object
{
    private static jdk.internal.module.ArchivedModuleGraph archivedModuleGraph;
    private final java.lang.String mainModule;
    private final boolean hasSplitPackages;
    private final boolean hasIncubatorModules;
    private final java.lang.module.ModuleFinder finder;
    private final java.lang.module.Configuration configuration;
    private final java.util.Map concealedPackagesToOpen;
    private final java.util.Map exportedPackagesToOpen;

    private void <init>(java.lang.String, boolean, boolean, java.lang.module.ModuleFinder, java.lang.module.Configuration, java.util.Map, java.util.Map)
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        java.lang.String r1;
        boolean z0, z1;
        java.lang.module.ModuleFinder r2;
        java.lang.module.Configuration r3;
        java.util.Map r4, r5;

        r0 := @this: jdk.internal.module.ArchivedModuleGraph;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.lang.module.ModuleFinder;

        r3 := @parameter4: java.lang.module.Configuration;

        r4 := @parameter5: java.util.Map;

        r5 := @parameter6: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.module.ArchivedModuleGraph: java.lang.String mainModule> = r1;

        r0.<jdk.internal.module.ArchivedModuleGraph: boolean hasSplitPackages> = z0;

        r0.<jdk.internal.module.ArchivedModuleGraph: boolean hasIncubatorModules> = z1;

        r0.<jdk.internal.module.ArchivedModuleGraph: java.lang.module.ModuleFinder finder> = r2;

        r0.<jdk.internal.module.ArchivedModuleGraph: java.lang.module.Configuration configuration> = r3;

        r0.<jdk.internal.module.ArchivedModuleGraph: java.util.Map concealedPackagesToOpen> = r4;

        r0.<jdk.internal.module.ArchivedModuleGraph: java.util.Map exportedPackagesToOpen> = r5;

        return;
    }

    java.lang.module.ModuleFinder finder()
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        java.lang.module.ModuleFinder $r1;

        r0 := @this: jdk.internal.module.ArchivedModuleGraph;

        $r1 = r0.<jdk.internal.module.ArchivedModuleGraph: java.lang.module.ModuleFinder finder>;

        return $r1;
    }

    java.lang.module.Configuration configuration()
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        java.lang.module.Configuration $r1;

        r0 := @this: jdk.internal.module.ArchivedModuleGraph;

        $r1 = r0.<jdk.internal.module.ArchivedModuleGraph: java.lang.module.Configuration configuration>;

        return $r1;
    }

    java.util.Map concealedPackagesToOpen()
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        java.util.Map $r1;

        r0 := @this: jdk.internal.module.ArchivedModuleGraph;

        $r1 = r0.<jdk.internal.module.ArchivedModuleGraph: java.util.Map concealedPackagesToOpen>;

        return $r1;
    }

    java.util.Map exportedPackagesToOpen()
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        java.util.Map $r1;

        r0 := @this: jdk.internal.module.ArchivedModuleGraph;

        $r1 = r0.<jdk.internal.module.ArchivedModuleGraph: java.util.Map exportedPackagesToOpen>;

        return $r1;
    }

    boolean hasSplitPackages()
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        boolean $z0;

        r0 := @this: jdk.internal.module.ArchivedModuleGraph;

        $z0 = r0.<jdk.internal.module.ArchivedModuleGraph: boolean hasSplitPackages>;

        return $z0;
    }

    boolean hasIncubatorModules()
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        boolean $z0;

        r0 := @this: jdk.internal.module.ArchivedModuleGraph;

        $z0 = r0.<jdk.internal.module.ArchivedModuleGraph: boolean hasIncubatorModules>;

        return $z0;
    }

    static jdk.internal.module.ArchivedModuleGraph get(java.lang.String)
    {
        jdk.internal.module.ArchivedModuleGraph r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r0 = <jdk.internal.module.ArchivedModuleGraph: jdk.internal.module.ArchivedModuleGraph archivedModuleGraph>;

        if r0 == null goto label1;

        $r2 = r0.<jdk.internal.module.ArchivedModuleGraph: java.lang.String mainModule>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        return null;
    }

    static void archive(java.lang.String, boolean, boolean, java.lang.module.ModuleFinder, java.lang.module.Configuration, java.util.Map, java.util.Map)
    {
        java.lang.String r0;
        jdk.internal.module.ArchivedModuleGraph $r1;
        boolean z0, z1;
        java.lang.module.ModuleFinder r2;
        java.lang.module.Configuration r3;
        java.util.Map r4, r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.lang.module.ModuleFinder;

        r3 := @parameter4: java.lang.module.Configuration;

        r4 := @parameter5: java.util.Map;

        r5 := @parameter6: java.util.Map;

        if r0 == null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        $r1 = new jdk.internal.module.ArchivedModuleGraph;

        specialinvoke $r1.<jdk.internal.module.ArchivedModuleGraph: void <init>(java.lang.String,boolean,boolean,java.lang.module.ModuleFinder,java.lang.module.Configuration,java.util.Map,java.util.Map)>(r0, z0, z1, r2, r3, r4, r5);

        <jdk.internal.module.ArchivedModuleGraph: jdk.internal.module.ArchivedModuleGraph archivedModuleGraph> = $r1;

        return;
    }

    static void <clinit>()
    {
        staticinvoke <jdk.internal.misc.VM: void initializeFromArchive(java.lang.Class)>(class "Ljdk/internal/module/ArchivedModuleGraph;");

        return;
    }
}

final class jdk.internal.org.objectweb.asm.ModuleWriter extends jdk.internal.org.objectweb.asm.ModuleVisitor
{
    private final jdk.internal.org.objectweb.asm.SymbolTable symbolTable;
    private final int moduleNameIndex;
    private final int moduleFlags;
    private final int moduleVersionIndex;
    private int requiresCount;
    private final jdk.internal.org.objectweb.asm.ByteVector requires;
    private int exportsCount;
    private final jdk.internal.org.objectweb.asm.ByteVector exports;
    private int opensCount;
    private final jdk.internal.org.objectweb.asm.ByteVector opens;
    private int usesCount;
    private final jdk.internal.org.objectweb.asm.ByteVector usesIndex;
    private int providesCount;
    private final jdk.internal.org.objectweb.asm.ByteVector provides;
    private int packageCount;
    private final jdk.internal.org.objectweb.asm.ByteVector packageIndex;
    private int mainClassIndex;

    void <init>(jdk.internal.org.objectweb.asm.SymbolTable, int, int, int)
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        jdk.internal.org.objectweb.asm.SymbolTable r1;
        int i0, i1, i2;
        jdk.internal.org.objectweb.asm.ByteVector $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.SymbolTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: void <init>(int)>(458752);

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable> = r1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int moduleNameIndex> = i0;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int moduleFlags> = i1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int moduleVersionIndex> = i2;

        $r2 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r2.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector requires> = $r2;

        $r3 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r3.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports> = $r3;

        $r4 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r4.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens> = $r4;

        $r5 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector usesIndex> = $r5;

        $r6 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r6.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides> = $r6;

        $r7 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r7.<jdk.internal.org.objectweb.asm.ByteVector: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector packageIndex> = $r7;

        return;
    }

    public void visitMainClass(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        java.lang.String r1;
        jdk.internal.org.objectweb.asm.SymbolTable $r2;
        jdk.internal.org.objectweb.asm.Symbol $r3;
        int $i0;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r3 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i0 = $r3.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int mainClassIndex> = $i0;

        return;
    }

    public void visitPackage(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        java.lang.String r1;
        jdk.internal.org.objectweb.asm.SymbolTable $r2;
        jdk.internal.org.objectweb.asm.ByteVector $r3;
        jdk.internal.org.objectweb.asm.Symbol $r4;
        int $i0, $i1, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector packageIndex>;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r4 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantPackage(java.lang.String)>(r1);

        $i0 = $r4.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i0);

        $i1 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int packageCount>;

        $i2 = $i1 + 1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int packageCount> = $i2;

        return;
    }

    public void visitRequire(java.lang.String, int, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        java.lang.String r1, r7;
        jdk.internal.org.objectweb.asm.SymbolTable $r2, $r8;
        jdk.internal.org.objectweb.asm.ByteVector $r3, $r5, $r6;
        jdk.internal.org.objectweb.asm.Symbol $r4;
        int $i0, i1, $i2, $i3, $i4;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector requires>;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r4 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantModule(java.lang.String)>(r1);

        $i0 = $r4.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        $r5 = virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i0);

        $r6 = virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(i1);

        if r7 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $r8 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $i4 = virtualinvoke $r8.<jdk.internal.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>(r7);

     label2:
        virtualinvoke $r6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i4);

        $i2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int requiresCount>;

        $i3 = $i2 + 1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int requiresCount> = $i3;

        return;
    }

    public transient void visitExport(java.lang.String, int, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        java.lang.String r1, r11;
        jdk.internal.org.objectweb.asm.SymbolTable $r2, $r12;
        jdk.internal.org.objectweb.asm.ByteVector $r3, $r5, $r8, $r13, $r16;
        jdk.internal.org.objectweb.asm.Symbol $r4, $r14;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, i7;
        java.lang.String[] r7;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String[];

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r4 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantPackage(java.lang.String)>(r1);

        $i0 = $r4.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        $r5 = virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i0);

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(i1);

        if r7 != null goto label1;

        $r16 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        virtualinvoke $r16.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        goto label3;

     label1:
        $r8 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        $i2 = lengthof r7;

        virtualinvoke $r8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i2);

        i3 = lengthof r7;

        i7 = 0;

     label2:
        if i7 >= i3 goto label3;

        r11 = r7[i7];

        $r13 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        $r12 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r14 = virtualinvoke $r12.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantModule(java.lang.String)>(r11);

        $i6 = $r14.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i6);

        i7 = i7 + 1;

        goto label2;

     label3:
        $i4 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int exportsCount>;

        $i5 = $i4 + 1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int exportsCount> = $i5;

        return;
    }

    public transient void visitOpen(java.lang.String, int, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        java.lang.String r1, r11;
        jdk.internal.org.objectweb.asm.SymbolTable $r2, $r12;
        jdk.internal.org.objectweb.asm.ByteVector $r3, $r5, $r8, $r13, $r16;
        jdk.internal.org.objectweb.asm.Symbol $r4, $r14;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, i7;
        java.lang.String[] r7;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String[];

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r4 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantPackage(java.lang.String)>(r1);

        $i0 = $r4.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        $r5 = virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i0);

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(i1);

        if r7 != null goto label1;

        $r16 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        virtualinvoke $r16.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(0);

        goto label3;

     label1:
        $r8 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        $i2 = lengthof r7;

        virtualinvoke $r8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i2);

        i3 = lengthof r7;

        i7 = 0;

     label2:
        if i7 >= i3 goto label3;

        r11 = r7[i7];

        $r13 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        $r12 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r14 = virtualinvoke $r12.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantModule(java.lang.String)>(r11);

        $i6 = $r14.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i6);

        i7 = i7 + 1;

        goto label2;

     label3:
        $i4 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int opensCount>;

        $i5 = $i4 + 1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int opensCount> = $i5;

        return;
    }

    public void visitUse(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        java.lang.String r1;
        jdk.internal.org.objectweb.asm.SymbolTable $r2;
        jdk.internal.org.objectweb.asm.ByteVector $r3;
        jdk.internal.org.objectweb.asm.Symbol $r4;
        int $i0, $i1, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector usesIndex>;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r4 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i0 = $r4.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i0);

        $i1 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int usesCount>;

        $i2 = $i1 + 1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int usesCount> = $i2;

        return;
    }

    public transient void visitProvide(java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        java.lang.String r1, r10;
        jdk.internal.org.objectweb.asm.SymbolTable $r2, $r11;
        jdk.internal.org.objectweb.asm.ByteVector $r3, $r7, $r12;
        jdk.internal.org.objectweb.asm.Symbol $r4, $r13;
        int $i0, $i1, i2, $i3, $i4, $i5, i6;
        java.lang.String[] r6;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String[];

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides>;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r4 = virtualinvoke $r2.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r1);

        $i0 = $r4.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i0);

        $r7 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides>;

        $i1 = lengthof r6;

        virtualinvoke $r7.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i1);

        i2 = lengthof r6;

        i6 = 0;

     label1:
        if i6 >= i2 goto label2;

        r10 = r6[i6];

        $r12 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides>;

        $r11 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $r13 = virtualinvoke $r11.<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addConstantClass(java.lang.String)>(r10);

        $i5 = $r13.<jdk.internal.org.objectweb.asm.Symbol: int index>;

        virtualinvoke $r12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i5);

        i6 = i6 + 1;

        goto label1;

     label2:
        $i3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int providesCount>;

        $i4 = $i3 + 1;

        r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int providesCount> = $i4;

        return;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        return;
    }

    int getAttributeCount()
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        int $i0, $i1, $i2, $i3;
        byte $b5, $b6;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        $i0 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int packageCount>;

        if $i0 <= 0 goto label1;

        $b5 = 1;

        goto label2;

     label1:
        $b5 = 0;

     label2:
        $i2 = 1 + $b5;

        $i1 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int mainClassIndex>;

        if $i1 <= 0 goto label3;

        $b6 = 1;

        goto label4;

     label3:
        $b6 = 0;

     label4:
        $i3 = $i2 + $b6;

        return $i3;
    }

    int computeAttributesSize()
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        jdk.internal.org.objectweb.asm.SymbolTable $r1, $r7, $r8;
        jdk.internal.org.objectweb.asm.ByteVector $r2, $r3, $r4, $r5, $r6, $r9;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i16;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r1.<jdk.internal.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Module");

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector requires>;

        $i1 = $r2.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i3 = 22 + $i1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        $i2 = $r3.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i5 = $i3 + $i2;

        $r4 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        $i4 = $r4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i7 = $i5 + $i4;

        $r5 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector usesIndex>;

        $i6 = $r5.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i9 = $i7 + $i6;

        $r6 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides>;

        $i8 = $r6.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        i16 = $i9 + $i8;

        $i10 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int packageCount>;

        if $i10 <= 0 goto label1;

        $r8 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r8.<jdk.internal.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("ModulePackages");

        $r9 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector packageIndex>;

        $i14 = $r9.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i15 = 8 + $i14;

        i16 = i16 + $i15;

     label1:
        $i11 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int mainClassIndex>;

        if $i11 <= 0 goto label2;

        $r7 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        virtualinvoke $r7.<jdk.internal.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("ModuleMainClass");

        i16 = i16 + 8;

     label2:
        return i16;
    }

    void putAttributes(jdk.internal.org.objectweb.asm.ByteVector)
    {
        jdk.internal.org.objectweb.asm.ModuleWriter r0;
        jdk.internal.org.objectweb.asm.ByteVector $r1, $r2, $r3, $r4, $r5, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r39, $r40, $r43, $r44, $r45, $r46, $r47, $r48;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        jdk.internal.org.objectweb.asm.SymbolTable $r7, $r38, $r42;
        byte[] $r16, $r21, $r26, $r31, $r36, $r49;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleWriter;

        r6 := @parameter0: jdk.internal.org.objectweb.asm.ByteVector;

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector requires>;

        $i0 = $r1.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i2 = 16 + $i0;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        $i1 = $r2.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i4 = $i2 + $i1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        $i3 = $r3.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i6 = $i4 + $i3;

        $r4 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector usesIndex>;

        $i5 = $r4.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i8 = $i6 + $i5;

        $r5 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides>;

        $i7 = $r5.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        i9 = $i8 + $i7;

        $r7 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $i10 = virtualinvoke $r7.<jdk.internal.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("Module");

        $r8 = virtualinvoke r6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i10);

        $r9 = virtualinvoke $r8.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(i9);

        $i11 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int moduleNameIndex>;

        $r10 = virtualinvoke $r9.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i11);

        $i12 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int moduleFlags>;

        $r11 = virtualinvoke $r10.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i12);

        $i13 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int moduleVersionIndex>;

        $r12 = virtualinvoke $r11.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i13);

        $i14 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int requiresCount>;

        $r13 = virtualinvoke $r12.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i14);

        $r14 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector requires>;

        $r16 = $r14.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $r15 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector requires>;

        $i15 = $r15.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $r17 = virtualinvoke $r13.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r16, 0, $i15);

        $i16 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int exportsCount>;

        $r18 = virtualinvoke $r17.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i16);

        $r19 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        $r21 = $r19.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $r20 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector exports>;

        $i17 = $r20.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $r22 = virtualinvoke $r18.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r21, 0, $i17);

        $i18 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int opensCount>;

        $r23 = virtualinvoke $r22.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i18);

        $r24 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        $r26 = $r24.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $r25 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector opens>;

        $i19 = $r25.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $r27 = virtualinvoke $r23.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r26, 0, $i19);

        $i20 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int usesCount>;

        $r28 = virtualinvoke $r27.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i20);

        $r29 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector usesIndex>;

        $r31 = $r29.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $r30 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector usesIndex>;

        $i21 = $r30.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $r32 = virtualinvoke $r28.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r31, 0, $i21);

        $i22 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int providesCount>;

        $r33 = virtualinvoke $r32.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i22);

        $r34 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides>;

        $r36 = $r34.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $r35 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector provides>;

        $i23 = $r35.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r33.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r36, 0, $i23);

        $i24 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int packageCount>;

        if $i24 <= 0 goto label1;

        $r42 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $i28 = virtualinvoke $r42.<jdk.internal.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("ModulePackages");

        $r43 = virtualinvoke r6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i28);

        $r44 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector packageIndex>;

        $i29 = $r44.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i30 = 2 + $i29;

        $r45 = virtualinvoke $r43.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($i30);

        $i31 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int packageCount>;

        $r46 = virtualinvoke $r45.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i31);

        $r47 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector packageIndex>;

        $r49 = $r47.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $r48 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.ByteVector packageIndex>;

        $i32 = $r48.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke $r46.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>($r49, 0, $i32);

     label1:
        $i25 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int mainClassIndex>;

        if $i25 <= 0 goto label2;

        $r38 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: jdk.internal.org.objectweb.asm.SymbolTable symbolTable>;

        $i26 = virtualinvoke $r38.<jdk.internal.org.objectweb.asm.SymbolTable: int addConstantUtf8(java.lang.String)>("ModuleMainClass");

        $r39 = virtualinvoke r6.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i26);

        $r40 = virtualinvoke $r39.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(2);

        $i27 = r0.<jdk.internal.org.objectweb.asm.ModuleWriter: int mainClassIndex>;

        virtualinvoke $r40.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i27);

     label2:
        return;
    }
}

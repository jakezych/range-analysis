public class jdk.internal.loader.FileURLMapper extends java.lang.Object
{
    java.net.URL url;
    java.lang.String path;

    public void <init>(java.net.URL)
    {
        jdk.internal.loader.FileURLMapper r0;
        java.net.URL r1;

        r0 := @this: jdk.internal.loader.FileURLMapper;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.loader.FileURLMapper: java.net.URL url> = r1;

        return;
    }

    public java.lang.String getPath()
    {
        jdk.internal.loader.FileURLMapper r0;
        java.lang.String $r1, r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.net.URL $r2, $r6;
        boolean $z0, $z1;

        r0 := @this: jdk.internal.loader.FileURLMapper;

        $r1 = r0.<jdk.internal.loader.FileURLMapper: java.lang.String path>;

        if $r1 == null goto label1;

        $r5 = r0.<jdk.internal.loader.FileURLMapper: java.lang.String path>;

        return $r5;

     label1:
        $r2 = r0.<jdk.internal.loader.FileURLMapper: java.net.URL url>;

        r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>();

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r4 = "localhost";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z1 == 0 goto label3;

     label2:
        $r6 = r0.<jdk.internal.loader.FileURLMapper: java.net.URL url>;

        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String getFile()>();

        r0.<jdk.internal.loader.FileURLMapper: java.lang.String path> = $r7;

        $r8 = r0.<jdk.internal.loader.FileURLMapper: java.lang.String path>;

        $r9 = staticinvoke <sun.net.www.ParseUtil: java.lang.String decode(java.lang.String)>($r8);

        r0.<jdk.internal.loader.FileURLMapper: java.lang.String path> = $r9;

     label3:
        $r10 = r0.<jdk.internal.loader.FileURLMapper: java.lang.String path>;

        return $r10;
    }

    public boolean exists()
    {
        jdk.internal.loader.FileURLMapper r0;
        java.lang.String r1;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: jdk.internal.loader.FileURLMapper;

        r1 = virtualinvoke r0.<jdk.internal.loader.FileURLMapper: java.lang.String getPath()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        return $z0;
    }
}

public class jdk.internal.access.SharedSecrets extends java.lang.Object
{
    private static final jdk.internal.misc.Unsafe unsafe;
    private static jdk.internal.access.JavaAWTAccess javaAWTAccess;
    private static jdk.internal.access.JavaAWTFontAccess javaAWTFontAccess;
    private static jdk.internal.access.JavaBeansAccess javaBeansAccess;
    private static jdk.internal.access.JavaLangAccess javaLangAccess;
    private static jdk.internal.access.JavaLangInvokeAccess javaLangInvokeAccess;
    private static jdk.internal.access.JavaLangModuleAccess javaLangModuleAccess;
    private static jdk.internal.access.JavaLangRefAccess javaLangRefAccess;
    private static jdk.internal.access.JavaLangReflectAccess javaLangReflectAccess;
    private static jdk.internal.access.JavaIOAccess javaIOAccess;
    private static jdk.internal.access.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess;
    private static jdk.internal.access.JavaIOFilePermissionAccess javaIOFilePermissionAccess;
    private static jdk.internal.access.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess;
    private static jdk.internal.access.JavaObjectInputStreamReadString javaObjectInputStreamReadString;
    private static jdk.internal.access.JavaObjectInputStreamAccess javaObjectInputStreamAccess;
    private static jdk.internal.access.JavaObjectInputFilterAccess javaObjectInputFilterAccess;
    private static jdk.internal.access.JavaNetInetAddressAccess javaNetInetAddressAccess;
    private static jdk.internal.access.JavaNetHttpCookieAccess javaNetHttpCookieAccess;
    private static jdk.internal.access.JavaNetUriAccess javaNetUriAccess;
    private static jdk.internal.access.JavaNetURLAccess javaNetURLAccess;
    private static jdk.internal.access.JavaNioAccess javaNioAccess;
    private static jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess;
    private static jdk.internal.access.JavaUtilZipFileAccess javaUtilZipFileAccess;
    private static jdk.internal.access.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess;
    private static jdk.internal.access.JavaSecurityAccess javaSecurityAccess;
    private static jdk.internal.access.JavaSecuritySignatureAccess javaSecuritySignatureAccess;
    private static jdk.internal.access.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess;

    public void <init>()
    {
        jdk.internal.access.SharedSecrets r0;

        r0 := @this: jdk.internal.access.SharedSecrets;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess()
    {
        jdk.internal.access.JavaUtilJarAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/util/jar/JarFile;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess>;

        return $r1;
    }

    public static void setJavaUtilJarAccess(jdk.internal.access.JavaUtilJarAccess)
    {
        jdk.internal.access.JavaUtilJarAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaUtilJarAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess> = r0;

        return;
    }

    public static void setJavaLangAccess(jdk.internal.access.JavaLangAccess)
    {
        jdk.internal.access.JavaLangAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaLangAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangAccess javaLangAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaLangAccess getJavaLangAccess()
    {
        jdk.internal.access.JavaLangAccess $r0;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangAccess javaLangAccess>;

        return $r0;
    }

    public static void setJavaLangInvokeAccess(jdk.internal.access.JavaLangInvokeAccess)
    {
        jdk.internal.access.JavaLangInvokeAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaLangInvokeAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangInvokeAccess javaLangInvokeAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaLangInvokeAccess getJavaLangInvokeAccess()
    {
        jdk.internal.access.JavaLangInvokeAccess $r0, $r5;
        jdk.internal.misc.Unsafe $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.Class r3;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangInvokeAccess javaLangInvokeAccess>;

        if $r0 != null goto label4;

     label1:
        r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.lang.invoke.MethodHandleImpl");

        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r1.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(r3);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        $r5 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangInvokeAccess javaLangInvokeAccess>;

        return $r5;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void setJavaLangModuleAccess(jdk.internal.access.JavaLangModuleAccess)
    {
        jdk.internal.access.JavaLangModuleAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaLangModuleAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangModuleAccess javaLangModuleAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaLangModuleAccess getJavaLangModuleAccess()
    {
        jdk.internal.access.JavaLangModuleAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangModuleAccess javaLangModuleAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/lang/module/ModuleDescriptor;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangModuleAccess javaLangModuleAccess>;

        return $r1;
    }

    public static void setJavaLangRefAccess(jdk.internal.access.JavaLangRefAccess)
    {
        jdk.internal.access.JavaLangRefAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaLangRefAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangRefAccess javaLangRefAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaLangRefAccess getJavaLangRefAccess()
    {
        jdk.internal.access.JavaLangRefAccess $r0;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangRefAccess javaLangRefAccess>;

        return $r0;
    }

    public static void setJavaLangReflectAccess(jdk.internal.access.JavaLangReflectAccess)
    {
        jdk.internal.access.JavaLangReflectAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaLangReflectAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangReflectAccess javaLangReflectAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaLangReflectAccess getJavaLangReflectAccess()
    {
        jdk.internal.access.JavaLangReflectAccess $r0;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaLangReflectAccess javaLangReflectAccess>;

        return $r0;
    }

    public static void setJavaNetUriAccess(jdk.internal.access.JavaNetUriAccess)
    {
        jdk.internal.access.JavaNetUriAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaNetUriAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetUriAccess javaNetUriAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaNetUriAccess getJavaNetUriAccess()
    {
        jdk.internal.access.JavaNetUriAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetUriAccess javaNetUriAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/URI;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetUriAccess javaNetUriAccess>;

        return $r1;
    }

    public static void setJavaNetURLAccess(jdk.internal.access.JavaNetURLAccess)
    {
        jdk.internal.access.JavaNetURLAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaNetURLAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetURLAccess javaNetURLAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaNetURLAccess getJavaNetURLAccess()
    {
        jdk.internal.access.JavaNetURLAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetURLAccess javaNetURLAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/URL;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetURLAccess javaNetURLAccess>;

        return $r1;
    }

    public static void setJavaNetInetAddressAccess(jdk.internal.access.JavaNetInetAddressAccess)
    {
        jdk.internal.access.JavaNetInetAddressAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaNetInetAddressAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetInetAddressAccess javaNetInetAddressAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaNetInetAddressAccess getJavaNetInetAddressAccess()
    {
        jdk.internal.access.JavaNetInetAddressAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetInetAddressAccess javaNetInetAddressAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/InetAddress;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetInetAddressAccess javaNetInetAddressAccess>;

        return $r1;
    }

    public static void setJavaNetHttpCookieAccess(jdk.internal.access.JavaNetHttpCookieAccess)
    {
        jdk.internal.access.JavaNetHttpCookieAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaNetHttpCookieAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetHttpCookieAccess javaNetHttpCookieAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaNetHttpCookieAccess getJavaNetHttpCookieAccess()
    {
        jdk.internal.access.JavaNetHttpCookieAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetHttpCookieAccess javaNetHttpCookieAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/net/HttpCookie;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNetHttpCookieAccess javaNetHttpCookieAccess>;

        return $r1;
    }

    public static void setJavaNioAccess(jdk.internal.access.JavaNioAccess)
    {
        jdk.internal.access.JavaNioAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaNioAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNioAccess javaNioAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaNioAccess getJavaNioAccess()
    {
        jdk.internal.access.JavaNioAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNioAccess javaNioAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/nio/Buffer;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaNioAccess javaNioAccess>;

        return $r1;
    }

    public static void setJavaIOAccess(jdk.internal.access.JavaIOAccess)
    {
        jdk.internal.access.JavaIOAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaIOAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOAccess javaIOAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaIOAccess getJavaIOAccess()
    {
        jdk.internal.access.JavaIOAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOAccess javaIOAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/Console;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOAccess javaIOAccess>;

        return $r1;
    }

    public static void setJavaIOFileDescriptorAccess(jdk.internal.access.JavaIOFileDescriptorAccess)
    {
        jdk.internal.access.JavaIOFileDescriptorAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaIOFileDescriptorAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaIOFilePermissionAccess getJavaIOFilePermissionAccess()
    {
        jdk.internal.access.JavaIOFilePermissionAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOFilePermissionAccess javaIOFilePermissionAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/FilePermission;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOFilePermissionAccess javaIOFilePermissionAccess>;

        return $r1;
    }

    public static void setJavaIOFilePermissionAccess(jdk.internal.access.JavaIOFilePermissionAccess)
    {
        jdk.internal.access.JavaIOFilePermissionAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaIOFilePermissionAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOFilePermissionAccess javaIOFilePermissionAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaIOFileDescriptorAccess getJavaIOFileDescriptorAccess()
    {
        jdk.internal.access.JavaIOFileDescriptorAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/FileDescriptor;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIOFileDescriptorAccess javaIOFileDescriptorAccess>;

        return $r1;
    }

    public static void setJavaSecurityAccess(jdk.internal.access.JavaSecurityAccess)
    {
        jdk.internal.access.JavaSecurityAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaSecurityAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaSecurityAccess javaSecurityAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaSecurityAccess getJavaSecurityAccess()
    {
        jdk.internal.access.JavaSecurityAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaSecurityAccess javaSecurityAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/security/ProtectionDomain;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaSecurityAccess javaSecurityAccess>;

        return $r1;
    }

    public static jdk.internal.access.JavaUtilZipFileAccess getJavaUtilZipFileAccess()
    {
        jdk.internal.access.JavaUtilZipFileAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilZipFileAccess javaUtilZipFileAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/util/zip/ZipFile;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilZipFileAccess javaUtilZipFileAccess>;

        return $r1;
    }

    public static void setJavaUtilZipFileAccess(jdk.internal.access.JavaUtilZipFileAccess)
    {
        jdk.internal.access.JavaUtilZipFileAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaUtilZipFileAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilZipFileAccess javaUtilZipFileAccess> = r0;

        return;
    }

    public static void setJavaAWTAccess(jdk.internal.access.JavaAWTAccess)
    {
        jdk.internal.access.JavaAWTAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaAWTAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaAWTAccess javaAWTAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaAWTAccess getJavaAWTAccess()
    {
        jdk.internal.access.JavaAWTAccess $r0;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaAWTAccess javaAWTAccess>;

        return $r0;
    }

    public static void setJavaAWTFontAccess(jdk.internal.access.JavaAWTFontAccess)
    {
        jdk.internal.access.JavaAWTFontAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaAWTFontAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaAWTFontAccess javaAWTFontAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaAWTFontAccess getJavaAWTFontAccess()
    {
        jdk.internal.access.JavaAWTFontAccess $r0;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaAWTFontAccess javaAWTFontAccess>;

        return $r0;
    }

    public static jdk.internal.access.JavaBeansAccess getJavaBeansAccess()
    {
        jdk.internal.access.JavaBeansAccess $r0;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaBeansAccess javaBeansAccess>;

        return $r0;
    }

    public static void setJavaBeansAccess(jdk.internal.access.JavaBeansAccess)
    {
        jdk.internal.access.JavaBeansAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaBeansAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaBeansAccess javaBeansAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaUtilResourceBundleAccess getJavaUtilResourceBundleAccess()
    {
        jdk.internal.access.JavaUtilResourceBundleAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/util/ResourceBundle;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess>;

        return $r1;
    }

    public static void setJavaUtilResourceBundleAccess(jdk.internal.access.JavaUtilResourceBundleAccess)
    {
        jdk.internal.access.JavaUtilResourceBundleAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaUtilResourceBundleAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilResourceBundleAccess javaUtilResourceBundleAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaObjectInputStreamReadString getJavaObjectInputStreamReadString()
    {
        jdk.internal.access.JavaObjectInputStreamReadString $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputStreamReadString javaObjectInputStreamReadString>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/ObjectInputStream;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputStreamReadString javaObjectInputStreamReadString>;

        return $r1;
    }

    public static void setJavaObjectInputStreamReadString(jdk.internal.access.JavaObjectInputStreamReadString)
    {
        jdk.internal.access.JavaObjectInputStreamReadString r0;

        r0 := @parameter0: jdk.internal.access.JavaObjectInputStreamReadString;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputStreamReadString javaObjectInputStreamReadString> = r0;

        return;
    }

    public static jdk.internal.access.JavaObjectInputStreamAccess getJavaObjectInputStreamAccess()
    {
        jdk.internal.access.JavaObjectInputStreamAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputStreamAccess javaObjectInputStreamAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/ObjectInputStream;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputStreamAccess javaObjectInputStreamAccess>;

        return $r1;
    }

    public static void setJavaObjectInputStreamAccess(jdk.internal.access.JavaObjectInputStreamAccess)
    {
        jdk.internal.access.JavaObjectInputStreamAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaObjectInputStreamAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputStreamAccess javaObjectInputStreamAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaObjectInputFilterAccess getJavaObjectInputFilterAccess()
    {
        jdk.internal.access.JavaObjectInputFilterAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputFilterAccess javaObjectInputFilterAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/ObjectInputFilter$Config;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputFilterAccess javaObjectInputFilterAccess>;

        return $r1;
    }

    public static void setJavaObjectInputFilterAccess(jdk.internal.access.JavaObjectInputFilterAccess)
    {
        jdk.internal.access.JavaObjectInputFilterAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaObjectInputFilterAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaObjectInputFilterAccess javaObjectInputFilterAccess> = r0;

        return;
    }

    public static void setJavaIORandomAccessFileAccess(jdk.internal.access.JavaIORandomAccessFileAccess)
    {
        jdk.internal.access.JavaIORandomAccessFileAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaIORandomAccessFileAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaIORandomAccessFileAccess getJavaIORandomAccessFileAccess()
    {
        jdk.internal.access.JavaIORandomAccessFileAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/io/RandomAccessFile;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaIORandomAccessFileAccess javaIORandomAccessFileAccess>;

        return $r1;
    }

    public static void setJavaSecuritySignatureAccess(jdk.internal.access.JavaSecuritySignatureAccess)
    {
        jdk.internal.access.JavaSecuritySignatureAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaSecuritySignatureAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaSecuritySignatureAccess javaSecuritySignatureAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaSecuritySignatureAccess getJavaSecuritySignatureAccess()
    {
        jdk.internal.access.JavaSecuritySignatureAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaSecuritySignatureAccess javaSecuritySignatureAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljava/security/Signature;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaSecuritySignatureAccess javaSecuritySignatureAccess>;

        return $r1;
    }

    public static void setJavaxCryptoSealedObjectAccess(jdk.internal.access.JavaxCryptoSealedObjectAccess)
    {
        jdk.internal.access.JavaxCryptoSealedObjectAccess r0;

        r0 := @parameter0: jdk.internal.access.JavaxCryptoSealedObjectAccess;

        <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess> = r0;

        return;
    }

    public static jdk.internal.access.JavaxCryptoSealedObjectAccess getJavaxCryptoSealedObjectAccess()
    {
        jdk.internal.access.JavaxCryptoSealedObjectAccess $r0, $r1;
        jdk.internal.misc.Unsafe $r2;

        $r0 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess>;

        if $r0 != null goto label1;

        $r2 = <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe>;

        virtualinvoke $r2.<jdk.internal.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>(class "Ljavax/crypto/SealedObject;");

     label1:
        $r1 = <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaxCryptoSealedObjectAccess javaxCryptoSealedObjectAccess>;

        return $r1;
    }

    static void <clinit>()
    {
        jdk.internal.misc.Unsafe $r0;

        $r0 = staticinvoke <jdk.internal.misc.Unsafe: jdk.internal.misc.Unsafe getUnsafe()>();

        <jdk.internal.access.SharedSecrets: jdk.internal.misc.Unsafe unsafe> = $r0;

        return;
    }
}

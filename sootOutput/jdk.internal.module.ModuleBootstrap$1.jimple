class jdk.internal.module.ModuleBootstrap$1 extends java.lang.Object implements java.lang.module.ModuleFinder
{
    final java.util.Map val$map;
    final java.util.Set val$mrefs;

    void <init>(java.util.Map, java.util.Set)
    {
        jdk.internal.module.ModuleBootstrap$1 r0;
        java.util.Map r1;
        java.util.Set r2;

        r0 := @this: jdk.internal.module.ModuleBootstrap$1;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Set;

        r0.<jdk.internal.module.ModuleBootstrap$1: java.util.Map val$map> = r1;

        r0.<jdk.internal.module.ModuleBootstrap$1: java.util.Set val$mrefs> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Optional find(java.lang.String)
    {
        jdk.internal.module.ModuleBootstrap$1 r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.module.ModuleReference $r4;
        java.util.Optional $r5;

        r0 := @this: jdk.internal.module.ModuleBootstrap$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.module.ModuleBootstrap$1: java.util.Map val$map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.module.ModuleReference) $r3;

        $r5 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r4);

        return $r5;
    }

    public java.util.Set findAll()
    {
        jdk.internal.module.ModuleBootstrap$1 r0;
        java.util.Set $r1;

        r0 := @this: jdk.internal.module.ModuleBootstrap$1;

        $r1 = r0.<jdk.internal.module.ModuleBootstrap$1: java.util.Set val$mrefs>;

        return $r1;
    }
}

class jdk.internal.module.ModuleInfo$DataInputWrapper extends java.lang.Object implements java.io.DataInput
{
    private final java.nio.ByteBuffer bb;

    void <init>(java.nio.ByteBuffer)
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer r1;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb> = r1;

        return;
    }

    public void readFully(byte[]) throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        byte[] r1;
        int $i0;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: void readFully(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void readFully(byte[], int, int) throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        byte[] r1;
        int i0, i1;
        java.nio.ByteBuffer $r2;
        java.nio.BufferUnderflowException $r4;
        java.io.EOFException $r6;
        java.lang.String $r7;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = new java.io.EOFException;

        $r7 = virtualinvoke $r4.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.io.EOFException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        return;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public int skipBytes(int)
    {
        int i0, $i1, i2, $i3, $i4;
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1, $r2, $r3;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        $r3 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $r2 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $i4 = $i3 + i2;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>($i4);

        return i2;
    }

    public boolean readBoolean() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r3;
        java.lang.String $r4;
        byte b0;
        boolean $z0;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        if b0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.io.EOFException;

        $r4 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.io.EOFException: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.nio.BufferUnderflowException from label1 to label3 with label4;
    }

    public byte readByte() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        byte $b0;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

     label2:
        return $b0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public int readUnsignedByte() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        byte $b0;
        int $i1;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        $i1 = $b0 & 255;

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public short readShort() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        short $s0;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort()>();

     label2:
        return $s0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public int readUnsignedShort() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        short $s0;
        int $i1;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort()>();

        $i1 = $s0 & 65535;

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public char readChar() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        char $c0;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $c0 = virtualinvoke $r1.<java.nio.ByteBuffer: char getChar()>();

     label2:
        return $c0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public int readInt() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        int $i0;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public long readLong() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        long $l0;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $l0 = virtualinvoke $r1.<java.nio.ByteBuffer: long getLong()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public float readFloat() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        float $f0;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $f0 = virtualinvoke $r1.<java.nio.ByteBuffer: float getFloat()>();

     label2:
        return $f0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public double readDouble() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.nio.ByteBuffer $r1;
        double $d0;
        java.nio.BufferUnderflowException $r2;
        java.io.EOFException $r4;
        java.lang.String $r5;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

     label1:
        $r1 = r0.<jdk.internal.module.ModuleInfo$DataInputWrapper: java.nio.ByteBuffer bb>;

        $d0 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

     label2:
        return $d0;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.io.EOFException;

        $r5 = virtualinvoke $r2.<java.nio.BufferUnderflowException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
    }

    public java.lang.String readLine()
    {
        java.lang.RuntimeException $r0;
        jdk.internal.module.ModuleInfo$DataInputWrapper r1;

        r1 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("not implemented");

        throw $r0;
    }

    public java.lang.String readUTF() throws java.io.IOException
    {
        jdk.internal.module.ModuleInfo$DataInputWrapper r0;
        java.lang.String $r1;

        r0 := @this: jdk.internal.module.ModuleInfo$DataInputWrapper;

        $r1 = staticinvoke <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>(r0);

        return $r1;
    }
}

class jdk.internal.reflect.ByteVectorImpl extends java.lang.Object implements jdk.internal.reflect.ByteVector
{
    private byte[] data;
    private int pos;

    public void <init>()
    {
        jdk.internal.reflect.ByteVectorImpl r0;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        specialinvoke r0.<jdk.internal.reflect.ByteVectorImpl: void <init>(int)>(100);

        return;
    }

    public void <init>(int)
    {
        jdk.internal.reflect.ByteVectorImpl r0;
        int i0;
        byte[] $r1;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[i0];

        r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data> = $r1;

        r0.<jdk.internal.reflect.ByteVectorImpl: int pos> = -1;

        return;
    }

    public int getLength()
    {
        jdk.internal.reflect.ByteVectorImpl r0;
        int $i0, $i1;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        $i0 = r0.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $i1 = $i0 + 1;

        return $i1;
    }

    public byte get(int)
    {
        int i0, $i1;
        jdk.internal.reflect.ByteVectorImpl r0;
        byte[] $r1, $r2;
        byte $b2;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        i0 := @parameter0: int;

        $r1 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        virtualinvoke r0.<jdk.internal.reflect.ByteVectorImpl: void resize(int)>(i0);

        r0.<jdk.internal.reflect.ByteVectorImpl: int pos> = i0;

     label1:
        $r2 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $b2 = $r2[i0];

        return $b2;
    }

    public void put(int, byte)
    {
        int i0, $i1;
        jdk.internal.reflect.ByteVectorImpl r0;
        byte[] $r1, $r2;
        byte b2;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        i0 := @parameter0: int;

        b2 := @parameter1: byte;

        $r1 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        virtualinvoke r0.<jdk.internal.reflect.ByteVectorImpl: void resize(int)>(i0);

        r0.<jdk.internal.reflect.ByteVectorImpl: int pos> = i0;

     label1:
        $r2 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $r2[i0] = b2;

        return;
    }

    public void add(byte)
    {
        jdk.internal.reflect.ByteVectorImpl r0;
        int $i0, $i1, $i2, $i4, $i5;
        byte[] $r1, $r2;
        byte b3;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        b3 := @parameter0: byte;

        $i0 = r0.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $i1 = $i0 + 1;

        r0.<jdk.internal.reflect.ByteVectorImpl: int pos> = $i1;

        $r1 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label1;

        $i5 = r0.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        virtualinvoke r0.<jdk.internal.reflect.ByteVectorImpl: void resize(int)>($i5);

     label1:
        $r2 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i4 = r0.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $r2[$i4] = b3;

        return;
    }

    public void trim()
    {
        jdk.internal.reflect.ByteVectorImpl r0;
        byte[] $r1, r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        $i2 = r0.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $r1 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if $i2 == $i1 goto label1;

        $i3 = r0.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $i4 = $i3 + 1;

        r2 = newarray (byte)[$i4];

        $r3 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i5 = r0.<jdk.internal.reflect.ByteVectorImpl: int pos>;

        $i6 = $i5 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i6);

        r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data> = r2;

     label1:
        return;
    }

    public byte[] getData()
    {
        jdk.internal.reflect.ByteVectorImpl r0;
        byte[] $r1;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        $r1 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        return $r1;
    }

    private void resize(int)
    {
        jdk.internal.reflect.ByteVectorImpl r0;
        byte[] $r1, r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: jdk.internal.reflect.ByteVectorImpl;

        i4 := @parameter0: int;

        $r1 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i0 = lengthof $r1;

        $i1 = 2 * $i0;

        if i4 > $i1 goto label1;

        $r5 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i3 = lengthof $r5;

        i4 = 2 * $i3;

     label1:
        r2 = newarray (byte)[i4];

        $r4 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $r3 = r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data>;

        $i2 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i2);

        r0.<jdk.internal.reflect.ByteVectorImpl: byte[] data> = r2;

        return;
    }
}

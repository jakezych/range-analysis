public abstract class jdk.internal.org.objectweb.asm.ModuleVisitor extends java.lang.Object
{
    protected final int api;
    protected jdk.internal.org.objectweb.asm.ModuleVisitor mv;

    public void <init>(int)
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0;
        int i0;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        i0 := @parameter0: int;

        specialinvoke r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: void <init>(int,jdk.internal.org.objectweb.asm.ModuleVisitor)>(i0, null);

        return;
    }

    public void <init>(int, jdk.internal.org.objectweb.asm.ModuleVisitor)
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, r1;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: jdk.internal.org.objectweb.asm.ModuleVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 393216 goto label1;

        if i0 == 458752 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: int api> = i0;

        r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv> = r1;

        return;
    }

    public void visitMainClass(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r3;
        java.lang.String r2;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitMainClass(java.lang.String)>(r2);

     label1:
        return;
    }

    public void visitPackage(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r3;
        java.lang.String r2;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitPackage(java.lang.String)>(r2);

     label1:
        return;
    }

    public void visitRequire(java.lang.String, int, java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r4;
        java.lang.String r2, r3;
        int i0;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r4 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitRequire(java.lang.String,int,java.lang.String)>(r2, i0, r3);

     label1:
        return;
    }

    public transient void visitExport(java.lang.String, int, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r4;
        java.lang.String r2;
        int i0;
        java.lang.String[] r3;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String[];

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r4 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitExport(java.lang.String,int,java.lang.String[])>(r2, i0, r3);

     label1:
        return;
    }

    public transient void visitOpen(java.lang.String, int, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r4;
        java.lang.String r2;
        int i0;
        java.lang.String[] r3;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String[];

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r4 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitOpen(java.lang.String,int,java.lang.String[])>(r2, i0, r3);

     label1:
        return;
    }

    public void visitUse(java.lang.String)
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r3;
        java.lang.String r2;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r3.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitUse(java.lang.String)>(r2);

     label1:
        return;
    }

    public transient void visitProvide(java.lang.String, java.lang.String[])
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r4;
        java.lang.String r2;
        java.lang.String[] r3;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String[];

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r4 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r4.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitProvide(java.lang.String,java.lang.String[])>(r2, r3);

     label1:
        return;
    }

    public void visitEnd()
    {
        jdk.internal.org.objectweb.asm.ModuleVisitor r0, $r1, $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.ModuleVisitor;

        $r1 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<jdk.internal.org.objectweb.asm.ModuleVisitor: jdk.internal.org.objectweb.asm.ModuleVisitor mv>;

        virtualinvoke $r2.<jdk.internal.org.objectweb.asm.ModuleVisitor: void visitEnd()>();

     label1:
        return;
    }
}

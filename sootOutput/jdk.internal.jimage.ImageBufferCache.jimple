class jdk.internal.jimage.ImageBufferCache extends java.lang.Object
{
    private static final int MAX_CACHED_BUFFERS;
    private static final int LARGE_BUFFER;
    private static final java.lang.ThreadLocal CACHE;
    private static java.util.Comparator DECREASING_CAPACITY_NULLS_LAST;

    void <init>()
    {
        jdk.internal.jimage.ImageBufferCache r0;

        r0 := @this: jdk.internal.jimage.ImageBufferCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.nio.ByteBuffer allocateBuffer(long)
    {
        long l0, $l1, $l2;
        int $i3;
        java.nio.ByteBuffer $r0;

        l0 := @parameter0: long;

        $l1 = l0 + 4095L;

        $l2 = $l1 & -4096L;

        $i3 = (int) $l2;

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i3);

        return $r0;
    }

    static java.nio.ByteBuffer getBuffer(long)
    {
        long l0, $l5;
        byte $b1, $b2, $b3, $b6;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2, $r6;
        jdk.internal.jimage.ImageBufferCache$BufferReference[] r3;
        jdk.internal.jimage.ImageBufferCache$BufferReference r5;
        java.nio.ByteBuffer r7, r9;
        int $i4, i7, $i8;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $b2 = 2147483647L cmp l0;

        if $b2 >= 0 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("size");

        throw $r0;

     label2:
        r9 = null;

        $b3 = l0 cmp 65536L;

        if $b3 <= 0 goto label3;

        r9 = staticinvoke <jdk.internal.jimage.ImageBufferCache: java.nio.ByteBuffer allocateBuffer(long)>(l0);

        goto label7;

     label3:
        $r1 = <jdk.internal.jimage.ImageBufferCache: java.lang.ThreadLocal CACHE>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (jdk.internal.jimage.ImageBufferCache$BufferReference[]) $r2;

        i7 = 2;

     label4:
        if i7 < 0 goto label6;

        r5 = r3[i7];

        if r5 == null goto label5;

        $r6 = virtualinvoke r5.<jdk.internal.jimage.ImageBufferCache$BufferReference: java.lang.Object get()>();

        r7 = (java.nio.ByteBuffer) $r6;

        if r7 == null goto label5;

        $i4 = virtualinvoke r7.<java.nio.ByteBuffer: int capacity()>();

        $l5 = (long) $i4;

        $b6 = l0 cmp $l5;

        if $b6 > 0 goto label5;

        r3[i7] = null;

        r9 = r7;

        virtualinvoke r7.<java.nio.ByteBuffer: java.nio.ByteBuffer rewind()>();

        goto label6;

     label5:
        i7 = i7 + -1;

        goto label4;

     label6:
        if r9 != null goto label7;

        r9 = staticinvoke <jdk.internal.jimage.ImageBufferCache: java.nio.ByteBuffer allocateBuffer(long)>(l0);

     label7:
        $i8 = (int) l0;

        virtualinvoke r9.<java.nio.ByteBuffer: java.nio.ByteBuffer limit(int)>($i8);

        return r9;
    }

    static void releaseBuffer(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0, i1;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2, $r7;
        jdk.internal.jimage.ImageBufferCache$BufferReference[] r3;
        jdk.internal.jimage.ImageBufferCache$BufferReference $r4, r6;
        java.util.Comparator $r5;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        if $i0 <= 65536 goto label1;

        return;

     label1:
        $r1 = <jdk.internal.jimage.ImageBufferCache: java.lang.ThreadLocal CACHE>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (jdk.internal.jimage.ImageBufferCache$BufferReference[]) $r2;

        i1 = 0;

     label2:
        if i1 >= 3 goto label4;

        r6 = r3[i1];

        if r6 == null goto label3;

        $r7 = virtualinvoke r6.<jdk.internal.jimage.ImageBufferCache$BufferReference: java.lang.Object get()>();

        if $r7 != null goto label3;

        r3[i1] = null;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r4 = new jdk.internal.jimage.ImageBufferCache$BufferReference;

        specialinvoke $r4.<jdk.internal.jimage.ImageBufferCache$BufferReference: void <init>(java.nio.ByteBuffer)>(r0);

        r3[3] = $r4;

        $r5 = <jdk.internal.jimage.ImageBufferCache: java.util.Comparator DECREASING_CAPACITY_NULLS_LAST>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r3, $r5);

        r3[3] = null;

        return;
    }

    static void <clinit>()
    {
        jdk.internal.jimage.ImageBufferCache$1 $r0;
        jdk.internal.jimage.ImageBufferCache$2 $r1;

        <jdk.internal.jimage.ImageBufferCache: int LARGE_BUFFER> = 65536;

        <jdk.internal.jimage.ImageBufferCache: int MAX_CACHED_BUFFERS> = 3;

        $r0 = new jdk.internal.jimage.ImageBufferCache$1;

        specialinvoke $r0.<jdk.internal.jimage.ImageBufferCache$1: void <init>()>();

        <jdk.internal.jimage.ImageBufferCache: java.lang.ThreadLocal CACHE> = $r0;

        $r1 = new jdk.internal.jimage.ImageBufferCache$2;

        specialinvoke $r1.<jdk.internal.jimage.ImageBufferCache$2: void <init>()>();

        <jdk.internal.jimage.ImageBufferCache: java.util.Comparator DECREASING_CAPACITY_NULLS_LAST> = $r1;

        return;
    }
}

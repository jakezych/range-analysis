class jdk.internal.reflect.ClassDefiner$1 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.ClassLoader val$parentClassLoader;

    void <init>(java.lang.ClassLoader)
    {
        jdk.internal.reflect.ClassDefiner$1 r0;
        java.lang.ClassLoader r1;

        r0 := @this: jdk.internal.reflect.ClassDefiner$1;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<jdk.internal.reflect.ClassDefiner$1: java.lang.ClassLoader val$parentClassLoader> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.ClassLoader run()
    {
        jdk.internal.reflect.DelegatingClassLoader $r0;
        jdk.internal.reflect.ClassDefiner$1 r1;
        java.lang.ClassLoader $r2;

        r1 := @this: jdk.internal.reflect.ClassDefiner$1;

        $r0 = new jdk.internal.reflect.DelegatingClassLoader;

        $r2 = r1.<jdk.internal.reflect.ClassDefiner$1: java.lang.ClassLoader val$parentClassLoader>;

        specialinvoke $r0.<jdk.internal.reflect.DelegatingClassLoader: void <init>(java.lang.ClassLoader)>($r2);

        return $r0;
    }

    public volatile java.lang.Object run()
    {
        jdk.internal.reflect.ClassDefiner$1 r0;
        java.lang.ClassLoader $r1;

        r0 := @this: jdk.internal.reflect.ClassDefiner$1;

        $r1 = virtualinvoke r0.<jdk.internal.reflect.ClassDefiner$1: java.lang.ClassLoader run()>();

        return $r1;
    }
}

public final class jdk.internal.misc.Signal extends java.lang.Object
{
    private static java.util.Hashtable handlers;
    private static java.util.Hashtable signals;
    private int number;
    private java.lang.String name;

    public int getNumber()
    {
        jdk.internal.misc.Signal r0;
        int $i0;

        r0 := @this: jdk.internal.misc.Signal;

        $i0 = r0.<jdk.internal.misc.Signal: int number>;

        return $i0;
    }

    public java.lang.String getName()
    {
        jdk.internal.misc.Signal r0;
        java.lang.String $r1;

        r0 := @this: jdk.internal.misc.Signal;

        $r1 = r0.<jdk.internal.misc.Signal: java.lang.String name>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        jdk.internal.misc.Signal r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4;
        int $i0, $i1;

        r0 := @this: jdk.internal.misc.Signal;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $z0 = r1 instanceof jdk.internal.misc.Signal;

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        r2 = (jdk.internal.misc.Signal) r1;

        $r4 = r0.<jdk.internal.misc.Signal: java.lang.String name>;

        $r3 = r2.<jdk.internal.misc.Signal: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        $i1 = r0.<jdk.internal.misc.Signal: int number>;

        $i0 = r2.<jdk.internal.misc.Signal: int number>;

        if $i1 != $i0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public int hashCode()
    {
        jdk.internal.misc.Signal r0;
        int $i0;

        r0 := @this: jdk.internal.misc.Signal;

        $i0 = r0.<jdk.internal.misc.Signal: int number>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        jdk.internal.misc.Signal r2;
        java.lang.String $r3, $r5;

        r2 := @this: jdk.internal.misc.Signal;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SIG");

        $r3 = r2.<jdk.internal.misc.Signal: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void <init>(java.lang.String)
    {
        jdk.internal.misc.Signal r0;
        java.lang.String r1, $r7, $r12;
        boolean $z0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;

        r0 := @this: jdk.internal.misc.Signal;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "name");

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("SIG");

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown signal: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        r0.<jdk.internal.misc.Signal: java.lang.String name> = r1;

        $i0 = staticinvoke <jdk.internal.misc.Signal: int findSignal0(java.lang.String)>(r1);

        r0.<jdk.internal.misc.Signal: int number> = $i0;

        $i1 = r0.<jdk.internal.misc.Signal: int number>;

        if $i1 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown signal: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        return;
    }

    public static synchronized jdk.internal.misc.Signal$Handler handle(jdk.internal.misc.Signal, jdk.internal.misc.Signal$Handler) throws java.lang.IllegalArgumentException
    {
        jdk.internal.misc.Signal r0;
        jdk.internal.misc.Signal$Handler r2, r11, $r15, $r16;
        boolean $z0;
        int $i1, $i4;
        long l2, $l9;
        byte $b3, $b5, $b6, $b7, $b8;
        java.util.Hashtable $r4, $r7, $r9, $r12, $r17;
        java.lang.Integer $r5;
        java.lang.Object $r10;
        jdk.internal.misc.Signal$NativeHandler $r14, $r24;
        java.lang.IllegalArgumentException $r19;
        java.lang.StringBuilder $r20, $r21, $r22;
        java.lang.String $r23;
        java.lang.Throwable $r25;

        r0 := @parameter0: jdk.internal.misc.Signal;

        r2 := @parameter1: jdk.internal.misc.Signal$Handler;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, "sig");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "handler");

        $z0 = r2 instanceof jdk.internal.misc.Signal$NativeHandler;

        if $z0 == 0 goto label01;

        $r24 = (jdk.internal.misc.Signal$NativeHandler) r2;

        $l9 = virtualinvoke $r24.<jdk.internal.misc.Signal$NativeHandler: long getHandler()>();

        goto label02;

     label01:
        $l9 = 2L;

     label02:
        $i1 = r0.<jdk.internal.misc.Signal: int number>;

        l2 = staticinvoke <jdk.internal.misc.Signal: long handle0(int,long)>($i1, $l9);

        $b3 = l2 cmp -1L;

        if $b3 != 0 goto label03;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signal already used by VM or OS: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label03:
        $r4 = <jdk.internal.misc.Signal: java.util.Hashtable signals>;

        $i4 = r0.<jdk.internal.misc.Signal: int number>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        $r7 = <jdk.internal.misc.Signal: java.util.Hashtable handlers>;

        entermonitor $r7;

     label04:
        $r9 = <jdk.internal.misc.Signal: java.util.Hashtable handlers>;

        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        r11 = (jdk.internal.misc.Signal$Handler) $r10;

        $r12 = <jdk.internal.misc.Signal: java.util.Hashtable handlers>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r0);

        $b5 = $l9 cmp 2L;

        if $b5 != 0 goto label05;

        $r17 = <jdk.internal.misc.Signal: java.util.Hashtable handlers>;

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

     label05:
        $b6 = l2 cmp 0L;

        if $b6 != 0 goto label07;

        $r16 = <jdk.internal.misc.Signal$Handler: jdk.internal.misc.Signal$Handler SIG_DFL>;

        exitmonitor $r7;

     label06:
        return $r16;

     label07:
        $b7 = l2 cmp 1L;

        if $b7 != 0 goto label09;

        $r15 = <jdk.internal.misc.Signal$Handler: jdk.internal.misc.Signal$Handler SIG_IGN>;

        exitmonitor $r7;

     label08:
        return $r15;

     label09:
        $b8 = l2 cmp 2L;

        if $b8 != 0 goto label11;

        exitmonitor $r7;

     label10:
        return r11;

     label11:
        $r14 = new jdk.internal.misc.Signal$NativeHandler;

        specialinvoke $r14.<jdk.internal.misc.Signal$NativeHandler: void <init>(long)>(l2);

        exitmonitor $r7;

     label12:
        return $r14;

     label13:
        $r25 := @caughtexception;

        exitmonitor $r7;

     label14:
        throw $r25;

        catch java.lang.Throwable from label04 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static void raise(jdk.internal.misc.Signal) throws java.lang.IllegalArgumentException
    {
        jdk.internal.misc.Signal r0;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: jdk.internal.misc.Signal;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, "sig");

        $r2 = <jdk.internal.misc.Signal: java.util.Hashtable handlers>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled signal: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $i0 = r0.<jdk.internal.misc.Signal: int number>;

        staticinvoke <jdk.internal.misc.Signal: void raise0(int)>($i0);

        return;
    }

    private static void dispatch(int)
    {
        int i0;
        java.util.Hashtable $r0, $r4;
        java.lang.Integer $r1;
        java.lang.Object $r2, $r5;
        jdk.internal.misc.Signal r3;
        jdk.internal.misc.Signal$Handler r6;
        jdk.internal.misc.Signal$1 $r7;
        java.lang.Thread $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        i0 := @parameter0: int;

        $r0 = <jdk.internal.misc.Signal: java.util.Hashtable signals>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (jdk.internal.misc.Signal) $r2;

        $r4 = <jdk.internal.misc.Signal: java.util.Hashtable handlers>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (jdk.internal.misc.Signal$Handler) $r5;

        $r7 = new jdk.internal.misc.Signal$1;

        specialinvoke $r7.<jdk.internal.misc.Signal$1: void <init>(jdk.internal.misc.Signal$Handler,jdk.internal.misc.Signal)>(r6, r3);

        if r6 == null goto label1;

        $r9 = new java.lang.Thread;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" handler");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long,boolean)>(null, $r7, $r13, 0L, 0);

        virtualinvoke $r9.<java.lang.Thread: void start()>();

     label1:
        return;
    }

    private static native int findSignal0(java.lang.String);

    private static native long handle0(int, long);

    private static native void raise0(int);

    static void <clinit>()
    {
        java.util.Hashtable $r0, $r1;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>(int)>(4);

        <jdk.internal.misc.Signal: java.util.Hashtable handlers> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>(int)>(4);

        <jdk.internal.misc.Signal: java.util.Hashtable signals> = $r1;

        return;
    }
}

public class jdk.internal.loader.BuiltinClassLoader extends java.security.SecureClassLoader
{
    private final jdk.internal.loader.BuiltinClassLoader parent;
    private final jdk.internal.loader.URLClassPath ucp;
    private static final java.util.Map packageToModule;
    private final java.util.Map nameToModule;
    private final java.util.Map moduleToReader;
    private volatile java.lang.ref.SoftReference resourceCache;
    static final boolean $assertionsDisabled;

    void <init>(java.lang.String, jdk.internal.loader.BuiltinClassLoader, jdk.internal.loader.URLClassPath)
    {
        jdk.internal.loader.BuiltinClassLoader r0, r2, $r6, $r9;
        java.lang.String r1;
        jdk.internal.loader.URLClassPath r3;
        java.util.concurrent.ConcurrentHashMap $r4, $r5;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: jdk.internal.loader.BuiltinClassLoader;

        r3 := @parameter2: jdk.internal.loader.URLClassPath;

        if r2 == null goto label1;

        $r6 = staticinvoke <jdk.internal.loader.ClassLoaders: jdk.internal.loader.BuiltinClassLoader bootLoader()>();

        if r2 != $r6 goto label2;

     label1:
        $r9 = null;

        goto label3;

     label2:
        $r9 = r2;

     label3:
        specialinvoke r0.<java.security.SecureClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>(r1, $r9);

        r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.BuiltinClassLoader parent> = r2;

        r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.URLClassPath ucp> = r3;

        $r4 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(32);

        r0.<jdk.internal.loader.BuiltinClassLoader: java.util.Map nameToModule> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<jdk.internal.loader.BuiltinClassLoader: java.util.Map moduleToReader> = $r5;

        return;
    }

    boolean hasClassPath()
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        jdk.internal.loader.URLClassPath $r1;
        boolean $z0;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        $r1 = r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.URLClassPath ucp>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void loadModule(java.lang.module.ModuleReference)
    {
        java.lang.module.ModuleReference r0, $r23;
        java.lang.module.ModuleDescriptor $r1, $r8, $r24;
        java.lang.String r2, r13, $r25, $r27, $r32;
        jdk.internal.loader.BuiltinClassLoader r3;
        java.util.Map $r4, $r14;
        java.lang.Object $r5, $r12, $r15;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule $r6, r16;
        java.util.Set $r9;
        java.util.Iterator r10;
        boolean $z0, $z1;
        java.lang.ref.SoftReference $r11;
        java.lang.InternalError $r17, $r28;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r26, $r29, $r30, $r31;

        r3 := @this: jdk.internal.loader.BuiltinClassLoader;

        r0 := @parameter0: java.lang.module.ModuleReference;

        $r1 = virtualinvoke r0.<java.lang.module.ModuleReference: java.lang.module.ModuleDescriptor descriptor()>();

        r2 = virtualinvoke $r1.<java.lang.module.ModuleDescriptor: java.lang.String name()>();

        $r4 = r3.<jdk.internal.loader.BuiltinClassLoader: java.util.Map nameToModule>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r2, r0);

        if $r5 == null goto label1;

        $r28 = new java.lang.InternalError;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already defined to this loader");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.InternalError: void <init>(java.lang.String)>($r32);

        throw $r28;

     label1:
        $r6 = new jdk.internal.loader.BuiltinClassLoader$LoadedModule;

        specialinvoke $r6.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: void <init>(jdk.internal.loader.BuiltinClassLoader,java.lang.module.ModuleReference)>(r3, r0);

        $r8 = virtualinvoke r0.<java.lang.module.ModuleReference: java.lang.module.ModuleDescriptor descriptor()>();

        $r9 = virtualinvoke $r8.<java.lang.module.ModuleDescriptor: java.util.Set packages()>();

        r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        $r14 = <jdk.internal.loader.BuiltinClassLoader: java.util.Map packageToModule>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r13, $r6);

        r16 = (jdk.internal.loader.BuiltinClassLoader$LoadedModule) $r15;

        if r16 == null goto label3;

        $r17 = new java.lang.InternalError;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in modules ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r23 = virtualinvoke r16.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.lang.module.ModuleReference mref()>();

        $r24 = virtualinvoke $r23.<java.lang.module.ModuleReference: java.lang.module.ModuleDescriptor descriptor()>();

        $r25 = virtualinvoke $r24.<java.lang.module.ModuleDescriptor: java.lang.String name()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.InternalError: void <init>(java.lang.String)>($r27);

        throw $r17;

     label3:
        goto label2;

     label4:
        $z1 = staticinvoke <jdk.internal.misc.VM: boolean isModuleSystemInited()>();

        if $z1 == 0 goto label5;

        $r11 = r3.<jdk.internal.loader.BuiltinClassLoader: java.lang.ref.SoftReference resourceCache>;

        if $r11 == null goto label5;

        r3.<jdk.internal.loader.BuiltinClassLoader: java.lang.ref.SoftReference resourceCache> = null;

     label5:
        return;
    }

    protected java.lang.module.ModuleReference findModule(java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.module.ModuleReference $r4;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.loader.BuiltinClassLoader: java.util.Map nameToModule>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.module.ModuleReference) $r3;

        return $r4;
    }

    public java.net.URL findResource(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r2;
        jdk.internal.loader.BuiltinClassLoader r1;
        java.net.URL $r3, r7;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.module.ModuleReference r6;

        r1 := @this: jdk.internal.loader.BuiltinClassLoader;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r7 = null;

        if r0 == null goto label2;

        $r4 = r1.<jdk.internal.loader.BuiltinClassLoader: java.util.Map nameToModule>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r6 = (java.lang.module.ModuleReference) $r5;

        if r6 == null goto label1;

        r7 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.net.URL findResource(java.lang.module.ModuleReference,java.lang.String)>(r6, r2);

     label1:
        goto label3;

     label2:
        r7 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.net.URL findResourceOnClassPath(java.lang.String)>(r2);

     label3:
        $r3 = staticinvoke <jdk.internal.loader.BuiltinClassLoader: java.net.URL checkURL(java.net.URL)>(r7);

        return $r3;
    }

    public java.io.InputStream findResourceAsStream(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.SecurityManager $r0;
        jdk.internal.loader.BuiltinClassLoader r1;
        java.lang.String r2, r3;
        java.util.Map $r4;
        java.lang.Object $r5, $r8;
        java.lang.module.ModuleReader $r6;
        java.util.Optional $r7;
        java.io.InputStream $r9, $r11;
        java.net.URL r10;
        java.lang.module.ModuleReference r12;

        r1 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 != null goto label1;

        if r2 != null goto label4;

     label1:
        r10 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.net.URL findResource(java.lang.String,java.lang.String)>(r2, r3);

        if r10 == null goto label2;

        $r11 = virtualinvoke r10.<java.net.URL: java.io.InputStream openStream()>();

        goto label3;

     label2:
        $r11 = null;

     label3:
        return $r11;

     label4:
        $r4 = r1.<jdk.internal.loader.BuiltinClassLoader: java.util.Map nameToModule>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (java.lang.module.ModuleReference) $r5;

        if r12 == null goto label5;

        $r6 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.lang.module.ModuleReader moduleReaderFor(java.lang.module.ModuleReference)>(r12);

        $r7 = interfaceinvoke $r6.<java.lang.module.ModuleReader: java.util.Optional open(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $r9 = (java.io.InputStream) $r8;

        return $r9;

     label5:
        return null;
    }

    public java.net.URL findResource(java.lang.String)
    {
        java.lang.String r0, r1, $r9, $r10;
        java.util.Map $r2;
        java.lang.Object $r3, $r6;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r4;
        jdk.internal.loader.BuiltinClassLoader r5, $r8;
        boolean $z0, $z1, $z2, $z3;
        java.net.URL $r7, r14, r17, r19, $r20;
        java.lang.module.ModuleReference $r11;
        java.io.IOException $r12, $r13;
        java.util.List r16;

        r5 := @this: jdk.internal.loader.BuiltinClassLoader;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <jdk.internal.module.Resources: java.lang.String toPackageName(java.lang.String)>(r0);

        $r2 = <jdk.internal.loader.BuiltinClassLoader: java.util.Map packageToModule>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (jdk.internal.loader.BuiltinClassLoader$LoadedModule) $r3;

        if r4 == null goto label07;

        $r8 = virtualinvoke r4.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: jdk.internal.loader.BuiltinClassLoader loader()>();

        if $r8 != r5 goto label11;

     label01:
        $r9 = virtualinvoke r4.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.lang.String name()>();

        r14 = virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: java.net.URL findResource(java.lang.String,java.lang.String)>($r9, r0);

     label02:
        goto label04;

     label03:
        $r13 := @caughtexception;

        return null;

     label04:
        if r14 == null goto label06;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z1 != 0 goto label05;

        $r10 = virtualinvoke r14.<java.net.URL: java.lang.String toString()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z2 != 0 goto label05;

        $r11 = virtualinvoke r4.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.lang.module.ModuleReference mref()>();

        $z3 = virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: boolean isOpen(java.lang.module.ModuleReference,java.lang.String)>($r11, r1);

        if $z3 == 0 goto label06;

     label05:
        return r14;

     label06:
        goto label11;

     label07:
        r16 = virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: java.util.List findMiscResource(java.lang.String)>(r0);

        $z0 = interfaceinvoke r16.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label09;

        $r6 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(0);

        r17 = (java.net.URL) $r6;

        if r17 == null goto label09;

        $r7 = staticinvoke <jdk.internal.loader.BuiltinClassLoader: java.net.URL checkURL(java.net.URL)>(r17);

     label08:
        return $r7;

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

        return null;

     label11:
        r19 = virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: java.net.URL findResourceOnClassPath(java.lang.String)>(r0);

        $r20 = staticinvoke <jdk.internal.loader.BuiltinClassLoader: java.net.URL checkURL(java.net.URL)>(r19);

        return $r20;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label07 to label08 with label10;
    }

    public java.util.Enumeration findResources(java.lang.String) throws java.io.IOException
    {
        java.util.ArrayList $r0;
        java.lang.String r2, r3, $r11, $r12;
        java.util.Map $r4;
        java.lang.Object $r5, $r9;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r6;
        jdk.internal.loader.BuiltinClassLoader r7, $r10;
        java.util.List $r8;
        boolean $z0, $z2, $z4, $z5;
        java.lang.module.ModuleReference $r13;
        java.net.URL r14, r16, r17;
        java.util.Iterator r15;
        java.util.Enumeration r18;
        jdk.internal.loader.BuiltinClassLoader$1 $r19;

        r7 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r3 = staticinvoke <jdk.internal.module.Resources: java.lang.String toPackageName(java.lang.String)>(r2);

        $r4 = <jdk.internal.loader.BuiltinClassLoader: java.util.Map packageToModule>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (jdk.internal.loader.BuiltinClassLoader$LoadedModule) $r5;

        if r6 == null goto label3;

        $r10 = virtualinvoke r6.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: jdk.internal.loader.BuiltinClassLoader loader()>();

        if $r10 != r7 goto label6;

        $r11 = virtualinvoke r6.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.lang.String name()>();

        r14 = virtualinvoke r7.<jdk.internal.loader.BuiltinClassLoader: java.net.URL findResource(java.lang.String,java.lang.String)>($r11, r2);

        if r14 == null goto label2;

        $z2 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z2 != 0 goto label1;

        $r12 = virtualinvoke r14.<java.net.URL: java.lang.String toString()>();

        $z4 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z4 != 0 goto label1;

        $r13 = virtualinvoke r6.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.lang.module.ModuleReference mref()>();

        $z5 = virtualinvoke r7.<jdk.internal.loader.BuiltinClassLoader: boolean isOpen(java.lang.module.ModuleReference,java.lang.String)>($r13, r3);

        if $z5 == 0 goto label2;

     label1:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r14);

     label2:
        goto label6;

     label3:
        $r8 = virtualinvoke r7.<jdk.internal.loader.BuiltinClassLoader: java.util.List findMiscResource(java.lang.String)>(r2);

        r15 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.net.URL) $r9;

        r17 = staticinvoke <jdk.internal.loader.BuiltinClassLoader: java.net.URL checkURL(java.net.URL)>(r16);

        if r17 == null goto label5;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r17);

     label5:
        goto label4;

     label6:
        r18 = virtualinvoke r7.<jdk.internal.loader.BuiltinClassLoader: java.util.Enumeration findResourcesOnClassPath(java.lang.String)>(r2);

        $r19 = new jdk.internal.loader.BuiltinClassLoader$1;

        specialinvoke $r19.<jdk.internal.loader.BuiltinClassLoader$1: void <init>(jdk.internal.loader.BuiltinClassLoader,java.util.List,java.util.Enumeration)>(r7, $r0, r18);

        return $r19;
    }

    private java.util.List findMiscResource(java.lang.String) throws java.io.IOException
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.ref.SoftReference r1, $r8;
        java.lang.String r2;
        java.lang.Object $r3, $r5, $r9;
        jdk.internal.loader.BuiltinClassLoader$2 $r4;
        boolean $z0;
        java.util.concurrent.ConcurrentHashMap $r7;
        java.security.PrivilegedActionException $r10;
        java.lang.Throwable $r12;
        java.io.IOException $r13;
        java.util.Map $r14, r15;
        java.util.List r16, r17;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.lang.String;

        r1 = r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.ref.SoftReference resourceCache>;

        if r1 == null goto label1;

        $r9 = virtualinvoke r1.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r14 = (java.util.Map) $r9;

        goto label2;

     label1:
        $r14 = null;

     label2:
        r15 = $r14;

        if $r14 != null goto label3;

        $r7 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r7.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r15 = $r7;

        $r8 = new java.lang.ref.SoftReference;

        specialinvoke $r8.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r7);

        r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.ref.SoftReference resourceCache> = $r8;

        goto label4;

     label3:
        $r3 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r16 = (java.util.List) $r3;

        if r16 == null goto label4;

        return r16;

     label4:
        $r4 = new jdk.internal.loader.BuiltinClassLoader$2;

        specialinvoke $r4.<jdk.internal.loader.BuiltinClassLoader$2: void <init>(jdk.internal.loader.BuiltinClassLoader,java.lang.String)>(r0, r2);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r4);

        r17 = (java.util.List) $r5;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r12 = virtualinvoke $r10.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();

        $r13 = (java.io.IOException) $r12;

        throw $r13;

     label7:
        $z0 = staticinvoke <jdk.internal.misc.VM: boolean isModuleSystemInited()>();

        if $z0 == 0 goto label8;

        interfaceinvoke r15.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r2, r17);

     label8:
        return r17;

        catch java.security.PrivilegedActionException from label4 to label5 with label6;
    }

    private java.net.URL findResource(java.lang.module.ModuleReference, java.lang.String) throws java.io.IOException
    {
        java.lang.SecurityManager $r0;
        jdk.internal.loader.BuiltinClassLoader$3 $r1;
        jdk.internal.loader.BuiltinClassLoader r2;
        java.lang.module.ModuleReference r3;
        java.lang.String r4;
        java.lang.Object $r5, $r9;
        java.net.URL $r6;
        java.lang.module.ModuleReader $r7;
        java.util.Optional $r8;
        java.lang.Exception $r10;
        java.security.PrivilegedActionException $r11;
        java.lang.Throwable $r12;
        java.io.IOException $r13;
        java.net.URI r14;

        r2 := @this: jdk.internal.loader.BuiltinClassLoader;

        r3 := @parameter0: java.lang.module.ModuleReference;

        r4 := @parameter1: java.lang.String;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 != null goto label1;

        $r7 = virtualinvoke r2.<jdk.internal.loader.BuiltinClassLoader: java.lang.module.ModuleReader moduleReaderFor(java.lang.module.ModuleReference)>(r3);

        $r8 = interfaceinvoke $r7.<java.lang.module.ModuleReader: java.util.Optional find(java.lang.String)>(r4);

        $r9 = virtualinvoke $r8.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        r14 = (java.net.URI) $r9;

        goto label4;

     label1:
        $r1 = new jdk.internal.loader.BuiltinClassLoader$3;

        specialinvoke $r1.<jdk.internal.loader.BuiltinClassLoader$3: void <init>(jdk.internal.loader.BuiltinClassLoader,java.lang.module.ModuleReference,java.lang.String)>(r2, r3, r4);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r1);

        r14 = (java.net.URI) $r5;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke $r11.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();

        $r13 = (java.io.IOException) $r12;

        throw $r13;

     label4:
        if r14 == null goto label8;

     label5:
        $r6 = virtualinvoke r14.<java.net.URI: java.net.URL toURL()>();

     label6:
        return $r6;

     label7:
        $r10 := @caughtexception;

     label8:
        return null;

        catch java.security.PrivilegedActionException from label1 to label2 with label3;
        catch java.net.MalformedURLException from label5 to label6 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    private java.net.URL findResourceOrNull(java.lang.module.ModuleReference, java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.module.ModuleReference r1;
        java.lang.String r2;
        java.net.URL $r3;
        java.io.IOException $r4;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.module.ModuleReference;

        r2 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.net.URL findResource(java.lang.module.ModuleReference,java.lang.String)>(r1, r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.net.URL findResourceOnClassPath(java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        boolean $z0;
        java.lang.SecurityManager $r1;
        java.lang.String r2;
        java.security.PrivilegedAction r3;
        java.lang.Object $r4;
        java.net.URL $r5, $r7;
        jdk.internal.loader.URLClassPath $r6;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: boolean hasClassPath()>();

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r1 != null goto label1;

        $r6 = r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.URLClassPath ucp>;

        $r7 = virtualinvoke $r6.<jdk.internal.loader.URLClassPath: java.net.URL findResource(java.lang.String,boolean)>(r2, 0);

        return $r7;

     label1:
        r3 = staticinvoke <jdk.internal.loader.BuiltinClassLoader$lambda_findResourceOnClassPath_0__19: java.security.PrivilegedAction bootstrap$(jdk.internal.loader.BuiltinClassLoader,java.lang.String)>(r0, r2);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r3);

        $r5 = (java.net.URL) $r4;

        return $r5;

     label2:
        return null;
    }

    private java.util.Enumeration findResourcesOnClassPath(java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        boolean $z0;
        java.util.Enumeration $r1, $r6, $r8;
        java.lang.SecurityManager $r2;
        java.lang.String r3;
        java.security.PrivilegedAction r4;
        java.lang.Object $r5;
        jdk.internal.loader.URLClassPath $r7;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r3 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: boolean hasClassPath()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r2 != null goto label1;

        $r7 = r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.URLClassPath ucp>;

        $r8 = virtualinvoke $r7.<jdk.internal.loader.URLClassPath: java.util.Enumeration findResources(java.lang.String,boolean)>(r3, 0);

        return $r8;

     label1:
        r4 = staticinvoke <jdk.internal.loader.BuiltinClassLoader$lambda_findResourcesOnClassPath_1__20: java.security.PrivilegedAction bootstrap$(jdk.internal.loader.BuiltinClassLoader,java.lang.String)>(r0, r3);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r4);

        $r6 = (java.util.Enumeration) $r5;

        return $r6;

     label2:
        $r1 = staticinvoke <java.util.Collections: java.util.Enumeration emptyEnumeration()>();

        return $r1;
    }

    protected java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        boolean $z0, $z1;
        jdk.internal.loader.BuiltinClassLoader r0, $r4;
        java.lang.String r1;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r2;
        java.lang.ClassNotFoundException $r3, $r5;
        java.lang.Class r6;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <jdk.internal.misc.VM: boolean isModuleSystemInited()>();

        if $z0 != 0 goto label1;

        $r5 = new java.lang.ClassNotFoundException;

        specialinvoke $r5.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

     label1:
        r2 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.BuiltinClassLoader$LoadedModule findLoadedModule(java.lang.String)>(r1);

        r6 = null;

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: jdk.internal.loader.BuiltinClassLoader loader()>();

        if $r4 != r0 goto label3;

        r6 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class findClassInModuleOrNull(jdk.internal.loader.BuiltinClassLoader$LoadedModule,java.lang.String)>(r2, r1);

        goto label3;

     label2:
        $z1 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: boolean hasClassPath()>();

        if $z1 == 0 goto label3;

        r6 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class findClassOnClassPathOrNull(java.lang.String)>(r1);

     label3:
        if r6 != null goto label4;

        $r3 = new java.lang.ClassNotFoundException;

        specialinvoke $r3.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;

     label4:
        return r6;
    }

    protected java.lang.Class findClass(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2;
        jdk.internal.loader.BuiltinClassLoader r1, $r6;
        boolean $z0, $z1;
        java.lang.Class $r3, $r5;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r4;
        java.lang.AssertionError $r7;

        r1 := @this: jdk.internal.loader.BuiltinClassLoader;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        r4 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.BuiltinClassLoader$LoadedModule findLoadedModule(java.lang.String,java.lang.String)>(r0, r2);

        if r4 != null goto label1;

        return null;

     label1:
        $z1 = <jdk.internal.loader.BuiltinClassLoader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r6 = virtualinvoke r4.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: jdk.internal.loader.BuiltinClassLoader loader()>();

        if $r6 == r1 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r5 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class findClassInModuleOrNull(jdk.internal.loader.BuiltinClassLoader$LoadedModule,java.lang.String)>(r4, r2);

        return $r5;

     label3:
        $z0 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: boolean hasClassPath()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class findClassOnClassPathOrNull(java.lang.String)>(r2);

        return $r3;

     label4:
        return null;
    }

    protected java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Class r2;
        java.lang.ClassNotFoundException $r3;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class loadClassOrNull(java.lang.String,boolean)>(r1, z0);

        if r2 != null goto label1;

        $r3 = new java.lang.ClassNotFoundException;

        specialinvoke $r3.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;

     label1:
        return r2;
    }

    protected java.lang.Class loadClassOrNull(java.lang.String, boolean)
    {
        jdk.internal.loader.BuiltinClassLoader r0, $r5, $r6, r7;
        java.lang.String r1;
        java.lang.Object $r2;
        boolean z0, $z1, $z2, $z3;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r4;
        java.lang.Throwable $r8;
        java.lang.Class r10;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Object getClassLoadingLock(java.lang.String)>(r1);

        entermonitor $r2;

     label01:
        r10 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class findLoadedClass(java.lang.String)>(r1);

        if r10 != null goto label06;

        r4 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.BuiltinClassLoader$LoadedModule findLoadedModule(java.lang.String)>(r1);

        if r4 == null goto label04;

        r7 = virtualinvoke r4.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: jdk.internal.loader.BuiltinClassLoader loader()>();

        if r7 != r0 goto label02;

        $z3 = staticinvoke <jdk.internal.misc.VM: boolean isModuleSystemInited()>();

        if $z3 == 0 goto label03;

        r10 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class findClassInModuleOrNull(jdk.internal.loader.BuiltinClassLoader$LoadedModule,java.lang.String)>(r4, r1);

        goto label03;

     label02:
        r10 = virtualinvoke r7.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class loadClassOrNull(java.lang.String)>(r1);

     label03:
        goto label06;

     label04:
        $r5 = r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.BuiltinClassLoader parent>;

        if $r5 == null goto label05;

        $r6 = r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.BuiltinClassLoader parent>;

        r10 = virtualinvoke $r6.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class loadClassOrNull(java.lang.String)>(r1);

     label05:
        if r10 != null goto label06;

        $z1 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: boolean hasClassPath()>();

        if $z1 == 0 goto label06;

        $z2 = staticinvoke <jdk.internal.misc.VM: boolean isModuleSystemInited()>();

        if $z2 == 0 goto label06;

        r10 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class findClassOnClassPathOrNull(java.lang.String)>(r1);

     label06:
        if z0 == 0 goto label07;

        if r10 == null goto label07;

        virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: void resolveClass(java.lang.Class)>(r10);

     label07:
        exitmonitor $r2;

     label08:
        return r10;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected final java.lang.Class loadClassOrNull(java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1;
        java.lang.Class $r2;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class loadClassOrNull(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    private jdk.internal.loader.BuiltinClassLoader$LoadedModule findLoadedModule(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0;
        java.util.Map $r2;
        java.lang.Object $r3;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule $r4;
        jdk.internal.loader.BuiltinClassLoader r5;

        r5 := @this: jdk.internal.loader.BuiltinClassLoader;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 >= 0 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r2 = <jdk.internal.loader.BuiltinClassLoader: java.util.Map packageToModule>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (jdk.internal.loader.BuiltinClassLoader$LoadedModule) $r3;

        return $r4;
    }

    private jdk.internal.loader.BuiltinClassLoader$LoadedModule findLoadedModule(java.lang.String, java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1, r3, $r4;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r2;
        boolean $z0;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.BuiltinClassLoader$LoadedModule findLoadedModule(java.lang.String)>(r1);

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.lang.String name()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return r2;

     label1:
        return null;
    }

    private java.lang.Class findClassInModuleOrNull(jdk.internal.loader.BuiltinClassLoader$LoadedModule, java.lang.String)
    {
        java.lang.SecurityManager $r0;
        jdk.internal.loader.BuiltinClassLoader r1;
        java.lang.String r2;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r3;
        java.security.PrivilegedAction r4;
        java.lang.Object $r5;
        java.lang.Class $r6, $r7;

        r1 := @this: jdk.internal.loader.BuiltinClassLoader;

        r3 := @parameter0: jdk.internal.loader.BuiltinClassLoader$LoadedModule;

        r2 := @parameter1: java.lang.String;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 != null goto label1;

        $r7 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class defineClass(java.lang.String,jdk.internal.loader.BuiltinClassLoader$LoadedModule)>(r2, r3);

        return $r7;

     label1:
        r4 = staticinvoke <jdk.internal.loader.BuiltinClassLoader$lambda_findClassInModuleOrNull_2__21: java.security.PrivilegedAction bootstrap$(jdk.internal.loader.BuiltinClassLoader,java.lang.String,jdk.internal.loader.BuiltinClassLoader$LoadedModule)>(r1, r2, r3);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(r4);

        $r6 = (java.lang.Class) $r5;

        return $r6;
    }

    private java.lang.Class findClassOnClassPathOrNull(java.lang.String)
    {
        java.lang.String r0, $r1, r2;
        java.lang.SecurityManager $r3;
        jdk.internal.loader.BuiltinClassLoader$4 $r4;
        jdk.internal.loader.BuiltinClassLoader r5;
        java.lang.Object $r6;
        java.lang.Class $r7, $r9;
        jdk.internal.loader.URLClassPath $r8;
        java.io.IOException $r10;
        jdk.internal.loader.Resource r12;

        r5 := @this: jdk.internal.loader.BuiltinClassLoader;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String concat(java.lang.String)>(".class");

        $r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r3 != null goto label5;

        $r8 = r5.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.URLClassPath ucp>;

        r12 = virtualinvoke $r8.<jdk.internal.loader.URLClassPath: jdk.internal.loader.Resource getResource(java.lang.String,boolean)>(r2, 0);

        if r12 == null goto label4;

     label1:
        $r9 = virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class defineClass(java.lang.String,jdk.internal.loader.Resource)>(r0, r12);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

     label4:
        return null;

     label5:
        $r4 = new jdk.internal.loader.BuiltinClassLoader$4;

        specialinvoke $r4.<jdk.internal.loader.BuiltinClassLoader$4: void <init>(jdk.internal.loader.BuiltinClassLoader,java.lang.String,java.lang.String)>(r5, r2, r0);

        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);

        $r7 = (java.lang.Class) $r6;

        return $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.Class defineClass(java.lang.String, jdk.internal.loader.BuiltinClassLoader$LoadedModule)
    {
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r0;
        java.lang.module.ModuleReference r1;
        jdk.internal.loader.BuiltinClassLoader r2;
        java.lang.module.ModuleReader r3;
        java.lang.String r4, $r5, r6;
        boolean $z0;
        java.util.Optional $r7;
        java.lang.Object $r8;
        java.security.CodeSource $r9;
        java.security.CodeSigner[] $r10;
        java.lang.Class r11;
        jdk.internal.module.ModulePatcher$PatchedModuleReader $r12;
        java.io.IOException $r13;
        java.lang.Throwable $r14;
        java.nio.ByteBuffer r16;
        java.net.URL r17;
        jdk.internal.loader.Resource r18;

        r2 := @this: jdk.internal.loader.BuiltinClassLoader;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: jdk.internal.loader.BuiltinClassLoader$LoadedModule;

        r1 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.lang.module.ModuleReference mref()>();

        r3 = virtualinvoke r2.<jdk.internal.loader.BuiltinClassLoader: java.lang.module.ModuleReader moduleReaderFor(java.lang.module.ModuleReference)>(r1);

     label01:
        r16 = null;

        r17 = null;

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r6 = virtualinvoke $r5.<java.lang.String: java.lang.String concat(java.lang.String)>(".class");

        $z0 = r3 instanceof jdk.internal.module.ModulePatcher$PatchedModuleReader;

        if $z0 == 0 goto label03;

        $r12 = (jdk.internal.module.ModulePatcher$PatchedModuleReader) r3;

        r18 = virtualinvoke $r12.<jdk.internal.module.ModulePatcher$PatchedModuleReader: jdk.internal.loader.Resource findResource(java.lang.String)>(r6);

        if r18 == null goto label02;

        r16 = virtualinvoke r18.<jdk.internal.loader.Resource: java.nio.ByteBuffer getByteBuffer()>();

        r17 = virtualinvoke r18.<jdk.internal.loader.Resource: java.net.URL getCodeSourceURL()>();

     label02:
        goto label04;

     label03:
        $r7 = interfaceinvoke r3.<java.lang.module.ModuleReader: java.util.Optional read(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        r16 = (java.nio.ByteBuffer) $r8;

        r17 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader$LoadedModule: java.net.URL codeSourceURL()>();

     label04:
        if r16 != null goto label06;

     label05:
        return null;

     label06:
        $r9 = new java.security.CodeSource;

        $r10 = (java.security.CodeSigner[]) null;

        specialinvoke $r9.<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>(r17, $r10);

     label07:
        r11 = virtualinvoke r2.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.CodeSource)>(r4, r16, $r9);

     label08:
        interfaceinvoke r3.<java.lang.module.ModuleReader: void release(java.nio.ByteBuffer)>(r16);

     label09:
        return r11;

     label10:
        $r14 := @caughtexception;

     label11:
        interfaceinvoke r3.<java.lang.module.ModuleReader: void release(java.nio.ByteBuffer)>(r16);

        throw $r14;

     label12:
        $r13 := @caughtexception;

        return null;

        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.io.IOException from label01 to label05 with label12;
        catch java.io.IOException from label06 to label09 with label12;
        catch java.io.IOException from label10 to label12 with label12;
    }

    private java.lang.Class defineClass(java.lang.String, jdk.internal.loader.Resource) throws java.io.IOException
    {
        jdk.internal.loader.Resource r0;
        java.net.URL r1;
        java.lang.String r2, r10;
        int i0, $i1;
        java.security.CodeSource $r3, $r7;
        jdk.internal.loader.BuiltinClassLoader r5;
        java.lang.Class $r6, $r8;
        java.util.jar.Manifest r11;
        java.nio.ByteBuffer r12;
        java.security.CodeSigner[] r13, r16;
        byte[] r15;

        r5 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: jdk.internal.loader.Resource;

        r1 = virtualinvoke r0.<jdk.internal.loader.Resource: java.net.URL getCodeSourceURL()>();

        i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 == -1 goto label1;

        r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r11 = virtualinvoke r0.<jdk.internal.loader.Resource: java.util.jar.Manifest getManifest()>();

        virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: java.lang.Package defineOrCheckPackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r10, r11, r1);

     label1:
        r12 = virtualinvoke r0.<jdk.internal.loader.Resource: java.nio.ByteBuffer getByteBuffer()>();

        if r12 == null goto label2;

        r13 = virtualinvoke r0.<jdk.internal.loader.Resource: java.security.CodeSigner[] getCodeSigners()>();

        $r7 = new java.security.CodeSource;

        specialinvoke $r7.<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>(r1, r13);

        $r8 = virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.CodeSource)>(r2, r12, $r7);

        return $r8;

     label2:
        r15 = virtualinvoke r0.<jdk.internal.loader.Resource: byte[] getBytes()>();

        r16 = virtualinvoke r0.<jdk.internal.loader.Resource: java.security.CodeSigner[] getCodeSigners()>();

        $r3 = new java.security.CodeSource;

        specialinvoke $r3.<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>(r1, r16);

        $i1 = lengthof r15;

        $r6 = virtualinvoke r5.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>(r2, r15, 0, $i1, $r3);

        return $r6;
    }

    protected java.lang.Package defineOrCheckPackage(java.lang.String, java.util.jar.Manifest, java.net.URL)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1, $r10;
        java.util.jar.Manifest r2;
        java.net.URL r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.InternalError $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.Package r11;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.jar.Manifest;

        r3 := @parameter2: java.net.URL;

        r11 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Package getAndVerifyPackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r1, r2, r3);

        if r11 != null goto label5;

     label1:
        if r2 == null goto label2;

        r11 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r1, r2, r3);

        goto label3;

     label2:
        r11 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r1, null, null, null, null, null, null, null);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        r11 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Package getAndVerifyPackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r1, r2, r3);

        if r11 != null goto label5;

        $r6 = new java.lang.InternalError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find package: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.InternalError: void <init>(java.lang.String)>($r10);

        throw $r6;

     label5:
        return r11;

        catch java.lang.IllegalArgumentException from label1 to label3 with label4;
    }

    private java.lang.Package getAndVerifyPackage(java.lang.String, java.util.jar.Manifest, java.net.URL)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1, $r9, $r16;
        java.lang.Package r2;
        boolean $z0, $z1, $z2;
        java.util.jar.Manifest r3;
        java.lang.SecurityException $r4, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r15;
        java.net.URL r10;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.jar.Manifest;

        r10 := @parameter2: java.net.URL;

        r2 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Package getDefinedPackage(java.lang.String)>(r1);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<java.lang.Package: boolean isSealed()>();

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.Package: boolean isSealed(java.net.URL)>(r10);

        if $z2 != 0 goto label2;

        $r11 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sealing violation: package ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is sealed");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label1:
        if r3 == null goto label2;

        $z1 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: boolean isSealed(java.lang.String,java.util.jar.Manifest)>(r1, r3);

        if $z1 == 0 goto label2;

        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sealing violation: can\'t seal package ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": already defined");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        return r2;
    }

    private java.lang.Package definePackage(java.lang.String, java.util.jar.Manifest, java.net.URL)
    {
        java.util.jar.Manifest r0;
        jdk.internal.loader.BuiltinClassLoader r1;
        java.lang.String r2, $r4, $r5, r21, r22, r23, r24, r25, r26, r27, $r31;
        jdk.internal.access.JavaUtilJarAccess $r3;
        java.net.URL r6, r28;
        java.util.jar.Attributes$Name $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.util.jar.Attributes r29, r30;
        boolean $z0;
        java.lang.Package $r32;

        r1 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.jar.Manifest;

        r6 := @parameter2: java.net.URL;

        r21 = null;

        r22 = null;

        r23 = null;

        r24 = null;

        r25 = null;

        r26 = null;

        r27 = null;

        r28 = null;

        if r0 == null goto label9;

        $r3 = staticinvoke <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess()>();

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String concat(java.lang.String)>("/");

        r29 = interfaceinvoke $r3.<jdk.internal.access.JavaUtilJarAccess: java.util.jar.Attributes getTrustedAttributes(java.util.jar.Manifest,java.lang.String)>(r0, $r5);

        if r29 == null goto label1;

        $r14 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;

        r21 = virtualinvoke r29.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r14);

        $r15 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;

        r22 = virtualinvoke r29.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r15);

        $r16 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;

        r23 = virtualinvoke r29.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r16);

        $r17 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;

        r24 = virtualinvoke r29.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r17);

        $r18 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;

        r25 = virtualinvoke r29.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r18);

        $r19 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;

        r26 = virtualinvoke r29.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r19);

        $r20 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;

        r27 = virtualinvoke r29.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r20);

     label1:
        r30 = virtualinvoke r0.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();

        if r30 == null goto label8;

        if r21 != null goto label2;

        $r13 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;

        r21 = virtualinvoke r30.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r13);

     label2:
        if r22 != null goto label3;

        $r12 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;

        r22 = virtualinvoke r30.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r12);

     label3:
        if r23 != null goto label4;

        $r11 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;

        r23 = virtualinvoke r30.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r11);

     label4:
        if r24 != null goto label5;

        $r10 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;

        r24 = virtualinvoke r30.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r10);

     label5:
        if r25 != null goto label6;

        $r9 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;

        r25 = virtualinvoke r30.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r9);

     label6:
        if r26 != null goto label7;

        $r8 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;

        r26 = virtualinvoke r30.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r8);

     label7:
        if r27 != null goto label8;

        $r7 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;

        r27 = virtualinvoke r30.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r7);

     label8:
        $r31 = "true";

        $z0 = virtualinvoke $r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r27);

        if $z0 == 0 goto label9;

        r28 = r6;

     label9:
        $r32 = virtualinvoke r1.<jdk.internal.loader.BuiltinClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r2, r21, r22, r23, r24, r25, r26, r28);

        return $r32;
    }

    private boolean isSealed(java.lang.String, java.util.jar.Manifest)
    {
        jdk.internal.access.JavaUtilJarAccess $r0;
        java.util.jar.Manifest r1;
        java.lang.String r2, $r3, $r4, r10, $r12;
        java.util.jar.Attributes $r5, r9;
        java.util.jar.Attributes$Name $r6, $r7;
        jdk.internal.loader.BuiltinClassLoader r8;
        boolean $z0;

        r8 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.jar.Manifest;

        $r0 = staticinvoke <jdk.internal.access.SharedSecrets: jdk.internal.access.JavaUtilJarAccess javaUtilJarAccess()>();

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>("/");

        r9 = interfaceinvoke $r0.<jdk.internal.access.JavaUtilJarAccess: java.util.jar.Attributes getTrustedAttributes(java.util.jar.Manifest,java.lang.String)>(r1, $r4);

        r10 = null;

        if r9 == null goto label1;

        $r7 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;

        r10 = virtualinvoke r9.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r7);

     label1:
        if r10 != null goto label2;

        $r5 = virtualinvoke r1.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();

        if $r5 == null goto label2;

        $r6 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;

        r10 = virtualinvoke $r5.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r6);

     label2:
        $r12 = "true";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        return $z0;
    }

    protected java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        sun.security.util.LazyCodeSourcePermissionCollection $r0;
        jdk.internal.loader.BuiltinClassLoader r1;
        java.security.CodeSource r2;
        java.security.PermissionCollection $r3;

        r1 := @this: jdk.internal.loader.BuiltinClassLoader;

        r2 := @parameter0: java.security.CodeSource;

        $r0 = new sun.security.util.LazyCodeSourcePermissionCollection;

        $r3 = specialinvoke r1.<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>(r2);

        specialinvoke $r0.<sun.security.util.LazyCodeSourcePermissionCollection: void <init>(java.security.PermissionCollection,java.security.CodeSource)>($r3, r2);

        return $r0;
    }

    private java.lang.module.ModuleReader moduleReaderFor(java.lang.module.ModuleReference)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.module.ModuleReference r1;
        java.util.Map $r2, $r6;
        java.lang.Object $r3, $r7;
        jdk.internal.loader.BuiltinClassLoader$5 $r4;
        java.lang.module.ModuleReader r8;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.module.ModuleReference;

        $r2 = r0.<jdk.internal.loader.BuiltinClassLoader: java.util.Map moduleToReader>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.lang.module.ModuleReader) $r3;

        if r8 != null goto label1;

        $r4 = new jdk.internal.loader.BuiltinClassLoader$5;

        specialinvoke $r4.<jdk.internal.loader.BuiltinClassLoader$5: void <init>(jdk.internal.loader.BuiltinClassLoader,java.lang.module.ModuleReference)>(r0, r1);

        $r6 = r0.<jdk.internal.loader.BuiltinClassLoader: java.util.Map moduleToReader>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(r1, $r4);

        r8 = (java.lang.module.ModuleReader) $r7;

     label1:
        return r8;
    }

    private boolean isOpen(java.lang.module.ModuleReference, java.lang.String)
    {
        java.lang.module.ModuleReference r0;
        java.lang.module.ModuleDescriptor r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r2;
        java.util.Iterator r3;
        java.lang.Object $r4;
        java.lang.module.ModuleDescriptor$Opens r5;
        java.lang.String r6, r7;
        jdk.internal.loader.BuiltinClassLoader r8;

        r8 := @this: jdk.internal.loader.BuiltinClassLoader;

        r0 := @parameter0: java.lang.module.ModuleReference;

        r7 := @parameter1: java.lang.String;

        r1 = virtualinvoke r0.<java.lang.module.ModuleReference: java.lang.module.ModuleDescriptor descriptor()>();

        $z0 = virtualinvoke r1.<java.lang.module.ModuleDescriptor: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.module.ModuleDescriptor: boolean isAutomatic()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r2 = virtualinvoke r1.<java.lang.module.ModuleDescriptor: java.util.Set opens()>();

        r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.module.ModuleDescriptor$Opens) $r4;

        r6 = virtualinvoke r5.<java.lang.module.ModuleDescriptor$Opens: java.lang.String source()>();

        $z3 = virtualinvoke r5.<java.lang.module.ModuleDescriptor$Opens: boolean isQualified()>();

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z4 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;
    }

    private static java.net.URL checkURL(java.net.URL)
    {
        java.net.URL r0, $r1;

        r0 := @parameter0: java.net.URL;

        $r1 = staticinvoke <jdk.internal.loader.URLClassPath: java.net.URL checkURL(java.net.URL)>(r0);

        return $r1;
    }

    public java.lang.Class lambda$findClassInModuleOrNull$2(java.lang.String, jdk.internal.loader.BuiltinClassLoader$LoadedModule)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1;
        jdk.internal.loader.BuiltinClassLoader$LoadedModule r2;
        java.lang.Class $r3;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: jdk.internal.loader.BuiltinClassLoader$LoadedModule;

        $r3 = virtualinvoke r0.<jdk.internal.loader.BuiltinClassLoader: java.lang.Class defineClass(java.lang.String,jdk.internal.loader.BuiltinClassLoader$LoadedModule)>(r1, r2);

        return $r3;
    }

    public java.util.Enumeration lambda$findResourcesOnClassPath$1(java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1;
        jdk.internal.loader.URLClassPath $r2;
        java.util.Enumeration $r3;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.URLClassPath ucp>;

        $r3 = virtualinvoke $r2.<jdk.internal.loader.URLClassPath: java.util.Enumeration findResources(java.lang.String,boolean)>(r1, 0);

        return $r3;
    }

    public java.net.URL lambda$findResourceOnClassPath$0(java.lang.String)
    {
        jdk.internal.loader.BuiltinClassLoader r0;
        java.lang.String r1;
        jdk.internal.loader.URLClassPath $r2;
        java.net.URL $r3;

        r0 := @this: jdk.internal.loader.BuiltinClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jdk.internal.loader.BuiltinClassLoader: jdk.internal.loader.URLClassPath ucp>;

        $r3 = virtualinvoke $r2.<jdk.internal.loader.URLClassPath: java.net.URL findResource(java.lang.String,boolean)>(r1, 0);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1, $z2;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.lang.InternalError $r2;

        $r0 = class "Ljdk/internal/loader/BuiltinClassLoader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        <jdk.internal.loader.BuiltinClassLoader: boolean $assertionsDisabled> = $z2;

        $z1 = staticinvoke <java.lang.ClassLoader: boolean registerAsParallelCapable()>();

        if $z1 != 0 goto label3;

        $r2 = new java.lang.InternalError;

        specialinvoke $r2.<java.lang.InternalError: void <init>(java.lang.String)>("Unable to register as parallel capable");

        throw $r2;

     label3:
        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(1024);

        <jdk.internal.loader.BuiltinClassLoader: java.util.Map packageToModule> = $r1;

        return;
    }
}

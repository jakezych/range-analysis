public class jdk.internal.org.objectweb.asm.Label extends java.lang.Object
{
    static final int FLAG_DEBUG_ONLY;
    static final int FLAG_JUMP_TARGET;
    static final int FLAG_RESOLVED;
    static final int FLAG_REACHABLE;
    static final int FLAG_SUBROUTINE_CALLER;
    static final int FLAG_SUBROUTINE_START;
    static final int FLAG_SUBROUTINE_END;
    static final int LINE_NUMBERS_CAPACITY_INCREMENT;
    static final int FORWARD_REFERENCES_CAPACITY_INCREMENT;
    static final int FORWARD_REFERENCE_TYPE_MASK;
    static final int FORWARD_REFERENCE_TYPE_SHORT;
    static final int FORWARD_REFERENCE_TYPE_WIDE;
    static final int FORWARD_REFERENCE_HANDLE_MASK;
    static final jdk.internal.org.objectweb.asm.Label EMPTY_LIST;
    public java.lang.Object info;
    short flags;
    private short lineNumber;
    private int[] otherLineNumbers;
    int bytecodeOffset;
    private int[] forwardReferences;
    short inputStackSize;
    short outputStackSize;
    short outputStackMax;
    short subroutineId;
    jdk.internal.org.objectweb.asm.Frame frame;
    jdk.internal.org.objectweb.asm.Label nextBasicBlock;
    jdk.internal.org.objectweb.asm.Edge outgoingEdges;
    jdk.internal.org.objectweb.asm.Label nextListElement;

    public void <init>()
    {
        jdk.internal.org.objectweb.asm.Label r0;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getOffset()
    {
        jdk.internal.org.objectweb.asm.Label r0;
        short $s0;
        int $i1, $i2;
        java.lang.IllegalStateException $r1;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        $s0 = r0.<jdk.internal.org.objectweb.asm.Label: short flags>;

        $i1 = $s0 & 4;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Label offset position has not been resolved yet");

        throw $r1;

     label1:
        $i2 = r0.<jdk.internal.org.objectweb.asm.Label: int bytecodeOffset>;

        return $i2;
    }

    final jdk.internal.org.objectweb.asm.Label getCanonicalInstance()
    {
        jdk.internal.org.objectweb.asm.Label r0, $r3;
        jdk.internal.org.objectweb.asm.Frame $r1, $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        if $r1 != null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Frame frame>;

        $r3 = $r2.<jdk.internal.org.objectweb.asm.Frame: jdk.internal.org.objectweb.asm.Label owner>;

     label2:
        return $r3;
    }

    final void addLineNumber(int)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        short $s0, $s10;
        int[] $r1, $r2, $r3, $r4, $r5, r6, $r7, $r8, $r9;
        int $i1, $i2, $i4, i5, $i6, $i7, $i8;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        i5 := @parameter0: int;

        $s0 = r0.<jdk.internal.org.objectweb.asm.Label: short lineNumber>;

        if $s0 != 0 goto label1;

        $s10 = (short) i5;

        r0.<jdk.internal.org.objectweb.asm.Label: short lineNumber> = $s10;

        goto label4;

     label1:
        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        if $r1 != null goto label2;

        $r9 = newarray (int)[4];

        r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers> = $r9;

     label2:
        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $i1 = $r2[0];

        $i2 = $i1 + 1;

        $r2[0] = $i2;

        $r3 = r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $i4 = lengthof $r3;

        if $i2 < $i4 goto label3;

        $r5 = r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $i6 = lengthof $r5;

        $i7 = $i6 + 4;

        r6 = newarray (int)[$i7];

        $r8 = r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $r7 = r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $i8 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r6, 0, $i8);

        r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers> = r6;

     label3:
        $r4 = r0.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $r4[$i2] = i5;

     label4:
        return;
    }

    final void accept(jdk.internal.org.objectweb.asm.MethodVisitor, boolean)
    {
        jdk.internal.org.objectweb.asm.MethodVisitor r0;
        jdk.internal.org.objectweb.asm.Label r1;
        boolean z0;
        short $s0, $s1;
        int $i2, $i3, $i4, i5;
        int[] $r2, $r3, $r4;

        r1 := @this: jdk.internal.org.objectweb.asm.Label;

        r0 := @parameter0: jdk.internal.org.objectweb.asm.MethodVisitor;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLabel(jdk.internal.org.objectweb.asm.Label)>(r1);

        if z0 == 0 goto label2;

        $s0 = r1.<jdk.internal.org.objectweb.asm.Label: short lineNumber>;

        if $s0 == 0 goto label2;

        $s1 = r1.<jdk.internal.org.objectweb.asm.Label: short lineNumber>;

        $i2 = $s1 & 65535;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>($i2, r1);

        $r2 = r1.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        if $r2 == null goto label2;

        i5 = 1;

     label1:
        $r3 = r1.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $i3 = $r3[0];

        if i5 > $i3 goto label2;

        $r4 = r1.<jdk.internal.org.objectweb.asm.Label: int[] otherLineNumbers>;

        $i4 = $r4[i5];

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.MethodVisitor: void visitLineNumber(int,jdk.internal.org.objectweb.asm.Label)>($i4, r1);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    final void put(jdk.internal.org.objectweb.asm.ByteVector, int, boolean)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        short $s0;
        int $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        jdk.internal.org.objectweb.asm.ByteVector r1;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        r1 := @parameter0: jdk.internal.org.objectweb.asm.ByteVector;

        i2 := @parameter1: int;

        z0 := @parameter2: boolean;

        $s0 = r0.<jdk.internal.org.objectweb.asm.Label: short flags>;

        $i1 = $s0 & 4;

        if $i1 != 0 goto label2;

        if z0 == 0 goto label1;

        $i8 = r1.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.Label: void addForwardReference(int,int,int)>(i2, 536870912, $i8);

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>(-1);

        goto label4;

     label1:
        $i7 = r1.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        virtualinvoke r0.<jdk.internal.org.objectweb.asm.Label: void addForwardReference(int,int,int)>(i2, 268435456, $i7);

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>(-1);

        goto label4;

     label2:
        if z0 == 0 goto label3;

        $i5 = r0.<jdk.internal.org.objectweb.asm.Label: int bytecodeOffset>;

        $i6 = $i5 - i2;

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putInt(int)>($i6);

        goto label4;

     label3:
        $i3 = r0.<jdk.internal.org.objectweb.asm.Label: int bytecodeOffset>;

        $i4 = $i3 - i2;

        virtualinvoke r1.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putShort(int)>($i4);

     label4:
        return;
    }

    private void addForwardReference(int, int, int)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, r8, $r9, $r10, $r11;
        int $i0, $i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9, i10, i11;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        if $r1 != null goto label1;

        $r11 = newarray (int)[6];

        r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences> = $r11;

     label1:
        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        i9 = $r2[0];

        $i1 = i9 + 2;

        $r3 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label2;

        $r7 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        $i6 = lengthof $r7;

        $i7 = $i6 + 6;

        r8 = newarray (int)[$i7];

        $r10 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        $r9 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        $i8 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r8, 0, $i8);

        r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences> = r8;

     label2:
        $r4 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        i10 = i9 + 1;

        $r4[i10] = i2;

        $r5 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        i11 = i10 + 1;

        $i5 = i3 | i4;

        $r5[i11] = $i5;

        $r6 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        $r6[0] = i11;

        return;
    }

    final boolean resolve(byte[], int)
    {
        jdk.internal.org.objectweb.asm.Label r0;
        short $s0, $s2;
        int $i1, i3, $i4, i5, i6, i7, $i8, $i9, $i11, $i13, i17, $i18, $i20, i22, i23, i24, $i25, i28, i29, i30;
        int[] $r1, $r2, $r3, $r4;
        byte[] r5;
        byte $b10, $b12, $b14, $b15, $b16, $b19, $b21, $b26, $b27;
        boolean z0;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        r5 := @parameter0: byte[];

        i3 := @parameter1: int;

        $s0 = r0.<jdk.internal.org.objectweb.asm.Label: short flags>;

        $i1 = $s0 | 4;

        $s2 = (short) $i1;

        r0.<jdk.internal.org.objectweb.asm.Label: short flags> = $s2;

        r0.<jdk.internal.org.objectweb.asm.Label: int bytecodeOffset> = i3;

        $r1 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        if $r1 != null goto label1;

        return 0;

     label1:
        z0 = 0;

        $r2 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        i22 = $r2[0];

     label2:
        if i22 <= 0 goto label9;

        $r3 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        $i4 = i22 - 1;

        i5 = $r3[$i4];

        $r4 = r0.<jdk.internal.org.objectweb.asm.Label: int[] forwardReferences>;

        i6 = $r4[i22];

        i7 = i3 - i5;

        i23 = i6 & 268435455;

        $i8 = i6 & -268435456;

        if $i8 != 268435456 goto label7;

        if i7 < -32768 goto label3;

        if i7 <= 32767 goto label6;

     label3:
        $b16 = r5[i5];

        i17 = $b16 & 255;

        if i17 >= 198 goto label4;

        $i20 = i17 + 49;

        $b21 = (byte) $i20;

        r5[i5] = $b21;

        goto label5;

     label4:
        $i18 = i17 + 20;

        $b19 = (byte) $i18;

        r5[i5] = $b19;

     label5:
        z0 = 1;

     label6:
        i24 = i23 + 1;

        $i25 = i7 >>> 8;

        $b26 = (byte) $i25;

        r5[i23] = $b26;

        $b27 = (byte) i7;

        r5[i24] = $b27;

        goto label8;

     label7:
        i28 = i23 + 1;

        $i9 = i7 >>> 24;

        $b10 = (byte) $i9;

        r5[i23] = $b10;

        i29 = i28 + 1;

        $i11 = i7 >>> 16;

        $b12 = (byte) $i11;

        r5[i28] = $b12;

        i30 = i29 + 1;

        $i13 = i7 >>> 8;

        $b14 = (byte) $i13;

        r5[i29] = $b14;

        $b15 = (byte) i7;

        r5[i30] = $b15;

     label8:
        i22 = i22 + -2;

        goto label2;

     label9:
        return z0;
    }

    final void markSubroutine(short)
    {
        jdk.internal.org.objectweb.asm.Label r0, $r1, $r2, r3, r4;
        short $s0, s1;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        s1 := @parameter0: short;

        r4 = r0;

        $r1 = <jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label EMPTY_LIST>;

        r0.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement> = $r1;

     label1:
        $r2 = <jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label EMPTY_LIST>;

        if r4 == $r2 goto label3;

        r3 = r4;

        r4 = r4.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement>;

        r3.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement> = null;

        $s0 = r3.<jdk.internal.org.objectweb.asm.Label: short subroutineId>;

        if $s0 != 0 goto label2;

        r3.<jdk.internal.org.objectweb.asm.Label: short subroutineId> = s1;

        r4 = virtualinvoke r3.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label pushSuccessors(jdk.internal.org.objectweb.asm.Label)>(r4);

     label2:
        goto label1;

     label3:
        return;
    }

    final void addSubroutineRetSuccessors(jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.Label r0, $r1, $r2, $r3, r4, $r8, r9, r10, r11, r12, r13;
        short $s0, $s2, $s3, $s4;
        int $i1;
        jdk.internal.org.objectweb.asm.Edge $r5, $r6, $r7;

        r0 := @this: jdk.internal.org.objectweb.asm.Label;

        r4 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        r9 = <jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label EMPTY_LIST>;

        r10 = r0;

        $r1 = <jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label EMPTY_LIST>;

        r0.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement> = $r1;

     label1:
        $r2 = <jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label EMPTY_LIST>;

        if r10 == $r2 goto label3;

        r11 = r10;

        r12 = r10.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement>;

        r10.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement> = r9;

        r9 = r10;

        $s0 = r10.<jdk.internal.org.objectweb.asm.Label: short flags>;

        $i1 = $s0 & 64;

        if $i1 == 0 goto label2;

        $s3 = r10.<jdk.internal.org.objectweb.asm.Label: short subroutineId>;

        $s2 = r4.<jdk.internal.org.objectweb.asm.Label: short subroutineId>;

        if $s3 == $s2 goto label2;

        $r5 = new jdk.internal.org.objectweb.asm.Edge;

        $s4 = r10.<jdk.internal.org.objectweb.asm.Label: short outputStackSize>;

        $r6 = r4.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge outgoingEdges>;

        $r8 = $r6.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $r7 = r10.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge outgoingEdges>;

        specialinvoke $r5.<jdk.internal.org.objectweb.asm.Edge: void <init>(int,jdk.internal.org.objectweb.asm.Label,jdk.internal.org.objectweb.asm.Edge)>($s4, $r8, $r7);

        r10.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge outgoingEdges> = $r5;

     label2:
        r10 = virtualinvoke r11.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label pushSuccessors(jdk.internal.org.objectweb.asm.Label)>(r12);

        goto label1;

     label3:
        $r3 = <jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label EMPTY_LIST>;

        if r9 == $r3 goto label4;

        r13 = r9.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement>;

        r9.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement> = null;

        r9 = r13;

        goto label3;

     label4:
        return;
    }

    private jdk.internal.org.objectweb.asm.Label pushSuccessors(jdk.internal.org.objectweb.asm.Label)
    {
        jdk.internal.org.objectweb.asm.Label r0, r1, $r2, $r3, $r4, r7;
        short $s0;
        int $i1;
        jdk.internal.org.objectweb.asm.Edge $r5, $r6, r8;
        boolean $z1;

        r1 := @this: jdk.internal.org.objectweb.asm.Label;

        r0 := @parameter0: jdk.internal.org.objectweb.asm.Label;

        r7 = r0;

        r8 = r1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge outgoingEdges>;

     label1:
        if r8 == null goto label5;

        $s0 = r1.<jdk.internal.org.objectweb.asm.Label: short flags>;

        $i1 = $s0 & 16;

        if $i1 == 0 goto label2;

        $r5 = r1.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Edge outgoingEdges>;

        $r6 = $r5.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge nextEdge>;

        if r8 != $r6 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $r2 = r8.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $r3 = $r2.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement>;

        if $r3 != null goto label4;

        $r4 = r8.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

        $r4.<jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label nextListElement> = r7;

        r7 = r8.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Label successor>;

     label4:
        r8 = r8.<jdk.internal.org.objectweb.asm.Edge: jdk.internal.org.objectweb.asm.Edge nextEdge>;

        goto label1;

     label5:
        return r7;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        jdk.internal.org.objectweb.asm.Label r2;
        int $i0;
        java.lang.String $r4;

        r2 := @this: jdk.internal.org.objectweb.asm.Label;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        jdk.internal.org.objectweb.asm.Label $r0;

        <jdk.internal.org.objectweb.asm.Label: int FORWARD_REFERENCE_HANDLE_MASK> = 268435455;

        <jdk.internal.org.objectweb.asm.Label: int FORWARD_REFERENCE_TYPE_WIDE> = 536870912;

        <jdk.internal.org.objectweb.asm.Label: int FORWARD_REFERENCE_TYPE_SHORT> = 268435456;

        <jdk.internal.org.objectweb.asm.Label: int FORWARD_REFERENCE_TYPE_MASK> = -268435456;

        <jdk.internal.org.objectweb.asm.Label: int FORWARD_REFERENCES_CAPACITY_INCREMENT> = 6;

        <jdk.internal.org.objectweb.asm.Label: int LINE_NUMBERS_CAPACITY_INCREMENT> = 4;

        <jdk.internal.org.objectweb.asm.Label: int FLAG_SUBROUTINE_END> = 64;

        <jdk.internal.org.objectweb.asm.Label: int FLAG_SUBROUTINE_START> = 32;

        <jdk.internal.org.objectweb.asm.Label: int FLAG_SUBROUTINE_CALLER> = 16;

        <jdk.internal.org.objectweb.asm.Label: int FLAG_REACHABLE> = 8;

        <jdk.internal.org.objectweb.asm.Label: int FLAG_RESOLVED> = 4;

        <jdk.internal.org.objectweb.asm.Label: int FLAG_JUMP_TARGET> = 2;

        <jdk.internal.org.objectweb.asm.Label: int FLAG_DEBUG_ONLY> = 1;

        $r0 = new jdk.internal.org.objectweb.asm.Label;

        specialinvoke $r0.<jdk.internal.org.objectweb.asm.Label: void <init>()>();

        <jdk.internal.org.objectweb.asm.Label: jdk.internal.org.objectweb.asm.Label EMPTY_LIST> = $r0;

        return;
    }
}
